// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	client "perun.network/go-perun/client"

	mock "github.com/stretchr/testify/mock"

	perun "github.com/hyperledger-labs/perun-node"
)

// ChProposalResponder is an autogenerated mock type for the ChProposalResponder type
type ChProposalResponder struct {
	mock.Mock
}

// Accept provides a mock function with given fields: _a0, _a1
func (_m *ChProposalResponder) Accept(_a0 context.Context, _a1 *client.ChannelProposalAcc) (perun.Channel, error) {
	ret := _m.Called(_a0, _a1)

	var r0 perun.Channel
	if rf, ok := ret.Get(0).(func(context.Context, *client.ChannelProposalAcc) perun.Channel); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(perun.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *client.ChannelProposalAcc) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Reject provides a mock function with given fields: ctx, reason
func (_m *ChProposalResponder) Reject(ctx context.Context, reason string) error {
	ret := _m.Called(ctx, reason)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, reason)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Copyright (c) 2020 - for information on the respective copyright owner
// see the NOTICE file and/or the repository at
// https://github.com/hyperledger-labs/perun-node
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        v3.11.4
// source: api.proto

// Package grpc provides the interface for the user to access node, session and channel functionality.

package grpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Peer is used to identify a peer in the network.
type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias           string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	OffChainAddress string `protobuf:"bytes,2,opt,name=offChainAddress,proto3" json:"offChainAddress,omitempty"`
	CommAddress     string `protobuf:"bytes,3,opt,name=commAddress,proto3" json:"commAddress,omitempty"`
	CommType        string `protobuf:"bytes,4,opt,name=commType,proto3" json:"commType,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *Peer) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Peer) GetOffChainAddress() string {
	if x != nil {
		return x.OffChainAddress
	}
	return ""
}

func (x *Peer) GetCommAddress() string {
	if x != nil {
		return x.CommAddress
	}
	return ""
}

func (x *Peer) GetCommType() string {
	if x != nil {
		return x.CommType
	}
	return ""
}

// BalanceInfo represents the balanace of the corresponding alias
// and the curruncy used for specifying the amount.
type BalanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string                      `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Balances []*BalanceInfo_AliasBalance `protobuf:"bytes,2,rep,name=balances,proto3" json:"balances,omitempty"`
}

func (x *BalanceInfo) Reset() {
	*x = BalanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceInfo) ProtoMessage() {}

func (x *BalanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceInfo.ProtoReflect.Descriptor instead.
func (*BalanceInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *BalanceInfo) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *BalanceInfo) GetBalances() []*BalanceInfo_AliasBalance {
	if x != nil {
		return x.Balances
	}
	return nil
}

// PaymentChannel contains channelID, BalanceInfo and the current version of the channel
type PaymentChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID   string       `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Balanceinfo *BalanceInfo `protobuf:"bytes,2,opt,name=balanceinfo,proto3" json:"balanceinfo,omitempty"`
	Version     string       `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *PaymentChannel) Reset() {
	*x = PaymentChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentChannel) ProtoMessage() {}

func (x *PaymentChannel) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentChannel.ProtoReflect.Descriptor instead.
func (*PaymentChannel) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *PaymentChannel) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *PaymentChannel) GetBalanceinfo() *BalanceInfo {
	if x != nil {
		return x.Balanceinfo
	}
	return nil
}

func (x *PaymentChannel) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type MsgError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *MsgError) Reset() {
	*x = MsgError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgError) ProtoMessage() {}

func (x *MsgError) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgError.ProtoReflect.Descriptor instead.
func (*MsgError) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *MsgError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConfigReq) Reset() {
	*x = GetConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigReq) ProtoMessage() {}

func (x *GetConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigReq.ProtoReflect.Descriptor instead.
func (*GetConfigReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

type GetConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainAddress       string   `protobuf:"bytes,1,opt,name=chainAddress,proto3" json:"chainAddress,omitempty"`
	AdjudicatorAddress string   `protobuf:"bytes,2,opt,name=adjudicatorAddress,proto3" json:"adjudicatorAddress,omitempty"`
	AssetAddress       string   `protobuf:"bytes,3,opt,name=assetAddress,proto3" json:"assetAddress,omitempty"`
	CommTypes          []string `protobuf:"bytes,4,rep,name=commTypes,proto3" json:"commTypes,omitempty"`
	ContactTypes       []string `protobuf:"bytes,5,rep,name=contactTypes,proto3" json:"contactTypes,omitempty"`
}

func (x *GetConfigResp) Reset() {
	*x = GetConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResp) ProtoMessage() {}

func (x *GetConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResp.ProtoReflect.Descriptor instead.
func (*GetConfigResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetConfigResp) GetChainAddress() string {
	if x != nil {
		return x.ChainAddress
	}
	return ""
}

func (x *GetConfigResp) GetAdjudicatorAddress() string {
	if x != nil {
		return x.AdjudicatorAddress
	}
	return ""
}

func (x *GetConfigResp) GetAssetAddress() string {
	if x != nil {
		return x.AssetAddress
	}
	return ""
}

func (x *GetConfigResp) GetCommTypes() []string {
	if x != nil {
		return x.CommTypes
	}
	return nil
}

func (x *GetConfigResp) GetContactTypes() []string {
	if x != nil {
		return x.ContactTypes
	}
	return nil
}

type OpenSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigFile string `protobuf:"bytes,1,opt,name=configFile,proto3" json:"configFile,omitempty"`
}

func (x *OpenSessionReq) Reset() {
	*x = OpenSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionReq) ProtoMessage() {}

func (x *OpenSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSessionReq.ProtoReflect.Descriptor instead.
func (*OpenSessionReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *OpenSessionReq) GetConfigFile() string {
	if x != nil {
		return x.ConfigFile
	}
	return ""
}

type OpenSessionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*OpenSessionResp_MsgSuccess_
	//	*OpenSessionResp_Error
	Response isOpenSessionResp_Response `protobuf_oneof:"response"`
}

func (x *OpenSessionResp) Reset() {
	*x = OpenSessionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSessionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionResp) ProtoMessage() {}

func (x *OpenSessionResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSessionResp.ProtoReflect.Descriptor instead.
func (*OpenSessionResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (m *OpenSessionResp) GetResponse() isOpenSessionResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *OpenSessionResp) GetMsgSuccess() *OpenSessionResp_MsgSuccess {
	if x, ok := x.GetResponse().(*OpenSessionResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *OpenSessionResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*OpenSessionResp_Error); ok {
		return x.Error
	}
	return nil
}

type isOpenSessionResp_Response interface {
	isOpenSessionResp_Response()
}

type OpenSessionResp_MsgSuccess_ struct {
	MsgSuccess *OpenSessionResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type OpenSessionResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*OpenSessionResp_MsgSuccess_) isOpenSessionResp_Response() {}

func (*OpenSessionResp_Error) isOpenSessionResp_Response() {}

type TimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TimeReq) Reset() {
	*x = TimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeReq) ProtoMessage() {}

func (x *TimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeReq.ProtoReflect.Descriptor instead.
func (*TimeReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

type TimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TimeResp) Reset() {
	*x = TimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeResp) ProtoMessage() {}

func (x *TimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeResp.ProtoReflect.Descriptor instead.
func (*TimeResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *TimeResp) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type HelpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HelpReq) Reset() {
	*x = HelpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpReq) ProtoMessage() {}

func (x *HelpReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpReq.ProtoReflect.Descriptor instead.
func (*HelpReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

type HelpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apis []string `protobuf:"bytes,1,rep,name=apis,proto3" json:"apis,omitempty"`
}

func (x *HelpResp) Reset() {
	*x = HelpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpResp) ProtoMessage() {}

func (x *HelpResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpResp.ProtoReflect.Descriptor instead.
func (*HelpResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *HelpResp) GetApis() []string {
	if x != nil {
		return x.Apis
	}
	return nil
}

type AddContactReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Peer      *Peer  `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *AddContactReq) Reset() {
	*x = AddContactReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContactReq) ProtoMessage() {}

func (x *AddContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContactReq.ProtoReflect.Descriptor instead.
func (*AddContactReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *AddContactReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *AddContactReq) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type AddContactResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*AddContactResp_MsgSuccess_
	//	*AddContactResp_Error
	Response isAddContactResp_Response `protobuf_oneof:"response"`
}

func (x *AddContactResp) Reset() {
	*x = AddContactResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddContactResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContactResp) ProtoMessage() {}

func (x *AddContactResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContactResp.ProtoReflect.Descriptor instead.
func (*AddContactResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (m *AddContactResp) GetResponse() isAddContactResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AddContactResp) GetMsgSuccess() *AddContactResp_MsgSuccess {
	if x, ok := x.GetResponse().(*AddContactResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *AddContactResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*AddContactResp_Error); ok {
		return x.Error
	}
	return nil
}

type isAddContactResp_Response interface {
	isAddContactResp_Response()
}

type AddContactResp_MsgSuccess_ struct {
	MsgSuccess *AddContactResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type AddContactResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*AddContactResp_MsgSuccess_) isAddContactResp_Response() {}

func (*AddContactResp_Error) isAddContactResp_Response() {}

type GetContactReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Alias     string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *GetContactReq) Reset() {
	*x = GetContactReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactReq) ProtoMessage() {}

func (x *GetContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactReq.ProtoReflect.Descriptor instead.
func (*GetContactReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *GetContactReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *GetContactReq) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type GetContactResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetContactResp_MsgSuccess_
	//	*GetContactResp_Error
	Response isGetContactResp_Response `protobuf_oneof:"response"`
}

func (x *GetContactResp) Reset() {
	*x = GetContactResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactResp) ProtoMessage() {}

func (x *GetContactResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactResp.ProtoReflect.Descriptor instead.
func (*GetContactResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (m *GetContactResp) GetResponse() isGetContactResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetContactResp) GetMsgSuccess() *GetContactResp_MsgSuccess {
	if x, ok := x.GetResponse().(*GetContactResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *GetContactResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*GetContactResp_Error); ok {
		return x.Error
	}
	return nil
}

type isGetContactResp_Response interface {
	isGetContactResp_Response()
}

type GetContactResp_MsgSuccess_ struct {
	MsgSuccess *GetContactResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type GetContactResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*GetContactResp_MsgSuccess_) isGetContactResp_Response() {}

func (*GetContactResp_Error) isGetContactResp_Response() {}

type OpenPayChReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID        string       `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	PeerAlias        string       `protobuf:"bytes,2,opt,name=peerAlias,proto3" json:"peerAlias,omitempty"`
	OpeningBalance   *BalanceInfo `protobuf:"bytes,3,opt,name=openingBalance,proto3" json:"openingBalance,omitempty"`
	ChallengeDurSecs uint64       `protobuf:"varint,4,opt,name=challengeDurSecs,proto3" json:"challengeDurSecs,omitempty"`
}

func (x *OpenPayChReq) Reset() {
	*x = OpenPayChReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPayChReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPayChReq) ProtoMessage() {}

func (x *OpenPayChReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPayChReq.ProtoReflect.Descriptor instead.
func (*OpenPayChReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

func (x *OpenPayChReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *OpenPayChReq) GetPeerAlias() string {
	if x != nil {
		return x.PeerAlias
	}
	return ""
}

func (x *OpenPayChReq) GetOpeningBalance() *BalanceInfo {
	if x != nil {
		return x.OpeningBalance
	}
	return nil
}

func (x *OpenPayChReq) GetChallengeDurSecs() uint64 {
	if x != nil {
		return x.ChallengeDurSecs
	}
	return 0
}

type OpenPayChResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Resp:
	//	*OpenPayChResp_MsgSuccess_
	//	*OpenPayChResp_Error
	Resp isOpenPayChResp_Resp `protobuf_oneof:"resp"`
}

func (x *OpenPayChResp) Reset() {
	*x = OpenPayChResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPayChResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPayChResp) ProtoMessage() {}

func (x *OpenPayChResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPayChResp.ProtoReflect.Descriptor instead.
func (*OpenPayChResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

func (m *OpenPayChResp) GetResp() isOpenPayChResp_Resp {
	if m != nil {
		return m.Resp
	}
	return nil
}

func (x *OpenPayChResp) GetMsgSuccess() *OpenPayChResp_MsgSuccess {
	if x, ok := x.GetResp().(*OpenPayChResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *OpenPayChResp) GetError() *MsgError {
	if x, ok := x.GetResp().(*OpenPayChResp_Error); ok {
		return x.Error
	}
	return nil
}

type isOpenPayChResp_Resp interface {
	isOpenPayChResp_Resp()
}

type OpenPayChResp_MsgSuccess_ struct {
	MsgSuccess *OpenPayChResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type OpenPayChResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*OpenPayChResp_MsgSuccess_) isOpenPayChResp_Resp() {}

func (*OpenPayChResp_Error) isOpenPayChResp_Resp() {}

type GetPayChsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *GetPayChsReq) Reset() {
	*x = GetPayChsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChsReq) ProtoMessage() {}

func (x *GetPayChsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChsReq.ProtoReflect.Descriptor instead.
func (*GetPayChsReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

func (x *GetPayChsReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type GetPayChsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetPayChsResp_MsgSuccess_
	//	*GetPayChsResp_Error
	Response isGetPayChsResp_Response `protobuf_oneof:"response"`
}

func (x *GetPayChsResp) Reset() {
	*x = GetPayChsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChsResp) ProtoMessage() {}

func (x *GetPayChsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChsResp.ProtoReflect.Descriptor instead.
func (*GetPayChsResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (m *GetPayChsResp) GetResponse() isGetPayChsResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetPayChsResp) GetMsgSuccess() *GetPayChsResp_MsgSuccess {
	if x, ok := x.GetResponse().(*GetPayChsResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *GetPayChsResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*GetPayChsResp_Error); ok {
		return x.Error
	}
	return nil
}

type isGetPayChsResp_Response interface {
	isGetPayChsResp_Response()
}

type GetPayChsResp_MsgSuccess_ struct {
	MsgSuccess *GetPayChsResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type GetPayChsResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*GetPayChsResp_MsgSuccess_) isGetPayChsResp_Response() {}

func (*GetPayChsResp_Error) isGetPayChsResp_Response() {}

type SubPayChProposalsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *SubPayChProposalsReq) Reset() {
	*x = SubPayChProposalsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChProposalsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChProposalsReq) ProtoMessage() {}

func (x *SubPayChProposalsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChProposalsReq.ProtoReflect.Descriptor instead.
func (*SubPayChProposalsReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *SubPayChProposalsReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type SubPayChProposalsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*SubPayChProposalsResp_Notify_
	//	*SubPayChProposalsResp_Error
	Response isSubPayChProposalsResp_Response `protobuf_oneof:"response"`
}

func (x *SubPayChProposalsResp) Reset() {
	*x = SubPayChProposalsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChProposalsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChProposalsResp) ProtoMessage() {}

func (x *SubPayChProposalsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChProposalsResp.ProtoReflect.Descriptor instead.
func (*SubPayChProposalsResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21}
}

func (m *SubPayChProposalsResp) GetResponse() isSubPayChProposalsResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SubPayChProposalsResp) GetNotify() *SubPayChProposalsResp_Notify {
	if x, ok := x.GetResponse().(*SubPayChProposalsResp_Notify_); ok {
		return x.Notify
	}
	return nil
}

func (x *SubPayChProposalsResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*SubPayChProposalsResp_Error); ok {
		return x.Error
	}
	return nil
}

type isSubPayChProposalsResp_Response interface {
	isSubPayChProposalsResp_Response()
}

type SubPayChProposalsResp_Notify_ struct {
	Notify *SubPayChProposalsResp_Notify `protobuf:"bytes,1,opt,name=notify,proto3,oneof"`
}

type SubPayChProposalsResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SubPayChProposalsResp_Notify_) isSubPayChProposalsResp_Response() {}

func (*SubPayChProposalsResp_Error) isSubPayChProposalsResp_Response() {}

type UnsubPayChProposalsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *UnsubPayChProposalsReq) Reset() {
	*x = UnsubPayChProposalsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChProposalsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChProposalsReq) ProtoMessage() {}

func (x *UnsubPayChProposalsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChProposalsReq.ProtoReflect.Descriptor instead.
func (*UnsubPayChProposalsReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{22}
}

func (x *UnsubPayChProposalsReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type UnsubPayChProposalsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*UnsubPayChProposalsResp_MsgSuccess_
	//	*UnsubPayChProposalsResp_Error
	Response isUnsubPayChProposalsResp_Response `protobuf_oneof:"response"`
}

func (x *UnsubPayChProposalsResp) Reset() {
	*x = UnsubPayChProposalsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChProposalsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChProposalsResp) ProtoMessage() {}

func (x *UnsubPayChProposalsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChProposalsResp.ProtoReflect.Descriptor instead.
func (*UnsubPayChProposalsResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{23}
}

func (m *UnsubPayChProposalsResp) GetResponse() isUnsubPayChProposalsResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UnsubPayChProposalsResp) GetMsgSuccess() *UnsubPayChProposalsResp_MsgSuccess {
	if x, ok := x.GetResponse().(*UnsubPayChProposalsResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *UnsubPayChProposalsResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*UnsubPayChProposalsResp_Error); ok {
		return x.Error
	}
	return nil
}

type isUnsubPayChProposalsResp_Response interface {
	isUnsubPayChProposalsResp_Response()
}

type UnsubPayChProposalsResp_MsgSuccess_ struct {
	MsgSuccess *UnsubPayChProposalsResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type UnsubPayChProposalsResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*UnsubPayChProposalsResp_MsgSuccess_) isUnsubPayChProposalsResp_Response() {}

func (*UnsubPayChProposalsResp_Error) isUnsubPayChProposalsResp_Response() {}

type RespondPayChProposalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID  string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ProposalID string `protobuf:"bytes,2,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
	Accept     bool   `protobuf:"varint,3,opt,name=accept,proto3" json:"accept,omitempty"`
}

func (x *RespondPayChProposalReq) Reset() {
	*x = RespondPayChProposalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChProposalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChProposalReq) ProtoMessage() {}

func (x *RespondPayChProposalReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChProposalReq.ProtoReflect.Descriptor instead.
func (*RespondPayChProposalReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{24}
}

func (x *RespondPayChProposalReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *RespondPayChProposalReq) GetProposalID() string {
	if x != nil {
		return x.ProposalID
	}
	return ""
}

func (x *RespondPayChProposalReq) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

type RespondPayChProposalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*RespondPayChProposalResp_MsgSuccess_
	//	*RespondPayChProposalResp_Error
	Response isRespondPayChProposalResp_Response `protobuf_oneof:"response"`
}

func (x *RespondPayChProposalResp) Reset() {
	*x = RespondPayChProposalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChProposalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChProposalResp) ProtoMessage() {}

func (x *RespondPayChProposalResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChProposalResp.ProtoReflect.Descriptor instead.
func (*RespondPayChProposalResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{25}
}

func (m *RespondPayChProposalResp) GetResponse() isRespondPayChProposalResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RespondPayChProposalResp) GetMsgSuccess() *RespondPayChProposalResp_MsgSuccess {
	if x, ok := x.GetResponse().(*RespondPayChProposalResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *RespondPayChProposalResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*RespondPayChProposalResp_Error); ok {
		return x.Error
	}
	return nil
}

type isRespondPayChProposalResp_Response interface {
	isRespondPayChProposalResp_Response()
}

type RespondPayChProposalResp_MsgSuccess_ struct {
	MsgSuccess *RespondPayChProposalResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type RespondPayChProposalResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*RespondPayChProposalResp_MsgSuccess_) isRespondPayChProposalResp_Response() {}

func (*RespondPayChProposalResp_Error) isRespondPayChProposalResp_Response() {}

type SubPayChClosesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *SubPayChClosesReq) Reset() {
	*x = SubPayChClosesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChClosesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChClosesReq) ProtoMessage() {}

func (x *SubPayChClosesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChClosesReq.ProtoReflect.Descriptor instead.
func (*SubPayChClosesReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{26}
}

func (x *SubPayChClosesReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type SubPayChClosesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*SubPayChClosesResp_Notify_
	//	*SubPayChClosesResp_Error
	Response isSubPayChClosesResp_Response `protobuf_oneof:"response"`
}

func (x *SubPayChClosesResp) Reset() {
	*x = SubPayChClosesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChClosesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChClosesResp) ProtoMessage() {}

func (x *SubPayChClosesResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChClosesResp.ProtoReflect.Descriptor instead.
func (*SubPayChClosesResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{27}
}

func (m *SubPayChClosesResp) GetResponse() isSubPayChClosesResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SubPayChClosesResp) GetNotify() *SubPayChClosesResp_Notify {
	if x, ok := x.GetResponse().(*SubPayChClosesResp_Notify_); ok {
		return x.Notify
	}
	return nil
}

func (x *SubPayChClosesResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*SubPayChClosesResp_Error); ok {
		return x.Error
	}
	return nil
}

type isSubPayChClosesResp_Response interface {
	isSubPayChClosesResp_Response()
}

type SubPayChClosesResp_Notify_ struct {
	Notify *SubPayChClosesResp_Notify `protobuf:"bytes,1,opt,name=notify,proto3,oneof"`
}

type SubPayChClosesResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SubPayChClosesResp_Notify_) isSubPayChClosesResp_Response() {}

func (*SubPayChClosesResp_Error) isSubPayChClosesResp_Response() {}

type UnsubPayChClosesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *UnsubPayChClosesReq) Reset() {
	*x = UnsubPayChClosesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChClosesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChClosesReq) ProtoMessage() {}

func (x *UnsubPayChClosesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChClosesReq.ProtoReflect.Descriptor instead.
func (*UnsubPayChClosesReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{28}
}

func (x *UnsubPayChClosesReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type UnsubPayChClosesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*UnsubPayChClosesResp_MsgSuccess_
	//	*UnsubPayChClosesResp_Error
	Response isUnsubPayChClosesResp_Response `protobuf_oneof:"response"`
}

func (x *UnsubPayChClosesResp) Reset() {
	*x = UnsubPayChClosesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChClosesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChClosesResp) ProtoMessage() {}

func (x *UnsubPayChClosesResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChClosesResp.ProtoReflect.Descriptor instead.
func (*UnsubPayChClosesResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{29}
}

func (m *UnsubPayChClosesResp) GetResponse() isUnsubPayChClosesResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UnsubPayChClosesResp) GetMsgSuccess() *UnsubPayChClosesResp_MsgSuccess {
	if x, ok := x.GetResponse().(*UnsubPayChClosesResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *UnsubPayChClosesResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*UnsubPayChClosesResp_Error); ok {
		return x.Error
	}
	return nil
}

type isUnsubPayChClosesResp_Response interface {
	isUnsubPayChClosesResp_Response()
}

type UnsubPayChClosesResp_MsgSuccess_ struct {
	MsgSuccess *UnsubPayChClosesResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type UnsubPayChClosesResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*UnsubPayChClosesResp_MsgSuccess_) isUnsubPayChClosesResp_Response() {}

func (*UnsubPayChClosesResp_Error) isUnsubPayChClosesResp_Response() {}

type CloseSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Force     bool   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *CloseSessionReq) Reset() {
	*x = CloseSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionReq) ProtoMessage() {}

func (x *CloseSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionReq.ProtoReflect.Descriptor instead.
func (*CloseSessionReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{30}
}

func (x *CloseSessionReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *CloseSessionReq) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type CloseSessionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*CloseSessionResp_MsgSuccess_
	//	*CloseSessionResp_Erro
	Response isCloseSessionResp_Response `protobuf_oneof:"response"`
}

func (x *CloseSessionResp) Reset() {
	*x = CloseSessionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSessionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionResp) ProtoMessage() {}

func (x *CloseSessionResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionResp.ProtoReflect.Descriptor instead.
func (*CloseSessionResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{31}
}

func (m *CloseSessionResp) GetResponse() isCloseSessionResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CloseSessionResp) GetMsgSuccess() *CloseSessionResp_MsgSuccess {
	if x, ok := x.GetResponse().(*CloseSessionResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *CloseSessionResp) GetErro() string {
	if x, ok := x.GetResponse().(*CloseSessionResp_Erro); ok {
		return x.Erro
	}
	return ""
}

type isCloseSessionResp_Response interface {
	isCloseSessionResp_Response()
}

type CloseSessionResp_MsgSuccess_ struct {
	MsgSuccess *CloseSessionResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type CloseSessionResp_Erro struct {
	Erro string `protobuf:"bytes,2,opt,name=erro,proto3,oneof"`
}

func (*CloseSessionResp_MsgSuccess_) isCloseSessionResp_Response() {}

func (*CloseSessionResp_Erro) isCloseSessionResp_Response() {}

type SendPayChUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChannelID string `protobuf:"bytes,2,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Payee     string `protobuf:"bytes,3,opt,name=payee,proto3" json:"payee,omitempty"`
	Amount    string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *SendPayChUpdateReq) Reset() {
	*x = SendPayChUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPayChUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPayChUpdateReq) ProtoMessage() {}

func (x *SendPayChUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPayChUpdateReq.ProtoReflect.Descriptor instead.
func (*SendPayChUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{32}
}

func (x *SendPayChUpdateReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *SendPayChUpdateReq) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *SendPayChUpdateReq) GetPayee() string {
	if x != nil {
		return x.Payee
	}
	return ""
}

func (x *SendPayChUpdateReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type SendPayChUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*SendPayChUpdateResp_MsgSuccess_
	//	*SendPayChUpdateResp_Error
	Response isSendPayChUpdateResp_Response `protobuf_oneof:"response"`
}

func (x *SendPayChUpdateResp) Reset() {
	*x = SendPayChUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPayChUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPayChUpdateResp) ProtoMessage() {}

func (x *SendPayChUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPayChUpdateResp.ProtoReflect.Descriptor instead.
func (*SendPayChUpdateResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{33}
}

func (m *SendPayChUpdateResp) GetResponse() isSendPayChUpdateResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SendPayChUpdateResp) GetMsgSuccess() *SendPayChUpdateResp_MsgSuccess {
	if x, ok := x.GetResponse().(*SendPayChUpdateResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *SendPayChUpdateResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*SendPayChUpdateResp_Error); ok {
		return x.Error
	}
	return nil
}

type isSendPayChUpdateResp_Response interface {
	isSendPayChUpdateResp_Response()
}

type SendPayChUpdateResp_MsgSuccess_ struct {
	MsgSuccess *SendPayChUpdateResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type SendPayChUpdateResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SendPayChUpdateResp_MsgSuccess_) isSendPayChUpdateResp_Response() {}

func (*SendPayChUpdateResp_Error) isSendPayChUpdateResp_Response() {}

type SubpayChUpdatesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChannelID string `protobuf:"bytes,2,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *SubpayChUpdatesReq) Reset() {
	*x = SubpayChUpdatesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubpayChUpdatesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubpayChUpdatesReq) ProtoMessage() {}

func (x *SubpayChUpdatesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubpayChUpdatesReq.ProtoReflect.Descriptor instead.
func (*SubpayChUpdatesReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{34}
}

func (x *SubpayChUpdatesReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *SubpayChUpdatesReq) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type SubPayChUpdatesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*SubPayChUpdatesResp_Notify_
	//	*SubPayChUpdatesResp_Error
	Response isSubPayChUpdatesResp_Response `protobuf_oneof:"response"`
}

func (x *SubPayChUpdatesResp) Reset() {
	*x = SubPayChUpdatesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChUpdatesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChUpdatesResp) ProtoMessage() {}

func (x *SubPayChUpdatesResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChUpdatesResp.ProtoReflect.Descriptor instead.
func (*SubPayChUpdatesResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{35}
}

func (m *SubPayChUpdatesResp) GetResponse() isSubPayChUpdatesResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SubPayChUpdatesResp) GetNotify() *SubPayChUpdatesResp_Notify {
	if x, ok := x.GetResponse().(*SubPayChUpdatesResp_Notify_); ok {
		return x.Notify
	}
	return nil
}

func (x *SubPayChUpdatesResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*SubPayChUpdatesResp_Error); ok {
		return x.Error
	}
	return nil
}

type isSubPayChUpdatesResp_Response interface {
	isSubPayChUpdatesResp_Response()
}

type SubPayChUpdatesResp_Notify_ struct {
	Notify *SubPayChUpdatesResp_Notify `protobuf:"bytes,1,opt,name=notify,proto3,oneof"`
}

type SubPayChUpdatesResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SubPayChUpdatesResp_Notify_) isSubPayChUpdatesResp_Response() {}

func (*SubPayChUpdatesResp_Error) isSubPayChUpdatesResp_Response() {}

type UnsubPayChUpdatesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChannelID string `protobuf:"bytes,2,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *UnsubPayChUpdatesReq) Reset() {
	*x = UnsubPayChUpdatesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChUpdatesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChUpdatesReq) ProtoMessage() {}

func (x *UnsubPayChUpdatesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChUpdatesReq.ProtoReflect.Descriptor instead.
func (*UnsubPayChUpdatesReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{36}
}

func (x *UnsubPayChUpdatesReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *UnsubPayChUpdatesReq) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type UnsubPayChUpdatesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*UnsubPayChUpdatesResp_MsgSuccess_
	//	*UnsubPayChUpdatesResp_Error
	Response isUnsubPayChUpdatesResp_Response `protobuf_oneof:"response"`
}

func (x *UnsubPayChUpdatesResp) Reset() {
	*x = UnsubPayChUpdatesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChUpdatesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChUpdatesResp) ProtoMessage() {}

func (x *UnsubPayChUpdatesResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChUpdatesResp.ProtoReflect.Descriptor instead.
func (*UnsubPayChUpdatesResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{37}
}

func (m *UnsubPayChUpdatesResp) GetResponse() isUnsubPayChUpdatesResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UnsubPayChUpdatesResp) GetMsgSuccess() *UnsubPayChUpdatesResp_MsgSuccess {
	if x, ok := x.GetResponse().(*UnsubPayChUpdatesResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *UnsubPayChUpdatesResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*UnsubPayChUpdatesResp_Error); ok {
		return x.Error
	}
	return nil
}

type isUnsubPayChUpdatesResp_Response interface {
	isUnsubPayChUpdatesResp_Response()
}

type UnsubPayChUpdatesResp_MsgSuccess_ struct {
	MsgSuccess *UnsubPayChUpdatesResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type UnsubPayChUpdatesResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*UnsubPayChUpdatesResp_MsgSuccess_) isUnsubPayChUpdatesResp_Response() {}

func (*UnsubPayChUpdatesResp_Error) isUnsubPayChUpdatesResp_Response() {}

type RespondPayChUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChannelID string `protobuf:"bytes,2,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Version   string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Accept    bool   `protobuf:"varint,4,opt,name=accept,proto3" json:"accept,omitempty"`
}

func (x *RespondPayChUpdateReq) Reset() {
	*x = RespondPayChUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChUpdateReq) ProtoMessage() {}

func (x *RespondPayChUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChUpdateReq.ProtoReflect.Descriptor instead.
func (*RespondPayChUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{38}
}

func (x *RespondPayChUpdateReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *RespondPayChUpdateReq) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *RespondPayChUpdateReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RespondPayChUpdateReq) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

type RespondPayChUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*RespondPayChUpdateResp_MsgSuccess_
	//	*RespondPayChUpdateResp_Error
	Response isRespondPayChUpdateResp_Response `protobuf_oneof:"response"`
}

func (x *RespondPayChUpdateResp) Reset() {
	*x = RespondPayChUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChUpdateResp) ProtoMessage() {}

func (x *RespondPayChUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChUpdateResp.ProtoReflect.Descriptor instead.
func (*RespondPayChUpdateResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{39}
}

func (m *RespondPayChUpdateResp) GetResponse() isRespondPayChUpdateResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RespondPayChUpdateResp) GetMsgSuccess() *RespondPayChUpdateResp_MsgSuccess {
	if x, ok := x.GetResponse().(*RespondPayChUpdateResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *RespondPayChUpdateResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*RespondPayChUpdateResp_Error); ok {
		return x.Error
	}
	return nil
}

type isRespondPayChUpdateResp_Response interface {
	isRespondPayChUpdateResp_Response()
}

type RespondPayChUpdateResp_MsgSuccess_ struct {
	MsgSuccess *RespondPayChUpdateResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type RespondPayChUpdateResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*RespondPayChUpdateResp_MsgSuccess_) isRespondPayChUpdateResp_Response() {}

func (*RespondPayChUpdateResp_Error) isRespondPayChUpdateResp_Response() {}

type GetBalanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChannelID string `protobuf:"bytes,2,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *GetBalanceReq) Reset() {
	*x = GetBalanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceReq) ProtoMessage() {}

func (x *GetBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceReq.ProtoReflect.Descriptor instead.
func (*GetBalanceReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{40}
}

func (x *GetBalanceReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *GetBalanceReq) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type GetBalanceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetBalanceResp_MsgSuccess_
	//	*GetBalanceResp_Error
	Response isGetBalanceResp_Response `protobuf_oneof:"response"`
}

func (x *GetBalanceResp) Reset() {
	*x = GetBalanceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResp) ProtoMessage() {}

func (x *GetBalanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResp.ProtoReflect.Descriptor instead.
func (*GetBalanceResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{41}
}

func (m *GetBalanceResp) GetResponse() isGetBalanceResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetBalanceResp) GetMsgSuccess() *GetBalanceResp_MsgSuccess {
	if x, ok := x.GetResponse().(*GetBalanceResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *GetBalanceResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*GetBalanceResp_Error); ok {
		return x.Error
	}
	return nil
}

type isGetBalanceResp_Response interface {
	isGetBalanceResp_Response()
}

type GetBalanceResp_MsgSuccess_ struct {
	MsgSuccess *GetBalanceResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type GetBalanceResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*GetBalanceResp_MsgSuccess_) isGetBalanceResp_Response() {}

func (*GetBalanceResp_Error) isGetBalanceResp_Response() {}

type ClosePayChReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChannelID string `protobuf:"bytes,2,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *ClosePayChReq) Reset() {
	*x = ClosePayChReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosePayChReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePayChReq) ProtoMessage() {}

func (x *ClosePayChReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePayChReq.ProtoReflect.Descriptor instead.
func (*ClosePayChReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{42}
}

func (x *ClosePayChReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *ClosePayChReq) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type ClosePayChResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*ClosePayChResp_MsgSuccess_
	//	*ClosePayChResp_Error
	Response isClosePayChResp_Response `protobuf_oneof:"response"`
}

func (x *ClosePayChResp) Reset() {
	*x = ClosePayChResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosePayChResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePayChResp) ProtoMessage() {}

func (x *ClosePayChResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePayChResp.ProtoReflect.Descriptor instead.
func (*ClosePayChResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{43}
}

func (m *ClosePayChResp) GetResponse() isClosePayChResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ClosePayChResp) GetMsgSuccess() *ClosePayChResp_MsgSuccess {
	if x, ok := x.GetResponse().(*ClosePayChResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *ClosePayChResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*ClosePayChResp_Error); ok {
		return x.Error
	}
	return nil
}

type isClosePayChResp_Response interface {
	isClosePayChResp_Response()
}

type ClosePayChResp_MsgSuccess_ struct {
	MsgSuccess *ClosePayChResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type ClosePayChResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ClosePayChResp_MsgSuccess_) isClosePayChResp_Response() {}

func (*ClosePayChResp_Error) isClosePayChResp_Response() {}

type BalanceInfo_AliasBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value map[string]string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BalanceInfo_AliasBalance) Reset() {
	*x = BalanceInfo_AliasBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceInfo_AliasBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceInfo_AliasBalance) ProtoMessage() {}

func (x *BalanceInfo_AliasBalance) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceInfo_AliasBalance.ProtoReflect.Descriptor instead.
func (*BalanceInfo_AliasBalance) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 0}
}

func (x *BalanceInfo_AliasBalance) GetValue() map[string]string {
	if x != nil {
		return x.Value
	}
	return nil
}

type OpenSessionResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *OpenSessionResp_MsgSuccess) Reset() {
	*x = OpenSessionResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSessionResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionResp_MsgSuccess) ProtoMessage() {}

func (x *OpenSessionResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSessionResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*OpenSessionResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7, 0}
}

func (x *OpenSessionResp_MsgSuccess) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type AddContactResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AddContactResp_MsgSuccess) Reset() {
	*x = AddContactResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddContactResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContactResp_MsgSuccess) ProtoMessage() {}

func (x *AddContactResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContactResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*AddContactResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13, 0}
}

func (x *AddContactResp_MsgSuccess) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetContactResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *Peer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *GetContactResp_MsgSuccess) Reset() {
	*x = GetContactResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactResp_MsgSuccess) ProtoMessage() {}

func (x *GetContactResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*GetContactResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GetContactResp_MsgSuccess) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type OpenPayChResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *PaymentChannel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *OpenPayChResp_MsgSuccess) Reset() {
	*x = OpenPayChResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPayChResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPayChResp_MsgSuccess) ProtoMessage() {}

func (x *OpenPayChResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPayChResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*OpenPayChResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17, 0}
}

func (x *OpenPayChResp_MsgSuccess) GetChannel() *PaymentChannel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type GetPayChsResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenChannels []*PaymentChannel `protobuf:"bytes,1,rep,name=openChannels,proto3" json:"openChannels,omitempty"`
}

func (x *GetPayChsResp_MsgSuccess) Reset() {
	*x = GetPayChsResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChsResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChsResp_MsgSuccess) ProtoMessage() {}

func (x *GetPayChsResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChsResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*GetPayChsResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19, 0}
}

func (x *GetPayChsResp_MsgSuccess) GetOpenChannels() []*PaymentChannel {
	if x != nil {
		return x.OpenChannels
	}
	return nil
}

type SubPayChProposalsResp_Notify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID        string       `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ProposalID       string       `protobuf:"bytes,2,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
	Payee            string       `protobuf:"bytes,3,opt,name=payee,proto3" json:"payee,omitempty"`
	OpeningBalance   *BalanceInfo `protobuf:"bytes,4,opt,name=openingBalance,proto3" json:"openingBalance,omitempty"`
	ChallengeDurSecs uint64       `protobuf:"varint,5,opt,name=challengeDurSecs,proto3" json:"challengeDurSecs,omitempty"`
	Timeout          int64        `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *SubPayChProposalsResp_Notify) Reset() {
	*x = SubPayChProposalsResp_Notify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChProposalsResp_Notify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChProposalsResp_Notify) ProtoMessage() {}

func (x *SubPayChProposalsResp_Notify) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChProposalsResp_Notify.ProtoReflect.Descriptor instead.
func (*SubPayChProposalsResp_Notify) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21, 0}
}

func (x *SubPayChProposalsResp_Notify) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *SubPayChProposalsResp_Notify) GetProposalID() string {
	if x != nil {
		return x.ProposalID
	}
	return ""
}

func (x *SubPayChProposalsResp_Notify) GetPayee() string {
	if x != nil {
		return x.Payee
	}
	return ""
}

func (x *SubPayChProposalsResp_Notify) GetOpeningBalance() *BalanceInfo {
	if x != nil {
		return x.OpeningBalance
	}
	return nil
}

func (x *SubPayChProposalsResp_Notify) GetChallengeDurSecs() uint64 {
	if x != nil {
		return x.ChallengeDurSecs
	}
	return 0
}

func (x *SubPayChProposalsResp_Notify) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type UnsubPayChProposalsResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UnsubPayChProposalsResp_MsgSuccess) Reset() {
	*x = UnsubPayChProposalsResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChProposalsResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChProposalsResp_MsgSuccess) ProtoMessage() {}

func (x *UnsubPayChProposalsResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChProposalsResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*UnsubPayChProposalsResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{23, 0}
}

func (x *UnsubPayChProposalsResp_MsgSuccess) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RespondPayChProposalResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RespondPayChProposalResp_MsgSuccess) Reset() {
	*x = RespondPayChProposalResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChProposalResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChProposalResp_MsgSuccess) ProtoMessage() {}

func (x *RespondPayChProposalResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChProposalResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*RespondPayChProposalResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{25, 0}
}

func (x *RespondPayChProposalResp_MsgSuccess) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SubPayChClosesResp_Notify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClosingState *PaymentChannel `protobuf:"bytes,1,opt,name=closingState,proto3" json:"closingState,omitempty"`
	Error        string          `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SubPayChClosesResp_Notify) Reset() {
	*x = SubPayChClosesResp_Notify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChClosesResp_Notify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChClosesResp_Notify) ProtoMessage() {}

func (x *SubPayChClosesResp_Notify) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChClosesResp_Notify.ProtoReflect.Descriptor instead.
func (*SubPayChClosesResp_Notify) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{27, 0}
}

func (x *SubPayChClosesResp_Notify) GetClosingState() *PaymentChannel {
	if x != nil {
		return x.ClosingState
	}
	return nil
}

func (x *SubPayChClosesResp_Notify) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UnsubPayChClosesResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UnsubPayChClosesResp_MsgSuccess) Reset() {
	*x = UnsubPayChClosesResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChClosesResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChClosesResp_MsgSuccess) ProtoMessage() {}

func (x *UnsubPayChClosesResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChClosesResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*UnsubPayChClosesResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{29, 0}
}

func (x *UnsubPayChClosesResp_MsgSuccess) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CloseSessionResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnclosedChannels []*PaymentChannel `protobuf:"bytes,2,rep,name=unclosedChannels,proto3" json:"unclosedChannels,omitempty"`
}

func (x *CloseSessionResp_MsgSuccess) Reset() {
	*x = CloseSessionResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSessionResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionResp_MsgSuccess) ProtoMessage() {}

func (x *CloseSessionResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*CloseSessionResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{31, 0}
}

func (x *CloseSessionResp_MsgSuccess) GetUnclosedChannels() []*PaymentChannel {
	if x != nil {
		return x.UnclosedChannels
	}
	return nil
}

type SendPayChUpdateResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SendPayChUpdateResp_MsgSuccess) Reset() {
	*x = SendPayChUpdateResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPayChUpdateResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPayChUpdateResp_MsgSuccess) ProtoMessage() {}

func (x *SendPayChUpdateResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPayChUpdateResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*SendPayChUpdateResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{33, 0}
}

func (x *SendPayChUpdateResp_MsgSuccess) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SubPayChUpdatesResp_Notify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposedBalance *BalanceInfo `protobuf:"bytes,1,opt,name=proposedBalance,proto3" json:"proposedBalance,omitempty"`
	Version         string       `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Final           bool         `protobuf:"varint,3,opt,name=final,proto3" json:"final,omitempty"`
	Timeout         int64        `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *SubPayChUpdatesResp_Notify) Reset() {
	*x = SubPayChUpdatesResp_Notify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChUpdatesResp_Notify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChUpdatesResp_Notify) ProtoMessage() {}

func (x *SubPayChUpdatesResp_Notify) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChUpdatesResp_Notify.ProtoReflect.Descriptor instead.
func (*SubPayChUpdatesResp_Notify) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{35, 0}
}

func (x *SubPayChUpdatesResp_Notify) GetProposedBalance() *BalanceInfo {
	if x != nil {
		return x.ProposedBalance
	}
	return nil
}

func (x *SubPayChUpdatesResp_Notify) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SubPayChUpdatesResp_Notify) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

func (x *SubPayChUpdatesResp_Notify) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type UnsubPayChUpdatesResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UnsubPayChUpdatesResp_MsgSuccess) Reset() {
	*x = UnsubPayChUpdatesResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChUpdatesResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChUpdatesResp_MsgSuccess) ProtoMessage() {}

func (x *UnsubPayChUpdatesResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChUpdatesResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*UnsubPayChUpdatesResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{37, 0}
}

func (x *UnsubPayChUpdatesResp_MsgSuccess) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RespondPayChUpdateResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RespondPayChUpdateResp_MsgSuccess) Reset() {
	*x = RespondPayChUpdateResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChUpdateResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChUpdateResp_MsgSuccess) ProtoMessage() {}

func (x *RespondPayChUpdateResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChUpdateResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*RespondPayChUpdateResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{39, 0}
}

func (x *RespondPayChUpdateResp_MsgSuccess) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetBalanceResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentBalance *BalanceInfo `protobuf:"bytes,1,opt,name=currentBalance,proto3" json:"currentBalance,omitempty"`
	CurrentVersion string       `protobuf:"bytes,2,opt,name=currentVersion,proto3" json:"currentVersion,omitempty"`
}

func (x *GetBalanceResp_MsgSuccess) Reset() {
	*x = GetBalanceResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResp_MsgSuccess) ProtoMessage() {}

func (x *GetBalanceResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*GetBalanceResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{41, 0}
}

func (x *GetBalanceResp_MsgSuccess) GetCurrentBalance() *BalanceInfo {
	if x != nil {
		return x.CurrentBalance
	}
	return nil
}

func (x *GetBalanceResp_MsgSuccess) GetCurrentVersion() string {
	if x != nil {
		return x.CurrentVersion
	}
	return ""
}

type ClosePayChResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClosingBalance []*BalanceInfo `protobuf:"bytes,1,rep,name=closingBalance,proto3" json:"closingBalance,omitempty"`
	ClosingVersion string         `protobuf:"bytes,2,opt,name=closingVersion,proto3" json:"closingVersion,omitempty"`
}

func (x *ClosePayChResp_MsgSuccess) Reset() {
	*x = ClosePayChResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosePayChResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePayChResp_MsgSuccess) ProtoMessage() {}

func (x *ClosePayChResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePayChResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*ClosePayChResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{43, 0}
}

func (x *ClosePayChResp_MsgSuccess) GetClosingBalance() []*BalanceInfo {
	if x != nil {
		return x.ClosingBalance
	}
	return nil
}

func (x *ClosePayChResp_MsgSuccess) GetClosingVersion() string {
	if x != nil {
		return x.ClosingVersion
	}
	return ""
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x72, 0x70,
	0x63, 0x22, 0x84, 0x01, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x66, 0x66, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x6d, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x0b, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x3a, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x1a, 0x89, 0x01, 0x0a, 0x0c, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7d, 0x0a, 0x0e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x0b,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x08, 0x4d,
	0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x0e, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x22, 0xc9, 0x01,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x64, 0x6a, 0x75, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x61, 0x64, 0x6a, 0x75, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x0e, 0x4f, 0x70, 0x65,
	0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x0f,
	0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x42, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x2a, 0x0a, 0x0a, 0x4d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x09, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x22, 0x1e,
	0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x09,
	0x0a, 0x07, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x71, 0x22, 0x1e, 0x0a, 0x08, 0x48, 0x65, 0x6c,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x70, 0x69, 0x73, 0x22, 0x4d, 0x0a, 0x0d, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x22, 0xaf, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x6d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x26, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22,
	0xb5, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x2c, 0x0a,
	0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x70,
	0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x65, 0x72, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x65, 0x65, 0x72, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x44, 0x75, 0x72, 0x53,
	0x65, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x44, 0x75, 0x72, 0x53, 0x65, 0x63, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x0d,
	0x4f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a,
	0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x3c, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x2c, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xcd, 0x01, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a,
	0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x46, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x42,
	0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x14, 0x53,
	0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x22, 0xe9, 0x02, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x06, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48,
	0x00, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0xdd, 0x01, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x79, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x65,
	0x12, 0x39, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x44, 0x75, 0x72, 0x53, 0x65, 0x63, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x44, 0x75, 0x72, 0x53, 0x65, 0x63, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a,
	0x16, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xc1, 0x01, 0x0a, 0x17, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4a, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48,
	0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x26, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0x0a, 0x17, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x18, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x26, 0x0a, 0x0a,
	0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x31, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x22, 0xdd, 0x01, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x06, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x06, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x58, 0x0a,
	0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x38, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x13, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xbb, 0x01, 0x0a, 0x14, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x47, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a,
	0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x1a, 0x26, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x0f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0xc9, 0x01,
	0x0a, 0x10, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x43, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x04, 0x65, 0x72, 0x72, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x65, 0x72, 0x72, 0x6f, 0x1a, 0x4e, 0x0a,
	0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x40, 0x0a, 0x10, 0x75,
	0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x10, 0x75, 0x6e, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7e, 0x0a, 0x12, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x79, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x13, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x46, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0x26, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x70, 0x61, 0x79, 0x43,
	0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x22, 0x97, 0x02, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3a, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x1a, 0x8f, 0x01, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x3b,
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x52, 0x0a, 0x14, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x44, 0x22, 0xbd, 0x01, 0x0a, 0x15, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x48, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0x26, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x22, 0xbf, 0x01,
	0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x26, 0x0a, 0x0a, 0x4d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x22, 0xf8, 0x01, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x41, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x6f, 0x0a, 0x0a, 0x4d, 0x73,
	0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x22, 0xf8, 0x01, 0x0a, 0x0e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a,
	0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x1a, 0x6f, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x39, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x63, 0x6c, 0x6f,
	0x73, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xd2, 0x01, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x50, 0x49, 0x12, 0x36, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x27, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0d, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x04, 0x48,
	0x65, 0x6c, 0x70, 0x12, 0x0d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x52,
	0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x32, 0xca, 0x05, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x41, 0x50, 0x49, 0x12, 0x39, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x12, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x39, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x13, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x09, 0x4f, 0x70,
	0x65, 0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x12, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x36, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x12,
	0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x53, 0x75,
	0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x12,
	0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12, 0x54, 0x0a, 0x13,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x57, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e, 0x53,
	0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x12, 0x17, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x75,
	0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x4a, 0x0a, 0x0f, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x3f, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x32, 0xbc, 0x03, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x41, 0x50,
	0x49, 0x12, 0x48, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x53,
	0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x18,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x70, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4e, 0x0a, 0x11, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x12, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 63)
var file_api_proto_goTypes = []interface{}{
	(*Peer)(nil),                                // 0: grpc.Peer
	(*BalanceInfo)(nil),                         // 1: grpc.BalanceInfo
	(*PaymentChannel)(nil),                      // 2: grpc.PaymentChannel
	(*MsgError)(nil),                            // 3: grpc.MsgError
	(*GetConfigReq)(nil),                        // 4: grpc.GetConfigReq
	(*GetConfigResp)(nil),                       // 5: grpc.GetConfigResp
	(*OpenSessionReq)(nil),                      // 6: grpc.OpenSessionReq
	(*OpenSessionResp)(nil),                     // 7: grpc.OpenSessionResp
	(*TimeReq)(nil),                             // 8: grpc.TimeReq
	(*TimeResp)(nil),                            // 9: grpc.TimeResp
	(*HelpReq)(nil),                             // 10: grpc.HelpReq
	(*HelpResp)(nil),                            // 11: grpc.HelpResp
	(*AddContactReq)(nil),                       // 12: grpc.AddContactReq
	(*AddContactResp)(nil),                      // 13: grpc.AddContactResp
	(*GetContactReq)(nil),                       // 14: grpc.GetContactReq
	(*GetContactResp)(nil),                      // 15: grpc.GetContactResp
	(*OpenPayChReq)(nil),                        // 16: grpc.OpenPayChReq
	(*OpenPayChResp)(nil),                       // 17: grpc.OpenPayChResp
	(*GetPayChsReq)(nil),                        // 18: grpc.GetPayChsReq
	(*GetPayChsResp)(nil),                       // 19: grpc.GetPayChsResp
	(*SubPayChProposalsReq)(nil),                // 20: grpc.SubPayChProposalsReq
	(*SubPayChProposalsResp)(nil),               // 21: grpc.SubPayChProposalsResp
	(*UnsubPayChProposalsReq)(nil),              // 22: grpc.UnsubPayChProposalsReq
	(*UnsubPayChProposalsResp)(nil),             // 23: grpc.UnsubPayChProposalsResp
	(*RespondPayChProposalReq)(nil),             // 24: grpc.RespondPayChProposalReq
	(*RespondPayChProposalResp)(nil),            // 25: grpc.RespondPayChProposalResp
	(*SubPayChClosesReq)(nil),                   // 26: grpc.subPayChClosesReq
	(*SubPayChClosesResp)(nil),                  // 27: grpc.subPayChClosesResp
	(*UnsubPayChClosesReq)(nil),                 // 28: grpc.UnsubPayChClosesReq
	(*UnsubPayChClosesResp)(nil),                // 29: grpc.UnsubPayChClosesResp
	(*CloseSessionReq)(nil),                     // 30: grpc.CloseSessionReq
	(*CloseSessionResp)(nil),                    // 31: grpc.CloseSessionResp
	(*SendPayChUpdateReq)(nil),                  // 32: grpc.SendPayChUpdateReq
	(*SendPayChUpdateResp)(nil),                 // 33: grpc.SendPayChUpdateResp
	(*SubpayChUpdatesReq)(nil),                  // 34: grpc.SubpayChUpdatesReq
	(*SubPayChUpdatesResp)(nil),                 // 35: grpc.SubPayChUpdatesResp
	(*UnsubPayChUpdatesReq)(nil),                // 36: grpc.UnsubPayChUpdatesReq
	(*UnsubPayChUpdatesResp)(nil),               // 37: grpc.UnsubPayChUpdatesResp
	(*RespondPayChUpdateReq)(nil),               // 38: grpc.RespondPayChUpdateReq
	(*RespondPayChUpdateResp)(nil),              // 39: grpc.RespondPayChUpdateResp
	(*GetBalanceReq)(nil),                       // 40: grpc.GetBalanceReq
	(*GetBalanceResp)(nil),                      // 41: grpc.GetBalanceResp
	(*ClosePayChReq)(nil),                       // 42: grpc.ClosePayChReq
	(*ClosePayChResp)(nil),                      // 43: grpc.ClosePayChResp
	(*BalanceInfo_AliasBalance)(nil),            // 44: grpc.BalanceInfo.AliasBalance
	nil,                                         // 45: grpc.BalanceInfo.AliasBalance.ValueEntry
	(*OpenSessionResp_MsgSuccess)(nil),          // 46: grpc.OpenSessionResp.MsgSuccess
	(*AddContactResp_MsgSuccess)(nil),           // 47: grpc.AddContactResp.MsgSuccess
	(*GetContactResp_MsgSuccess)(nil),           // 48: grpc.GetContactResp.MsgSuccess
	(*OpenPayChResp_MsgSuccess)(nil),            // 49: grpc.OpenPayChResp.MsgSuccess
	(*GetPayChsResp_MsgSuccess)(nil),            // 50: grpc.GetPayChsResp.MsgSuccess
	(*SubPayChProposalsResp_Notify)(nil),        // 51: grpc.SubPayChProposalsResp.Notify
	(*UnsubPayChProposalsResp_MsgSuccess)(nil),  // 52: grpc.UnsubPayChProposalsResp.MsgSuccess
	(*RespondPayChProposalResp_MsgSuccess)(nil), // 53: grpc.RespondPayChProposalResp.MsgSuccess
	(*SubPayChClosesResp_Notify)(nil),           // 54: grpc.subPayChClosesResp.Notify
	(*UnsubPayChClosesResp_MsgSuccess)(nil),     // 55: grpc.UnsubPayChClosesResp.MsgSuccess
	(*CloseSessionResp_MsgSuccess)(nil),         // 56: grpc.CloseSessionResp.MsgSuccess
	(*SendPayChUpdateResp_MsgSuccess)(nil),      // 57: grpc.SendPayChUpdateResp.MsgSuccess
	(*SubPayChUpdatesResp_Notify)(nil),          // 58: grpc.SubPayChUpdatesResp.Notify
	(*UnsubPayChUpdatesResp_MsgSuccess)(nil),    // 59: grpc.UnsubPayChUpdatesResp.MsgSuccess
	(*RespondPayChUpdateResp_MsgSuccess)(nil),   // 60: grpc.RespondPayChUpdateResp.MsgSuccess
	(*GetBalanceResp_MsgSuccess)(nil),           // 61: grpc.GetBalanceResp.MsgSuccess
	(*ClosePayChResp_MsgSuccess)(nil),           // 62: grpc.ClosePayChResp.MsgSuccess
}
var file_api_proto_depIdxs = []int32{
	44, // 0: grpc.BalanceInfo.balances:type_name -> grpc.BalanceInfo.AliasBalance
	1,  // 1: grpc.PaymentChannel.balanceinfo:type_name -> grpc.BalanceInfo
	46, // 2: grpc.OpenSessionResp.msgSuccess:type_name -> grpc.OpenSessionResp.MsgSuccess
	3,  // 3: grpc.OpenSessionResp.error:type_name -> grpc.MsgError
	0,  // 4: grpc.AddContactReq.peer:type_name -> grpc.Peer
	47, // 5: grpc.AddContactResp.msgSuccess:type_name -> grpc.AddContactResp.MsgSuccess
	3,  // 6: grpc.AddContactResp.error:type_name -> grpc.MsgError
	48, // 7: grpc.GetContactResp.msgSuccess:type_name -> grpc.GetContactResp.MsgSuccess
	3,  // 8: grpc.GetContactResp.error:type_name -> grpc.MsgError
	1,  // 9: grpc.OpenPayChReq.openingBalance:type_name -> grpc.BalanceInfo
	49, // 10: grpc.OpenPayChResp.msgSuccess:type_name -> grpc.OpenPayChResp.MsgSuccess
	3,  // 11: grpc.OpenPayChResp.error:type_name -> grpc.MsgError
	50, // 12: grpc.GetPayChsResp.msgSuccess:type_name -> grpc.GetPayChsResp.MsgSuccess
	3,  // 13: grpc.GetPayChsResp.error:type_name -> grpc.MsgError
	51, // 14: grpc.SubPayChProposalsResp.notify:type_name -> grpc.SubPayChProposalsResp.Notify
	3,  // 15: grpc.SubPayChProposalsResp.error:type_name -> grpc.MsgError
	52, // 16: grpc.UnsubPayChProposalsResp.msgSuccess:type_name -> grpc.UnsubPayChProposalsResp.MsgSuccess
	3,  // 17: grpc.UnsubPayChProposalsResp.error:type_name -> grpc.MsgError
	53, // 18: grpc.RespondPayChProposalResp.msgSuccess:type_name -> grpc.RespondPayChProposalResp.MsgSuccess
	3,  // 19: grpc.RespondPayChProposalResp.error:type_name -> grpc.MsgError
	54, // 20: grpc.subPayChClosesResp.notify:type_name -> grpc.subPayChClosesResp.Notify
	3,  // 21: grpc.subPayChClosesResp.error:type_name -> grpc.MsgError
	55, // 22: grpc.UnsubPayChClosesResp.msgSuccess:type_name -> grpc.UnsubPayChClosesResp.MsgSuccess
	3,  // 23: grpc.UnsubPayChClosesResp.error:type_name -> grpc.MsgError
	56, // 24: grpc.CloseSessionResp.msgSuccess:type_name -> grpc.CloseSessionResp.MsgSuccess
	57, // 25: grpc.SendPayChUpdateResp.msgSuccess:type_name -> grpc.SendPayChUpdateResp.MsgSuccess
	3,  // 26: grpc.SendPayChUpdateResp.error:type_name -> grpc.MsgError
	58, // 27: grpc.SubPayChUpdatesResp.notify:type_name -> grpc.SubPayChUpdatesResp.Notify
	3,  // 28: grpc.SubPayChUpdatesResp.error:type_name -> grpc.MsgError
	59, // 29: grpc.UnsubPayChUpdatesResp.msgSuccess:type_name -> grpc.UnsubPayChUpdatesResp.MsgSuccess
	3,  // 30: grpc.UnsubPayChUpdatesResp.error:type_name -> grpc.MsgError
	60, // 31: grpc.RespondPayChUpdateResp.msgSuccess:type_name -> grpc.RespondPayChUpdateResp.MsgSuccess
	3,  // 32: grpc.RespondPayChUpdateResp.error:type_name -> grpc.MsgError
	61, // 33: grpc.GetBalanceResp.msgSuccess:type_name -> grpc.GetBalanceResp.MsgSuccess
	3,  // 34: grpc.GetBalanceResp.error:type_name -> grpc.MsgError
	62, // 35: grpc.ClosePayChResp.msgSuccess:type_name -> grpc.ClosePayChResp.MsgSuccess
	3,  // 36: grpc.ClosePayChResp.error:type_name -> grpc.MsgError
	45, // 37: grpc.BalanceInfo.AliasBalance.value:type_name -> grpc.BalanceInfo.AliasBalance.ValueEntry
	0,  // 38: grpc.GetContactResp.MsgSuccess.peer:type_name -> grpc.Peer
	2,  // 39: grpc.OpenPayChResp.MsgSuccess.channel:type_name -> grpc.PaymentChannel
	2,  // 40: grpc.GetPayChsResp.MsgSuccess.openChannels:type_name -> grpc.PaymentChannel
	1,  // 41: grpc.SubPayChProposalsResp.Notify.openingBalance:type_name -> grpc.BalanceInfo
	2,  // 42: grpc.subPayChClosesResp.Notify.closingState:type_name -> grpc.PaymentChannel
	2,  // 43: grpc.CloseSessionResp.MsgSuccess.unclosedChannels:type_name -> grpc.PaymentChannel
	1,  // 44: grpc.SubPayChUpdatesResp.Notify.proposedBalance:type_name -> grpc.BalanceInfo
	1,  // 45: grpc.GetBalanceResp.MsgSuccess.currentBalance:type_name -> grpc.BalanceInfo
	1,  // 46: grpc.ClosePayChResp.MsgSuccess.closingBalance:type_name -> grpc.BalanceInfo
	4,  // 47: grpc.Node_API.GetConfig:input_type -> grpc.GetConfigReq
	6,  // 48: grpc.Node_API.OpenSession:input_type -> grpc.OpenSessionReq
	8,  // 49: grpc.Node_API.Time:input_type -> grpc.TimeReq
	10, // 50: grpc.Node_API.Help:input_type -> grpc.HelpReq
	12, // 51: grpc.Session_API.AddContact:input_type -> grpc.AddContactReq
	14, // 52: grpc.Session_API.GetContact:input_type -> grpc.GetContactReq
	16, // 53: grpc.Session_API.OpenPayCh:input_type -> grpc.OpenPayChReq
	18, // 54: grpc.Session_API.GetPayChs:input_type -> grpc.GetPayChsReq
	20, // 55: grpc.Session_API.SubPayChProposals:input_type -> grpc.SubPayChProposalsReq
	22, // 56: grpc.Session_API.UnsubPayChProposals:input_type -> grpc.UnsubPayChProposalsReq
	24, // 57: grpc.Session_API.RespondPayChProposal:input_type -> grpc.RespondPayChProposalReq
	26, // 58: grpc.Session_API.SubPayChCloses:input_type -> grpc.subPayChClosesReq
	28, // 59: grpc.Session_API.UnsubPayChClose:input_type -> grpc.UnsubPayChClosesReq
	30, // 60: grpc.Session_API.CloseSession:input_type -> grpc.CloseSessionReq
	32, // 61: grpc.Channel_API.SendPayChUpdate:input_type -> grpc.SendPayChUpdateReq
	34, // 62: grpc.Channel_API.SubPayChUpdates:input_type -> grpc.SubpayChUpdatesReq
	36, // 63: grpc.Channel_API.UnsubPayChUpdates:input_type -> grpc.UnsubPayChUpdatesReq
	38, // 64: grpc.Channel_API.RespondPayChUpdate:input_type -> grpc.RespondPayChUpdateReq
	40, // 65: grpc.Channel_API.GetBalance:input_type -> grpc.GetBalanceReq
	42, // 66: grpc.Channel_API.ClosePayCh:input_type -> grpc.ClosePayChReq
	5,  // 67: grpc.Node_API.GetConfig:output_type -> grpc.GetConfigResp
	7,  // 68: grpc.Node_API.OpenSession:output_type -> grpc.OpenSessionResp
	9,  // 69: grpc.Node_API.Time:output_type -> grpc.TimeResp
	11, // 70: grpc.Node_API.Help:output_type -> grpc.HelpResp
	13, // 71: grpc.Session_API.AddContact:output_type -> grpc.AddContactResp
	15, // 72: grpc.Session_API.GetContact:output_type -> grpc.GetContactResp
	17, // 73: grpc.Session_API.OpenPayCh:output_type -> grpc.OpenPayChResp
	19, // 74: grpc.Session_API.GetPayChs:output_type -> grpc.GetPayChsResp
	21, // 75: grpc.Session_API.SubPayChProposals:output_type -> grpc.SubPayChProposalsResp
	23, // 76: grpc.Session_API.UnsubPayChProposals:output_type -> grpc.UnsubPayChProposalsResp
	25, // 77: grpc.Session_API.RespondPayChProposal:output_type -> grpc.RespondPayChProposalResp
	27, // 78: grpc.Session_API.SubPayChCloses:output_type -> grpc.subPayChClosesResp
	29, // 79: grpc.Session_API.UnsubPayChClose:output_type -> grpc.UnsubPayChClosesResp
	31, // 80: grpc.Session_API.CloseSession:output_type -> grpc.CloseSessionResp
	33, // 81: grpc.Channel_API.SendPayChUpdate:output_type -> grpc.SendPayChUpdateResp
	35, // 82: grpc.Channel_API.SubPayChUpdates:output_type -> grpc.SubPayChUpdatesResp
	37, // 83: grpc.Channel_API.UnsubPayChUpdates:output_type -> grpc.UnsubPayChUpdatesResp
	39, // 84: grpc.Channel_API.RespondPayChUpdate:output_type -> grpc.RespondPayChUpdateResp
	41, // 85: grpc.Channel_API.GetBalance:output_type -> grpc.GetBalanceResp
	43, // 86: grpc.Channel_API.ClosePayCh:output_type -> grpc.ClosePayChResp
	67, // [67:87] is the sub-list for method output_type
	47, // [47:67] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSessionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddContactReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddContactResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPayChReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPayChResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChProposalsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChProposalsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChProposalsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChProposalsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChProposalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChProposalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChClosesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChClosesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChClosesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChClosesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseSessionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPayChUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPayChUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubpayChUpdatesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChUpdatesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChUpdatesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChUpdatesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosePayChReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosePayChResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceInfo_AliasBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSessionResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddContactResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPayChResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChsResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChProposalsResp_Notify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChProposalsResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChProposalResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChClosesResp_Notify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChClosesResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseSessionResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPayChUpdateResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChUpdatesResp_Notify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChUpdatesResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChUpdateResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosePayChResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*OpenSessionResp_MsgSuccess_)(nil),
		(*OpenSessionResp_Error)(nil),
	}
	file_api_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*AddContactResp_MsgSuccess_)(nil),
		(*AddContactResp_Error)(nil),
	}
	file_api_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*GetContactResp_MsgSuccess_)(nil),
		(*GetContactResp_Error)(nil),
	}
	file_api_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*OpenPayChResp_MsgSuccess_)(nil),
		(*OpenPayChResp_Error)(nil),
	}
	file_api_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*GetPayChsResp_MsgSuccess_)(nil),
		(*GetPayChsResp_Error)(nil),
	}
	file_api_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*SubPayChProposalsResp_Notify_)(nil),
		(*SubPayChProposalsResp_Error)(nil),
	}
	file_api_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*UnsubPayChProposalsResp_MsgSuccess_)(nil),
		(*UnsubPayChProposalsResp_Error)(nil),
	}
	file_api_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*RespondPayChProposalResp_MsgSuccess_)(nil),
		(*RespondPayChProposalResp_Error)(nil),
	}
	file_api_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*SubPayChClosesResp_Notify_)(nil),
		(*SubPayChClosesResp_Error)(nil),
	}
	file_api_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*UnsubPayChClosesResp_MsgSuccess_)(nil),
		(*UnsubPayChClosesResp_Error)(nil),
	}
	file_api_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*CloseSessionResp_MsgSuccess_)(nil),
		(*CloseSessionResp_Erro)(nil),
	}
	file_api_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*SendPayChUpdateResp_MsgSuccess_)(nil),
		(*SendPayChUpdateResp_Error)(nil),
	}
	file_api_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*SubPayChUpdatesResp_Notify_)(nil),
		(*SubPayChUpdatesResp_Error)(nil),
	}
	file_api_proto_msgTypes[37].OneofWrappers = []interface{}{
		(*UnsubPayChUpdatesResp_MsgSuccess_)(nil),
		(*UnsubPayChUpdatesResp_Error)(nil),
	}
	file_api_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*RespondPayChUpdateResp_MsgSuccess_)(nil),
		(*RespondPayChUpdateResp_Error)(nil),
	}
	file_api_proto_msgTypes[41].OneofWrappers = []interface{}{
		(*GetBalanceResp_MsgSuccess_)(nil),
		(*GetBalanceResp_Error)(nil),
	}
	file_api_proto_msgTypes[43].OneofWrappers = []interface{}{
		(*ClosePayChResp_MsgSuccess_)(nil),
		(*ClosePayChResp_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   63,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// Node_APIClient is the client API for Node_API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Node_APIClient interface {
	GetConfig(ctx context.Context, in *GetConfigReq, opts ...grpc.CallOption) (*GetConfigResp, error)
	OpenSession(ctx context.Context, in *OpenSessionReq, opts ...grpc.CallOption) (*OpenSessionResp, error)
	Time(ctx context.Context, in *TimeReq, opts ...grpc.CallOption) (*TimeResp, error)
	Help(ctx context.Context, in *HelpReq, opts ...grpc.CallOption) (*HelpResp, error)
}

type node_APIClient struct {
	cc grpc.ClientConnInterface
}

func NewNode_APIClient(cc grpc.ClientConnInterface) Node_APIClient {
	return &node_APIClient{cc}
}

func (c *node_APIClient) GetConfig(ctx context.Context, in *GetConfigReq, opts ...grpc.CallOption) (*GetConfigResp, error) {
	out := new(GetConfigResp)
	err := c.cc.Invoke(ctx, "/grpc.Node_API/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *node_APIClient) OpenSession(ctx context.Context, in *OpenSessionReq, opts ...grpc.CallOption) (*OpenSessionResp, error) {
	out := new(OpenSessionResp)
	err := c.cc.Invoke(ctx, "/grpc.Node_API/OpenSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *node_APIClient) Time(ctx context.Context, in *TimeReq, opts ...grpc.CallOption) (*TimeResp, error) {
	out := new(TimeResp)
	err := c.cc.Invoke(ctx, "/grpc.Node_API/Time", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *node_APIClient) Help(ctx context.Context, in *HelpReq, opts ...grpc.CallOption) (*HelpResp, error) {
	out := new(HelpResp)
	err := c.cc.Invoke(ctx, "/grpc.Node_API/Help", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Node_APIServer is the server API for Node_API service.
type Node_APIServer interface {
	GetConfig(context.Context, *GetConfigReq) (*GetConfigResp, error)
	OpenSession(context.Context, *OpenSessionReq) (*OpenSessionResp, error)
	Time(context.Context, *TimeReq) (*TimeResp, error)
	Help(context.Context, *HelpReq) (*HelpResp, error)
}

// UnimplementedNode_APIServer can be embedded to have forward compatible implementations.
type UnimplementedNode_APIServer struct {
}

func (*UnimplementedNode_APIServer) GetConfig(context.Context, *GetConfigReq) (*GetConfigResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedNode_APIServer) OpenSession(context.Context, *OpenSessionReq) (*OpenSessionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenSession not implemented")
}
func (*UnimplementedNode_APIServer) Time(context.Context, *TimeReq) (*TimeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Time not implemented")
}
func (*UnimplementedNode_APIServer) Help(context.Context, *HelpReq) (*HelpResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Help not implemented")
}

func RegisterNode_APIServer(s *grpc.Server, srv Node_APIServer) {
	s.RegisterService(&_Node_API_serviceDesc, srv)
}

func _Node_API_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Node_APIServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Node_API/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Node_APIServer).GetConfig(ctx, req.(*GetConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_API_OpenSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenSessionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Node_APIServer).OpenSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Node_API/OpenSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Node_APIServer).OpenSession(ctx, req.(*OpenSessionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_API_Time_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Node_APIServer).Time(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Node_API/Time",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Node_APIServer).Time(ctx, req.(*TimeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_API_Help_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelpReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Node_APIServer).Help(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Node_API/Help",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Node_APIServer).Help(ctx, req.(*HelpReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Node_API",
	HandlerType: (*Node_APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _Node_API_GetConfig_Handler,
		},
		{
			MethodName: "OpenSession",
			Handler:    _Node_API_OpenSession_Handler,
		},
		{
			MethodName: "Time",
			Handler:    _Node_API_Time_Handler,
		},
		{
			MethodName: "Help",
			Handler:    _Node_API_Help_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// Session_APIClient is the client API for Session_API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Session_APIClient interface {
	AddContact(ctx context.Context, in *AddContactReq, opts ...grpc.CallOption) (*AddContactResp, error)
	GetContact(ctx context.Context, in *GetContactReq, opts ...grpc.CallOption) (*GetContactResp, error)
	OpenPayCh(ctx context.Context, in *OpenPayChReq, opts ...grpc.CallOption) (*OpenPayChResp, error)
	GetPayChs(ctx context.Context, in *GetPayChsReq, opts ...grpc.CallOption) (*GetPayChsResp, error)
	SubPayChProposals(ctx context.Context, in *SubPayChProposalsReq, opts ...grpc.CallOption) (Session_API_SubPayChProposalsClient, error)
	UnsubPayChProposals(ctx context.Context, in *UnsubPayChProposalsReq, opts ...grpc.CallOption) (*UnsubPayChProposalsResp, error)
	RespondPayChProposal(ctx context.Context, in *RespondPayChProposalReq, opts ...grpc.CallOption) (*RespondPayChProposalResp, error)
	SubPayChCloses(ctx context.Context, in *SubPayChClosesReq, opts ...grpc.CallOption) (Session_API_SubPayChClosesClient, error)
	UnsubPayChClose(ctx context.Context, in *UnsubPayChClosesReq, opts ...grpc.CallOption) (*UnsubPayChClosesResp, error)
	CloseSession(ctx context.Context, in *CloseSessionReq, opts ...grpc.CallOption) (*CloseSessionResp, error)
}

type session_APIClient struct {
	cc grpc.ClientConnInterface
}

func NewSession_APIClient(cc grpc.ClientConnInterface) Session_APIClient {
	return &session_APIClient{cc}
}

func (c *session_APIClient) AddContact(ctx context.Context, in *AddContactReq, opts ...grpc.CallOption) (*AddContactResp, error) {
	out := new(AddContactResp)
	err := c.cc.Invoke(ctx, "/grpc.Session_API/AddContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *session_APIClient) GetContact(ctx context.Context, in *GetContactReq, opts ...grpc.CallOption) (*GetContactResp, error) {
	out := new(GetContactResp)
	err := c.cc.Invoke(ctx, "/grpc.Session_API/GetContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *session_APIClient) OpenPayCh(ctx context.Context, in *OpenPayChReq, opts ...grpc.CallOption) (*OpenPayChResp, error) {
	out := new(OpenPayChResp)
	err := c.cc.Invoke(ctx, "/grpc.Session_API/OpenPayCh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *session_APIClient) GetPayChs(ctx context.Context, in *GetPayChsReq, opts ...grpc.CallOption) (*GetPayChsResp, error) {
	out := new(GetPayChsResp)
	err := c.cc.Invoke(ctx, "/grpc.Session_API/GetPayChs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *session_APIClient) SubPayChProposals(ctx context.Context, in *SubPayChProposalsReq, opts ...grpc.CallOption) (Session_API_SubPayChProposalsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Session_API_serviceDesc.Streams[0], "/grpc.Session_API/SubPayChProposals", opts...)
	if err != nil {
		return nil, err
	}
	x := &session_APISubPayChProposalsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Session_API_SubPayChProposalsClient interface {
	Recv() (*SubPayChProposalsResp, error)
	grpc.ClientStream
}

type session_APISubPayChProposalsClient struct {
	grpc.ClientStream
}

func (x *session_APISubPayChProposalsClient) Recv() (*SubPayChProposalsResp, error) {
	m := new(SubPayChProposalsResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *session_APIClient) UnsubPayChProposals(ctx context.Context, in *UnsubPayChProposalsReq, opts ...grpc.CallOption) (*UnsubPayChProposalsResp, error) {
	out := new(UnsubPayChProposalsResp)
	err := c.cc.Invoke(ctx, "/grpc.Session_API/UnsubPayChProposals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *session_APIClient) RespondPayChProposal(ctx context.Context, in *RespondPayChProposalReq, opts ...grpc.CallOption) (*RespondPayChProposalResp, error) {
	out := new(RespondPayChProposalResp)
	err := c.cc.Invoke(ctx, "/grpc.Session_API/RespondPayChProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *session_APIClient) SubPayChCloses(ctx context.Context, in *SubPayChClosesReq, opts ...grpc.CallOption) (Session_API_SubPayChClosesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Session_API_serviceDesc.Streams[1], "/grpc.Session_API/SubPayChCloses", opts...)
	if err != nil {
		return nil, err
	}
	x := &session_APISubPayChClosesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Session_API_SubPayChClosesClient interface {
	Recv() (*SubPayChClosesResp, error)
	grpc.ClientStream
}

type session_APISubPayChClosesClient struct {
	grpc.ClientStream
}

func (x *session_APISubPayChClosesClient) Recv() (*SubPayChClosesResp, error) {
	m := new(SubPayChClosesResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *session_APIClient) UnsubPayChClose(ctx context.Context, in *UnsubPayChClosesReq, opts ...grpc.CallOption) (*UnsubPayChClosesResp, error) {
	out := new(UnsubPayChClosesResp)
	err := c.cc.Invoke(ctx, "/grpc.Session_API/UnsubPayChClose", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *session_APIClient) CloseSession(ctx context.Context, in *CloseSessionReq, opts ...grpc.CallOption) (*CloseSessionResp, error) {
	out := new(CloseSessionResp)
	err := c.cc.Invoke(ctx, "/grpc.Session_API/CloseSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Session_APIServer is the server API for Session_API service.
type Session_APIServer interface {
	AddContact(context.Context, *AddContactReq) (*AddContactResp, error)
	GetContact(context.Context, *GetContactReq) (*GetContactResp, error)
	OpenPayCh(context.Context, *OpenPayChReq) (*OpenPayChResp, error)
	GetPayChs(context.Context, *GetPayChsReq) (*GetPayChsResp, error)
	SubPayChProposals(*SubPayChProposalsReq, Session_API_SubPayChProposalsServer) error
	UnsubPayChProposals(context.Context, *UnsubPayChProposalsReq) (*UnsubPayChProposalsResp, error)
	RespondPayChProposal(context.Context, *RespondPayChProposalReq) (*RespondPayChProposalResp, error)
	SubPayChCloses(*SubPayChClosesReq, Session_API_SubPayChClosesServer) error
	UnsubPayChClose(context.Context, *UnsubPayChClosesReq) (*UnsubPayChClosesResp, error)
	CloseSession(context.Context, *CloseSessionReq) (*CloseSessionResp, error)
}

// UnimplementedSession_APIServer can be embedded to have forward compatible implementations.
type UnimplementedSession_APIServer struct {
}

func (*UnimplementedSession_APIServer) AddContact(context.Context, *AddContactReq) (*AddContactResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddContact not implemented")
}
func (*UnimplementedSession_APIServer) GetContact(context.Context, *GetContactReq) (*GetContactResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContact not implemented")
}
func (*UnimplementedSession_APIServer) OpenPayCh(context.Context, *OpenPayChReq) (*OpenPayChResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenPayCh not implemented")
}
func (*UnimplementedSession_APIServer) GetPayChs(context.Context, *GetPayChsReq) (*GetPayChsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPayChs not implemented")
}
func (*UnimplementedSession_APIServer) SubPayChProposals(*SubPayChProposalsReq, Session_API_SubPayChProposalsServer) error {
	return status.Errorf(codes.Unimplemented, "method SubPayChProposals not implemented")
}
func (*UnimplementedSession_APIServer) UnsubPayChProposals(context.Context, *UnsubPayChProposalsReq) (*UnsubPayChProposalsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnsubPayChProposals not implemented")
}
func (*UnimplementedSession_APIServer) RespondPayChProposal(context.Context, *RespondPayChProposalReq) (*RespondPayChProposalResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RespondPayChProposal not implemented")
}
func (*UnimplementedSession_APIServer) SubPayChCloses(*SubPayChClosesReq, Session_API_SubPayChClosesServer) error {
	return status.Errorf(codes.Unimplemented, "method SubPayChCloses not implemented")
}
func (*UnimplementedSession_APIServer) UnsubPayChClose(context.Context, *UnsubPayChClosesReq) (*UnsubPayChClosesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnsubPayChClose not implemented")
}
func (*UnimplementedSession_APIServer) CloseSession(context.Context, *CloseSessionReq) (*CloseSessionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseSession not implemented")
}

func RegisterSession_APIServer(s *grpc.Server, srv Session_APIServer) {
	s.RegisterService(&_Session_API_serviceDesc, srv)
}

func _Session_API_AddContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddContactReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Session_APIServer).AddContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Session_API/AddContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Session_APIServer).AddContact(ctx, req.(*AddContactReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Session_API_GetContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContactReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Session_APIServer).GetContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Session_API/GetContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Session_APIServer).GetContact(ctx, req.(*GetContactReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Session_API_OpenPayCh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenPayChReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Session_APIServer).OpenPayCh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Session_API/OpenPayCh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Session_APIServer).OpenPayCh(ctx, req.(*OpenPayChReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Session_API_GetPayChs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPayChsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Session_APIServer).GetPayChs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Session_API/GetPayChs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Session_APIServer).GetPayChs(ctx, req.(*GetPayChsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Session_API_SubPayChProposals_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubPayChProposalsReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(Session_APIServer).SubPayChProposals(m, &session_APISubPayChProposalsServer{stream})
}

type Session_API_SubPayChProposalsServer interface {
	Send(*SubPayChProposalsResp) error
	grpc.ServerStream
}

type session_APISubPayChProposalsServer struct {
	grpc.ServerStream
}

func (x *session_APISubPayChProposalsServer) Send(m *SubPayChProposalsResp) error {
	return x.ServerStream.SendMsg(m)
}

func _Session_API_UnsubPayChProposals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubPayChProposalsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Session_APIServer).UnsubPayChProposals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Session_API/UnsubPayChProposals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Session_APIServer).UnsubPayChProposals(ctx, req.(*UnsubPayChProposalsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Session_API_RespondPayChProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RespondPayChProposalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Session_APIServer).RespondPayChProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Session_API/RespondPayChProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Session_APIServer).RespondPayChProposal(ctx, req.(*RespondPayChProposalReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Session_API_SubPayChCloses_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubPayChClosesReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(Session_APIServer).SubPayChCloses(m, &session_APISubPayChClosesServer{stream})
}

type Session_API_SubPayChClosesServer interface {
	Send(*SubPayChClosesResp) error
	grpc.ServerStream
}

type session_APISubPayChClosesServer struct {
	grpc.ServerStream
}

func (x *session_APISubPayChClosesServer) Send(m *SubPayChClosesResp) error {
	return x.ServerStream.SendMsg(m)
}

func _Session_API_UnsubPayChClose_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubPayChClosesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Session_APIServer).UnsubPayChClose(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Session_API/UnsubPayChClose",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Session_APIServer).UnsubPayChClose(ctx, req.(*UnsubPayChClosesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Session_API_CloseSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseSessionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Session_APIServer).CloseSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Session_API/CloseSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Session_APIServer).CloseSession(ctx, req.(*CloseSessionReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Session_API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Session_API",
	HandlerType: (*Session_APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddContact",
			Handler:    _Session_API_AddContact_Handler,
		},
		{
			MethodName: "GetContact",
			Handler:    _Session_API_GetContact_Handler,
		},
		{
			MethodName: "OpenPayCh",
			Handler:    _Session_API_OpenPayCh_Handler,
		},
		{
			MethodName: "GetPayChs",
			Handler:    _Session_API_GetPayChs_Handler,
		},
		{
			MethodName: "UnsubPayChProposals",
			Handler:    _Session_API_UnsubPayChProposals_Handler,
		},
		{
			MethodName: "RespondPayChProposal",
			Handler:    _Session_API_RespondPayChProposal_Handler,
		},
		{
			MethodName: "UnsubPayChClose",
			Handler:    _Session_API_UnsubPayChClose_Handler,
		},
		{
			MethodName: "CloseSession",
			Handler:    _Session_API_CloseSession_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubPayChProposals",
			Handler:       _Session_API_SubPayChProposals_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubPayChCloses",
			Handler:       _Session_API_SubPayChCloses_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

// Channel_APIClient is the client API for Channel_API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Channel_APIClient interface {
	SendPayChUpdate(ctx context.Context, in *SendPayChUpdateReq, opts ...grpc.CallOption) (*SendPayChUpdateResp, error)
	SubPayChUpdates(ctx context.Context, in *SubpayChUpdatesReq, opts ...grpc.CallOption) (Channel_API_SubPayChUpdatesClient, error)
	UnsubPayChUpdates(ctx context.Context, in *UnsubPayChUpdatesReq, opts ...grpc.CallOption) (*UnsubPayChUpdatesResp, error)
	RespondPayChUpdate(ctx context.Context, in *RespondPayChUpdateReq, opts ...grpc.CallOption) (*RespondPayChUpdateResp, error)
	GetBalance(ctx context.Context, in *GetBalanceReq, opts ...grpc.CallOption) (*GetBalanceResp, error)
	ClosePayCh(ctx context.Context, in *ClosePayChReq, opts ...grpc.CallOption) (*ClosePayChResp, error)
}

type channel_APIClient struct {
	cc grpc.ClientConnInterface
}

func NewChannel_APIClient(cc grpc.ClientConnInterface) Channel_APIClient {
	return &channel_APIClient{cc}
}

func (c *channel_APIClient) SendPayChUpdate(ctx context.Context, in *SendPayChUpdateReq, opts ...grpc.CallOption) (*SendPayChUpdateResp, error) {
	out := new(SendPayChUpdateResp)
	err := c.cc.Invoke(ctx, "/grpc.Channel_API/SendPayChUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channel_APIClient) SubPayChUpdates(ctx context.Context, in *SubpayChUpdatesReq, opts ...grpc.CallOption) (Channel_API_SubPayChUpdatesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Channel_API_serviceDesc.Streams[0], "/grpc.Channel_API/SubPayChUpdates", opts...)
	if err != nil {
		return nil, err
	}
	x := &channel_APISubPayChUpdatesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Channel_API_SubPayChUpdatesClient interface {
	Recv() (*SubPayChUpdatesResp, error)
	grpc.ClientStream
}

type channel_APISubPayChUpdatesClient struct {
	grpc.ClientStream
}

func (x *channel_APISubPayChUpdatesClient) Recv() (*SubPayChUpdatesResp, error) {
	m := new(SubPayChUpdatesResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *channel_APIClient) UnsubPayChUpdates(ctx context.Context, in *UnsubPayChUpdatesReq, opts ...grpc.CallOption) (*UnsubPayChUpdatesResp, error) {
	out := new(UnsubPayChUpdatesResp)
	err := c.cc.Invoke(ctx, "/grpc.Channel_API/UnsubPayChUpdates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channel_APIClient) RespondPayChUpdate(ctx context.Context, in *RespondPayChUpdateReq, opts ...grpc.CallOption) (*RespondPayChUpdateResp, error) {
	out := new(RespondPayChUpdateResp)
	err := c.cc.Invoke(ctx, "/grpc.Channel_API/RespondPayChUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channel_APIClient) GetBalance(ctx context.Context, in *GetBalanceReq, opts ...grpc.CallOption) (*GetBalanceResp, error) {
	out := new(GetBalanceResp)
	err := c.cc.Invoke(ctx, "/grpc.Channel_API/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channel_APIClient) ClosePayCh(ctx context.Context, in *ClosePayChReq, opts ...grpc.CallOption) (*ClosePayChResp, error) {
	out := new(ClosePayChResp)
	err := c.cc.Invoke(ctx, "/grpc.Channel_API/ClosePayCh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Channel_APIServer is the server API for Channel_API service.
type Channel_APIServer interface {
	SendPayChUpdate(context.Context, *SendPayChUpdateReq) (*SendPayChUpdateResp, error)
	SubPayChUpdates(*SubpayChUpdatesReq, Channel_API_SubPayChUpdatesServer) error
	UnsubPayChUpdates(context.Context, *UnsubPayChUpdatesReq) (*UnsubPayChUpdatesResp, error)
	RespondPayChUpdate(context.Context, *RespondPayChUpdateReq) (*RespondPayChUpdateResp, error)
	GetBalance(context.Context, *GetBalanceReq) (*GetBalanceResp, error)
	ClosePayCh(context.Context, *ClosePayChReq) (*ClosePayChResp, error)
}

// UnimplementedChannel_APIServer can be embedded to have forward compatible implementations.
type UnimplementedChannel_APIServer struct {
}

func (*UnimplementedChannel_APIServer) SendPayChUpdate(context.Context, *SendPayChUpdateReq) (*SendPayChUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendPayChUpdate not implemented")
}
func (*UnimplementedChannel_APIServer) SubPayChUpdates(*SubpayChUpdatesReq, Channel_API_SubPayChUpdatesServer) error {
	return status.Errorf(codes.Unimplemented, "method SubPayChUpdates not implemented")
}
func (*UnimplementedChannel_APIServer) UnsubPayChUpdates(context.Context, *UnsubPayChUpdatesReq) (*UnsubPayChUpdatesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnsubPayChUpdates not implemented")
}
func (*UnimplementedChannel_APIServer) RespondPayChUpdate(context.Context, *RespondPayChUpdateReq) (*RespondPayChUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RespondPayChUpdate not implemented")
}
func (*UnimplementedChannel_APIServer) GetBalance(context.Context, *GetBalanceReq) (*GetBalanceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedChannel_APIServer) ClosePayCh(context.Context, *ClosePayChReq) (*ClosePayChResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClosePayCh not implemented")
}

func RegisterChannel_APIServer(s *grpc.Server, srv Channel_APIServer) {
	s.RegisterService(&_Channel_API_serviceDesc, srv)
}

func _Channel_API_SendPayChUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendPayChUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Channel_APIServer).SendPayChUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Channel_API/SendPayChUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Channel_APIServer).SendPayChUpdate(ctx, req.(*SendPayChUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_API_SubPayChUpdates_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubpayChUpdatesReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(Channel_APIServer).SubPayChUpdates(m, &channel_APISubPayChUpdatesServer{stream})
}

type Channel_API_SubPayChUpdatesServer interface {
	Send(*SubPayChUpdatesResp) error
	grpc.ServerStream
}

type channel_APISubPayChUpdatesServer struct {
	grpc.ServerStream
}

func (x *channel_APISubPayChUpdatesServer) Send(m *SubPayChUpdatesResp) error {
	return x.ServerStream.SendMsg(m)
}

func _Channel_API_UnsubPayChUpdates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubPayChUpdatesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Channel_APIServer).UnsubPayChUpdates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Channel_API/UnsubPayChUpdates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Channel_APIServer).UnsubPayChUpdates(ctx, req.(*UnsubPayChUpdatesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_API_RespondPayChUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RespondPayChUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Channel_APIServer).RespondPayChUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Channel_API/RespondPayChUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Channel_APIServer).RespondPayChUpdate(ctx, req.(*RespondPayChUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_API_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBalanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Channel_APIServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Channel_API/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Channel_APIServer).GetBalance(ctx, req.(*GetBalanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Channel_API_ClosePayCh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClosePayChReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Channel_APIServer).ClosePayCh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Channel_API/ClosePayCh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Channel_APIServer).ClosePayCh(ctx, req.(*ClosePayChReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Channel_API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Channel_API",
	HandlerType: (*Channel_APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendPayChUpdate",
			Handler:    _Channel_API_SendPayChUpdate_Handler,
		},
		{
			MethodName: "UnsubPayChUpdates",
			Handler:    _Channel_API_UnsubPayChUpdates_Handler,
		},
		{
			MethodName: "RespondPayChUpdate",
			Handler:    _Channel_API_RespondPayChUpdate_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _Channel_API_GetBalance_Handler,
		},
		{
			MethodName: "ClosePayCh",
			Handler:    _Channel_API_ClosePayCh_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubPayChUpdates",
			Handler:       _Channel_API_SubPayChUpdates_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

// Copyright (c) 2020 - for information on the respective copyright owner
// see the NOTICE file and/or the repository at
// https://github.com/hyperledger-labs/perun-node
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: api.proto

// Package pb contains proto3 definitions for user API and the corresponding
// generated code for grpc server and client.

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SubPayChUpdatesResp_Notify_ChUpdateType int32

const (
	SubPayChUpdatesResp_Notify_open   SubPayChUpdatesResp_Notify_ChUpdateType = 0
	SubPayChUpdatesResp_Notify_final  SubPayChUpdatesResp_Notify_ChUpdateType = 1
	SubPayChUpdatesResp_Notify_closed SubPayChUpdatesResp_Notify_ChUpdateType = 2
)

// Enum value maps for SubPayChUpdatesResp_Notify_ChUpdateType.
var (
	SubPayChUpdatesResp_Notify_ChUpdateType_name = map[int32]string{
		0: "open",
		1: "final",
		2: "closed",
	}
	SubPayChUpdatesResp_Notify_ChUpdateType_value = map[string]int32{
		"open":   0,
		"final":  1,
		"closed": 2,
	}
)

func (x SubPayChUpdatesResp_Notify_ChUpdateType) Enum() *SubPayChUpdatesResp_Notify_ChUpdateType {
	p := new(SubPayChUpdatesResp_Notify_ChUpdateType)
	*p = x
	return p
}

func (x SubPayChUpdatesResp_Notify_ChUpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubPayChUpdatesResp_Notify_ChUpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (SubPayChUpdatesResp_Notify_ChUpdateType) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x SubPayChUpdatesResp_Notify_ChUpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubPayChUpdatesResp_Notify_ChUpdateType.Descriptor instead.
func (SubPayChUpdatesResp_Notify_ChUpdateType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{31, 0, 0}
}

// Peer represents a peer in the off-chain network.
type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias           string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	OffChainAddress string `protobuf:"bytes,2,opt,name=offChainAddress,proto3" json:"offChainAddress,omitempty"`
	CommAddress     string `protobuf:"bytes,3,opt,name=commAddress,proto3" json:"commAddress,omitempty"`
	CommType        string `protobuf:"bytes,4,opt,name=commType,proto3" json:"commType,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *Peer) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Peer) GetOffChainAddress() string {
	if x != nil {
		return x.OffChainAddress
	}
	return ""
}

func (x *Peer) GetCommAddress() string {
	if x != nil {
		return x.CommAddress
	}
	return ""
}

func (x *Peer) GetCommType() string {
	if x != nil {
		return x.CommType
	}
	return ""
}

// BalInfo represents the balance information of the channel: Currency and the channel balance.
// Balance is represented as two corresponding lists:
// Parts contains the list of aliases of the channel participants and
// Balance list contains the amount held by each channel participant in the give currency.
//
// A valid BalInfo should meet the following conditions, it should be validated when using them.
//	1. Lengths of Parts list and Balance list are equal.
//	2. All entries in Parts list are unique.
//	3. Parts list has an entry "self", that represents the user of the session.
//	4. No amount in Balance must be negative.
type BalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string   `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Parts    []string `protobuf:"bytes,2,rep,name=parts,proto3" json:"parts,omitempty"`
	Bal      []string `protobuf:"bytes,3,rep,name=bal,proto3" json:"bal,omitempty"`
}

func (x *BalInfo) Reset() {
	*x = BalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalInfo) ProtoMessage() {}

func (x *BalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalInfo.ProtoReflect.Descriptor instead.
func (*BalInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *BalInfo) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *BalInfo) GetParts() []string {
	if x != nil {
		return x.Parts
	}
	return nil
}

func (x *BalInfo) GetBal() []string {
	if x != nil {
		return x.Bal
	}
	return nil
}

type PayChInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChID    string   `protobuf:"bytes,1,opt,name=chID,proto3" json:"chID,omitempty"`
	BalInfo *BalInfo `protobuf:"bytes,2,opt,name=balInfo,proto3" json:"balInfo,omitempty"`
	Version string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *PayChInfo) Reset() {
	*x = PayChInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChInfo) ProtoMessage() {}

func (x *PayChInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChInfo.ProtoReflect.Descriptor instead.
func (*PayChInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *PayChInfo) GetChID() string {
	if x != nil {
		return x.ChID
	}
	return ""
}

func (x *PayChInfo) GetBalInfo() *BalInfo {
	if x != nil {
		return x.BalInfo
	}
	return nil
}

func (x *PayChInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type MsgError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *MsgError) Reset() {
	*x = MsgError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgError) ProtoMessage() {}

func (x *MsgError) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgError.ProtoReflect.Descriptor instead.
func (*MsgError) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *MsgError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConfigReq) Reset() {
	*x = GetConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigReq) ProtoMessage() {}

func (x *GetConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigReq.ProtoReflect.Descriptor instead.
func (*GetConfigReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

type GetConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainAddress       string   `protobuf:"bytes,1,opt,name=chainAddress,proto3" json:"chainAddress,omitempty"`
	AdjudicatorAddress string   `protobuf:"bytes,2,opt,name=adjudicatorAddress,proto3" json:"adjudicatorAddress,omitempty"`
	AssetAddress       string   `protobuf:"bytes,3,opt,name=assetAddress,proto3" json:"assetAddress,omitempty"`
	CommTypes          []string `protobuf:"bytes,4,rep,name=commTypes,proto3" json:"commTypes,omitempty"`
	ContactTypes       []string `protobuf:"bytes,5,rep,name=contactTypes,proto3" json:"contactTypes,omitempty"`
}

func (x *GetConfigResp) Reset() {
	*x = GetConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResp) ProtoMessage() {}

func (x *GetConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResp.ProtoReflect.Descriptor instead.
func (*GetConfigResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetConfigResp) GetChainAddress() string {
	if x != nil {
		return x.ChainAddress
	}
	return ""
}

func (x *GetConfigResp) GetAdjudicatorAddress() string {
	if x != nil {
		return x.AdjudicatorAddress
	}
	return ""
}

func (x *GetConfigResp) GetAssetAddress() string {
	if x != nil {
		return x.AssetAddress
	}
	return ""
}

func (x *GetConfigResp) GetCommTypes() []string {
	if x != nil {
		return x.CommTypes
	}
	return nil
}

func (x *GetConfigResp) GetContactTypes() []string {
	if x != nil {
		return x.ContactTypes
	}
	return nil
}

type OpenSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigFile string `protobuf:"bytes,1,opt,name=configFile,proto3" json:"configFile,omitempty"`
}

func (x *OpenSessionReq) Reset() {
	*x = OpenSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionReq) ProtoMessage() {}

func (x *OpenSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSessionReq.ProtoReflect.Descriptor instead.
func (*OpenSessionReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *OpenSessionReq) GetConfigFile() string {
	if x != nil {
		return x.ConfigFile
	}
	return ""
}

type OpenSessionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*OpenSessionResp_MsgSuccess_
	//	*OpenSessionResp_Error
	Response isOpenSessionResp_Response `protobuf_oneof:"response"`
}

func (x *OpenSessionResp) Reset() {
	*x = OpenSessionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSessionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionResp) ProtoMessage() {}

func (x *OpenSessionResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSessionResp.ProtoReflect.Descriptor instead.
func (*OpenSessionResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (m *OpenSessionResp) GetResponse() isOpenSessionResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *OpenSessionResp) GetMsgSuccess() *OpenSessionResp_MsgSuccess {
	if x, ok := x.GetResponse().(*OpenSessionResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *OpenSessionResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*OpenSessionResp_Error); ok {
		return x.Error
	}
	return nil
}

type isOpenSessionResp_Response interface {
	isOpenSessionResp_Response()
}

type OpenSessionResp_MsgSuccess_ struct {
	MsgSuccess *OpenSessionResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type OpenSessionResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*OpenSessionResp_MsgSuccess_) isOpenSessionResp_Response() {}

func (*OpenSessionResp_Error) isOpenSessionResp_Response() {}

type TimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TimeReq) Reset() {
	*x = TimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeReq) ProtoMessage() {}

func (x *TimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeReq.ProtoReflect.Descriptor instead.
func (*TimeReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

type TimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TimeResp) Reset() {
	*x = TimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeResp) ProtoMessage() {}

func (x *TimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeResp.ProtoReflect.Descriptor instead.
func (*TimeResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *TimeResp) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type HelpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HelpReq) Reset() {
	*x = HelpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpReq) ProtoMessage() {}

func (x *HelpReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpReq.ProtoReflect.Descriptor instead.
func (*HelpReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

type HelpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apis []string `protobuf:"bytes,1,rep,name=apis,proto3" json:"apis,omitempty"`
}

func (x *HelpResp) Reset() {
	*x = HelpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpResp) ProtoMessage() {}

func (x *HelpResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpResp.ProtoReflect.Descriptor instead.
func (*HelpResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *HelpResp) GetApis() []string {
	if x != nil {
		return x.Apis
	}
	return nil
}

type AddContactReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Peer      *Peer  `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *AddContactReq) Reset() {
	*x = AddContactReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContactReq) ProtoMessage() {}

func (x *AddContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContactReq.ProtoReflect.Descriptor instead.
func (*AddContactReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *AddContactReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *AddContactReq) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type AddContactResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*AddContactResp_MsgSuccess_
	//	*AddContactResp_Error
	Response isAddContactResp_Response `protobuf_oneof:"response"`
}

func (x *AddContactResp) Reset() {
	*x = AddContactResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddContactResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContactResp) ProtoMessage() {}

func (x *AddContactResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContactResp.ProtoReflect.Descriptor instead.
func (*AddContactResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (m *AddContactResp) GetResponse() isAddContactResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AddContactResp) GetMsgSuccess() *AddContactResp_MsgSuccess {
	if x, ok := x.GetResponse().(*AddContactResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *AddContactResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*AddContactResp_Error); ok {
		return x.Error
	}
	return nil
}

type isAddContactResp_Response interface {
	isAddContactResp_Response()
}

type AddContactResp_MsgSuccess_ struct {
	MsgSuccess *AddContactResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type AddContactResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*AddContactResp_MsgSuccess_) isAddContactResp_Response() {}

func (*AddContactResp_Error) isAddContactResp_Response() {}

type GetContactReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Alias     string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *GetContactReq) Reset() {
	*x = GetContactReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactReq) ProtoMessage() {}

func (x *GetContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactReq.ProtoReflect.Descriptor instead.
func (*GetContactReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *GetContactReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *GetContactReq) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type GetContactResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetContactResp_MsgSuccess_
	//	*GetContactResp_Error
	Response isGetContactResp_Response `protobuf_oneof:"response"`
}

func (x *GetContactResp) Reset() {
	*x = GetContactResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactResp) ProtoMessage() {}

func (x *GetContactResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactResp.ProtoReflect.Descriptor instead.
func (*GetContactResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (m *GetContactResp) GetResponse() isGetContactResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetContactResp) GetMsgSuccess() *GetContactResp_MsgSuccess {
	if x, ok := x.GetResponse().(*GetContactResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *GetContactResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*GetContactResp_Error); ok {
		return x.Error
	}
	return nil
}

type isGetContactResp_Response interface {
	isGetContactResp_Response()
}

type GetContactResp_MsgSuccess_ struct {
	MsgSuccess *GetContactResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type GetContactResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*GetContactResp_MsgSuccess_) isGetContactResp_Response() {}

func (*GetContactResp_Error) isGetContactResp_Response() {}

type OpenPayChReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID        string   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	OpeningBalInfo   *BalInfo `protobuf:"bytes,2,opt,name=openingBalInfo,proto3" json:"openingBalInfo,omitempty"`
	ChallengeDurSecs uint64   `protobuf:"varint,3,opt,name=challengeDurSecs,proto3" json:"challengeDurSecs,omitempty"`
}

func (x *OpenPayChReq) Reset() {
	*x = OpenPayChReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPayChReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPayChReq) ProtoMessage() {}

func (x *OpenPayChReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPayChReq.ProtoReflect.Descriptor instead.
func (*OpenPayChReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

func (x *OpenPayChReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *OpenPayChReq) GetOpeningBalInfo() *BalInfo {
	if x != nil {
		return x.OpeningBalInfo
	}
	return nil
}

func (x *OpenPayChReq) GetChallengeDurSecs() uint64 {
	if x != nil {
		return x.ChallengeDurSecs
	}
	return 0
}

type OpenPayChResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*OpenPayChResp_MsgSuccess_
	//	*OpenPayChResp_Error
	Response isOpenPayChResp_Response `protobuf_oneof:"response"`
}

func (x *OpenPayChResp) Reset() {
	*x = OpenPayChResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPayChResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPayChResp) ProtoMessage() {}

func (x *OpenPayChResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPayChResp.ProtoReflect.Descriptor instead.
func (*OpenPayChResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

func (m *OpenPayChResp) GetResponse() isOpenPayChResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *OpenPayChResp) GetMsgSuccess() *OpenPayChResp_MsgSuccess {
	if x, ok := x.GetResponse().(*OpenPayChResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *OpenPayChResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*OpenPayChResp_Error); ok {
		return x.Error
	}
	return nil
}

type isOpenPayChResp_Response interface {
	isOpenPayChResp_Response()
}

type OpenPayChResp_MsgSuccess_ struct {
	MsgSuccess *OpenPayChResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type OpenPayChResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*OpenPayChResp_MsgSuccess_) isOpenPayChResp_Response() {}

func (*OpenPayChResp_Error) isOpenPayChResp_Response() {}

type GetPayChsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *GetPayChsReq) Reset() {
	*x = GetPayChsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChsReq) ProtoMessage() {}

func (x *GetPayChsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChsReq.ProtoReflect.Descriptor instead.
func (*GetPayChsReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

func (x *GetPayChsReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type GetPayChsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetPayChsResp_MsgSuccess_
	//	*GetPayChsResp_Error
	Response isGetPayChsResp_Response `protobuf_oneof:"response"`
}

func (x *GetPayChsResp) Reset() {
	*x = GetPayChsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChsResp) ProtoMessage() {}

func (x *GetPayChsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChsResp.ProtoReflect.Descriptor instead.
func (*GetPayChsResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (m *GetPayChsResp) GetResponse() isGetPayChsResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetPayChsResp) GetMsgSuccess() *GetPayChsResp_MsgSuccess {
	if x, ok := x.GetResponse().(*GetPayChsResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *GetPayChsResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*GetPayChsResp_Error); ok {
		return x.Error
	}
	return nil
}

type isGetPayChsResp_Response interface {
	isGetPayChsResp_Response()
}

type GetPayChsResp_MsgSuccess_ struct {
	MsgSuccess *GetPayChsResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type GetPayChsResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*GetPayChsResp_MsgSuccess_) isGetPayChsResp_Response() {}

func (*GetPayChsResp_Error) isGetPayChsResp_Response() {}

type SubPayChProposalsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *SubPayChProposalsReq) Reset() {
	*x = SubPayChProposalsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChProposalsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChProposalsReq) ProtoMessage() {}

func (x *SubPayChProposalsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChProposalsReq.ProtoReflect.Descriptor instead.
func (*SubPayChProposalsReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *SubPayChProposalsReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type SubPayChProposalsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*SubPayChProposalsResp_Notify_
	//	*SubPayChProposalsResp_Error
	Response isSubPayChProposalsResp_Response `protobuf_oneof:"response"`
}

func (x *SubPayChProposalsResp) Reset() {
	*x = SubPayChProposalsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChProposalsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChProposalsResp) ProtoMessage() {}

func (x *SubPayChProposalsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChProposalsResp.ProtoReflect.Descriptor instead.
func (*SubPayChProposalsResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21}
}

func (m *SubPayChProposalsResp) GetResponse() isSubPayChProposalsResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SubPayChProposalsResp) GetNotify() *SubPayChProposalsResp_Notify {
	if x, ok := x.GetResponse().(*SubPayChProposalsResp_Notify_); ok {
		return x.Notify
	}
	return nil
}

func (x *SubPayChProposalsResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*SubPayChProposalsResp_Error); ok {
		return x.Error
	}
	return nil
}

type isSubPayChProposalsResp_Response interface {
	isSubPayChProposalsResp_Response()
}

type SubPayChProposalsResp_Notify_ struct {
	Notify *SubPayChProposalsResp_Notify `protobuf:"bytes,1,opt,name=notify,proto3,oneof"`
}

type SubPayChProposalsResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SubPayChProposalsResp_Notify_) isSubPayChProposalsResp_Response() {}

func (*SubPayChProposalsResp_Error) isSubPayChProposalsResp_Response() {}

type UnsubPayChProposalsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *UnsubPayChProposalsReq) Reset() {
	*x = UnsubPayChProposalsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChProposalsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChProposalsReq) ProtoMessage() {}

func (x *UnsubPayChProposalsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChProposalsReq.ProtoReflect.Descriptor instead.
func (*UnsubPayChProposalsReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{22}
}

func (x *UnsubPayChProposalsReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type UnsubPayChProposalsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*UnsubPayChProposalsResp_MsgSuccess_
	//	*UnsubPayChProposalsResp_Error
	Response isUnsubPayChProposalsResp_Response `protobuf_oneof:"response"`
}

func (x *UnsubPayChProposalsResp) Reset() {
	*x = UnsubPayChProposalsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChProposalsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChProposalsResp) ProtoMessage() {}

func (x *UnsubPayChProposalsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChProposalsResp.ProtoReflect.Descriptor instead.
func (*UnsubPayChProposalsResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{23}
}

func (m *UnsubPayChProposalsResp) GetResponse() isUnsubPayChProposalsResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UnsubPayChProposalsResp) GetMsgSuccess() *UnsubPayChProposalsResp_MsgSuccess {
	if x, ok := x.GetResponse().(*UnsubPayChProposalsResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *UnsubPayChProposalsResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*UnsubPayChProposalsResp_Error); ok {
		return x.Error
	}
	return nil
}

type isUnsubPayChProposalsResp_Response interface {
	isUnsubPayChProposalsResp_Response()
}

type UnsubPayChProposalsResp_MsgSuccess_ struct {
	MsgSuccess *UnsubPayChProposalsResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type UnsubPayChProposalsResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*UnsubPayChProposalsResp_MsgSuccess_) isUnsubPayChProposalsResp_Response() {}

func (*UnsubPayChProposalsResp_Error) isUnsubPayChProposalsResp_Response() {}

type RespondPayChProposalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID  string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ProposalID string `protobuf:"bytes,2,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
	Accept     bool   `protobuf:"varint,3,opt,name=accept,proto3" json:"accept,omitempty"`
}

func (x *RespondPayChProposalReq) Reset() {
	*x = RespondPayChProposalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChProposalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChProposalReq) ProtoMessage() {}

func (x *RespondPayChProposalReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChProposalReq.ProtoReflect.Descriptor instead.
func (*RespondPayChProposalReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{24}
}

func (x *RespondPayChProposalReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *RespondPayChProposalReq) GetProposalID() string {
	if x != nil {
		return x.ProposalID
	}
	return ""
}

func (x *RespondPayChProposalReq) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

type RespondPayChProposalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*RespondPayChProposalResp_MsgSuccess_
	//	*RespondPayChProposalResp_Error
	Response isRespondPayChProposalResp_Response `protobuf_oneof:"response"`
}

func (x *RespondPayChProposalResp) Reset() {
	*x = RespondPayChProposalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChProposalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChProposalResp) ProtoMessage() {}

func (x *RespondPayChProposalResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChProposalResp.ProtoReflect.Descriptor instead.
func (*RespondPayChProposalResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{25}
}

func (m *RespondPayChProposalResp) GetResponse() isRespondPayChProposalResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RespondPayChProposalResp) GetMsgSuccess() *RespondPayChProposalResp_MsgSuccess {
	if x, ok := x.GetResponse().(*RespondPayChProposalResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *RespondPayChProposalResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*RespondPayChProposalResp_Error); ok {
		return x.Error
	}
	return nil
}

type isRespondPayChProposalResp_Response interface {
	isRespondPayChProposalResp_Response()
}

type RespondPayChProposalResp_MsgSuccess_ struct {
	MsgSuccess *RespondPayChProposalResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type RespondPayChProposalResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*RespondPayChProposalResp_MsgSuccess_) isRespondPayChProposalResp_Response() {}

func (*RespondPayChProposalResp_Error) isRespondPayChProposalResp_Response() {}

type CloseSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Force     bool   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *CloseSessionReq) Reset() {
	*x = CloseSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionReq) ProtoMessage() {}

func (x *CloseSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionReq.ProtoReflect.Descriptor instead.
func (*CloseSessionReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{26}
}

func (x *CloseSessionReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *CloseSessionReq) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type CloseSessionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*CloseSessionResp_MsgSuccess_
	//	*CloseSessionResp_Erro
	Response isCloseSessionResp_Response `protobuf_oneof:"response"`
}

func (x *CloseSessionResp) Reset() {
	*x = CloseSessionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSessionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionResp) ProtoMessage() {}

func (x *CloseSessionResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionResp.ProtoReflect.Descriptor instead.
func (*CloseSessionResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{27}
}

func (m *CloseSessionResp) GetResponse() isCloseSessionResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CloseSessionResp) GetMsgSuccess() *CloseSessionResp_MsgSuccess {
	if x, ok := x.GetResponse().(*CloseSessionResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *CloseSessionResp) GetErro() string {
	if x, ok := x.GetResponse().(*CloseSessionResp_Erro); ok {
		return x.Erro
	}
	return ""
}

type isCloseSessionResp_Response interface {
	isCloseSessionResp_Response()
}

type CloseSessionResp_MsgSuccess_ struct {
	MsgSuccess *CloseSessionResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type CloseSessionResp_Erro struct {
	Erro string `protobuf:"bytes,2,opt,name=erro,proto3,oneof"`
}

func (*CloseSessionResp_MsgSuccess_) isCloseSessionResp_Response() {}

func (*CloseSessionResp_Erro) isCloseSessionResp_Response() {}

type SendPayChUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChID      string `protobuf:"bytes,2,opt,name=chID,proto3" json:"chID,omitempty"`
	Payee     string `protobuf:"bytes,3,opt,name=payee,proto3" json:"payee,omitempty"`
	Amount    string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *SendPayChUpdateReq) Reset() {
	*x = SendPayChUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPayChUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPayChUpdateReq) ProtoMessage() {}

func (x *SendPayChUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPayChUpdateReq.ProtoReflect.Descriptor instead.
func (*SendPayChUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{28}
}

func (x *SendPayChUpdateReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *SendPayChUpdateReq) GetChID() string {
	if x != nil {
		return x.ChID
	}
	return ""
}

func (x *SendPayChUpdateReq) GetPayee() string {
	if x != nil {
		return x.Payee
	}
	return ""
}

func (x *SendPayChUpdateReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type SendPayChUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*SendPayChUpdateResp_MsgSuccess_
	//	*SendPayChUpdateResp_Error
	Response isSendPayChUpdateResp_Response `protobuf_oneof:"response"`
}

func (x *SendPayChUpdateResp) Reset() {
	*x = SendPayChUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPayChUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPayChUpdateResp) ProtoMessage() {}

func (x *SendPayChUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPayChUpdateResp.ProtoReflect.Descriptor instead.
func (*SendPayChUpdateResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{29}
}

func (m *SendPayChUpdateResp) GetResponse() isSendPayChUpdateResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SendPayChUpdateResp) GetMsgSuccess() *SendPayChUpdateResp_MsgSuccess {
	if x, ok := x.GetResponse().(*SendPayChUpdateResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *SendPayChUpdateResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*SendPayChUpdateResp_Error); ok {
		return x.Error
	}
	return nil
}

type isSendPayChUpdateResp_Response interface {
	isSendPayChUpdateResp_Response()
}

type SendPayChUpdateResp_MsgSuccess_ struct {
	MsgSuccess *SendPayChUpdateResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type SendPayChUpdateResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SendPayChUpdateResp_MsgSuccess_) isSendPayChUpdateResp_Response() {}

func (*SendPayChUpdateResp_Error) isSendPayChUpdateResp_Response() {}

type SubpayChUpdatesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChID      string `protobuf:"bytes,2,opt,name=chID,proto3" json:"chID,omitempty"`
}

func (x *SubpayChUpdatesReq) Reset() {
	*x = SubpayChUpdatesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubpayChUpdatesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubpayChUpdatesReq) ProtoMessage() {}

func (x *SubpayChUpdatesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubpayChUpdatesReq.ProtoReflect.Descriptor instead.
func (*SubpayChUpdatesReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{30}
}

func (x *SubpayChUpdatesReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *SubpayChUpdatesReq) GetChID() string {
	if x != nil {
		return x.ChID
	}
	return ""
}

type SubPayChUpdatesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*SubPayChUpdatesResp_Notify_
	//	*SubPayChUpdatesResp_Error
	Response isSubPayChUpdatesResp_Response `protobuf_oneof:"response"`
}

func (x *SubPayChUpdatesResp) Reset() {
	*x = SubPayChUpdatesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChUpdatesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChUpdatesResp) ProtoMessage() {}

func (x *SubPayChUpdatesResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChUpdatesResp.ProtoReflect.Descriptor instead.
func (*SubPayChUpdatesResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{31}
}

func (m *SubPayChUpdatesResp) GetResponse() isSubPayChUpdatesResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SubPayChUpdatesResp) GetNotify() *SubPayChUpdatesResp_Notify {
	if x, ok := x.GetResponse().(*SubPayChUpdatesResp_Notify_); ok {
		return x.Notify
	}
	return nil
}

func (x *SubPayChUpdatesResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*SubPayChUpdatesResp_Error); ok {
		return x.Error
	}
	return nil
}

type isSubPayChUpdatesResp_Response interface {
	isSubPayChUpdatesResp_Response()
}

type SubPayChUpdatesResp_Notify_ struct {
	Notify *SubPayChUpdatesResp_Notify `protobuf:"bytes,1,opt,name=notify,proto3,oneof"`
}

type SubPayChUpdatesResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SubPayChUpdatesResp_Notify_) isSubPayChUpdatesResp_Response() {}

func (*SubPayChUpdatesResp_Error) isSubPayChUpdatesResp_Response() {}

type UnsubPayChUpdatesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChID      string `protobuf:"bytes,2,opt,name=chID,proto3" json:"chID,omitempty"`
}

func (x *UnsubPayChUpdatesReq) Reset() {
	*x = UnsubPayChUpdatesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChUpdatesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChUpdatesReq) ProtoMessage() {}

func (x *UnsubPayChUpdatesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChUpdatesReq.ProtoReflect.Descriptor instead.
func (*UnsubPayChUpdatesReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{32}
}

func (x *UnsubPayChUpdatesReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *UnsubPayChUpdatesReq) GetChID() string {
	if x != nil {
		return x.ChID
	}
	return ""
}

type UnsubPayChUpdatesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*UnsubPayChUpdatesResp_MsgSuccess_
	//	*UnsubPayChUpdatesResp_Error
	Response isUnsubPayChUpdatesResp_Response `protobuf_oneof:"response"`
}

func (x *UnsubPayChUpdatesResp) Reset() {
	*x = UnsubPayChUpdatesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChUpdatesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChUpdatesResp) ProtoMessage() {}

func (x *UnsubPayChUpdatesResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChUpdatesResp.ProtoReflect.Descriptor instead.
func (*UnsubPayChUpdatesResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{33}
}

func (m *UnsubPayChUpdatesResp) GetResponse() isUnsubPayChUpdatesResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UnsubPayChUpdatesResp) GetMsgSuccess() *UnsubPayChUpdatesResp_MsgSuccess {
	if x, ok := x.GetResponse().(*UnsubPayChUpdatesResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *UnsubPayChUpdatesResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*UnsubPayChUpdatesResp_Error); ok {
		return x.Error
	}
	return nil
}

type isUnsubPayChUpdatesResp_Response interface {
	isUnsubPayChUpdatesResp_Response()
}

type UnsubPayChUpdatesResp_MsgSuccess_ struct {
	MsgSuccess *UnsubPayChUpdatesResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type UnsubPayChUpdatesResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*UnsubPayChUpdatesResp_MsgSuccess_) isUnsubPayChUpdatesResp_Response() {}

func (*UnsubPayChUpdatesResp_Error) isUnsubPayChUpdatesResp_Response() {}

type RespondPayChUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChID      string `protobuf:"bytes,2,opt,name=chID,proto3" json:"chID,omitempty"`
	UpdateID  string `protobuf:"bytes,3,opt,name=updateID,proto3" json:"updateID,omitempty"`
	Accept    bool   `protobuf:"varint,4,opt,name=accept,proto3" json:"accept,omitempty"`
}

func (x *RespondPayChUpdateReq) Reset() {
	*x = RespondPayChUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChUpdateReq) ProtoMessage() {}

func (x *RespondPayChUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChUpdateReq.ProtoReflect.Descriptor instead.
func (*RespondPayChUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{34}
}

func (x *RespondPayChUpdateReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *RespondPayChUpdateReq) GetChID() string {
	if x != nil {
		return x.ChID
	}
	return ""
}

func (x *RespondPayChUpdateReq) GetUpdateID() string {
	if x != nil {
		return x.UpdateID
	}
	return ""
}

func (x *RespondPayChUpdateReq) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

type RespondPayChUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*RespondPayChUpdateResp_MsgSuccess_
	//	*RespondPayChUpdateResp_Error
	Response isRespondPayChUpdateResp_Response `protobuf_oneof:"response"`
}

func (x *RespondPayChUpdateResp) Reset() {
	*x = RespondPayChUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChUpdateResp) ProtoMessage() {}

func (x *RespondPayChUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChUpdateResp.ProtoReflect.Descriptor instead.
func (*RespondPayChUpdateResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{35}
}

func (m *RespondPayChUpdateResp) GetResponse() isRespondPayChUpdateResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RespondPayChUpdateResp) GetMsgSuccess() *RespondPayChUpdateResp_MsgSuccess {
	if x, ok := x.GetResponse().(*RespondPayChUpdateResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *RespondPayChUpdateResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*RespondPayChUpdateResp_Error); ok {
		return x.Error
	}
	return nil
}

type isRespondPayChUpdateResp_Response interface {
	isRespondPayChUpdateResp_Response()
}

type RespondPayChUpdateResp_MsgSuccess_ struct {
	MsgSuccess *RespondPayChUpdateResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type RespondPayChUpdateResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*RespondPayChUpdateResp_MsgSuccess_) isRespondPayChUpdateResp_Response() {}

func (*RespondPayChUpdateResp_Error) isRespondPayChUpdateResp_Response() {}

type GetPayChInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChID      string `protobuf:"bytes,2,opt,name=chID,proto3" json:"chID,omitempty"`
}

func (x *GetPayChInfoReq) Reset() {
	*x = GetPayChInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChInfoReq) ProtoMessage() {}

func (x *GetPayChInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChInfoReq.ProtoReflect.Descriptor instead.
func (*GetPayChInfoReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{36}
}

func (x *GetPayChInfoReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *GetPayChInfoReq) GetChID() string {
	if x != nil {
		return x.ChID
	}
	return ""
}

type GetPayChInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetPayChInfoResp_MsgSuccess_
	//	*GetPayChInfoResp_Error
	Response isGetPayChInfoResp_Response `protobuf_oneof:"response"`
}

func (x *GetPayChInfoResp) Reset() {
	*x = GetPayChInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChInfoResp) ProtoMessage() {}

func (x *GetPayChInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChInfoResp.ProtoReflect.Descriptor instead.
func (*GetPayChInfoResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{37}
}

func (m *GetPayChInfoResp) GetResponse() isGetPayChInfoResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetPayChInfoResp) GetMsgSuccess() *GetPayChInfoResp_MsgSuccess {
	if x, ok := x.GetResponse().(*GetPayChInfoResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *GetPayChInfoResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*GetPayChInfoResp_Error); ok {
		return x.Error
	}
	return nil
}

type isGetPayChInfoResp_Response interface {
	isGetPayChInfoResp_Response()
}

type GetPayChInfoResp_MsgSuccess_ struct {
	MsgSuccess *GetPayChInfoResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type GetPayChInfoResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*GetPayChInfoResp_MsgSuccess_) isGetPayChInfoResp_Response() {}

func (*GetPayChInfoResp_Error) isGetPayChInfoResp_Response() {}

type ClosePayChReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChID      string `protobuf:"bytes,2,opt,name=chID,proto3" json:"chID,omitempty"`
}

func (x *ClosePayChReq) Reset() {
	*x = ClosePayChReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosePayChReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePayChReq) ProtoMessage() {}

func (x *ClosePayChReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePayChReq.ProtoReflect.Descriptor instead.
func (*ClosePayChReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{38}
}

func (x *ClosePayChReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *ClosePayChReq) GetChID() string {
	if x != nil {
		return x.ChID
	}
	return ""
}

type ClosePayChResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*ClosePayChResp_MsgSuccess_
	//	*ClosePayChResp_Error
	Response isClosePayChResp_Response `protobuf_oneof:"response"`
}

func (x *ClosePayChResp) Reset() {
	*x = ClosePayChResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosePayChResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePayChResp) ProtoMessage() {}

func (x *ClosePayChResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePayChResp.ProtoReflect.Descriptor instead.
func (*ClosePayChResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{39}
}

func (m *ClosePayChResp) GetResponse() isClosePayChResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ClosePayChResp) GetMsgSuccess() *ClosePayChResp_MsgSuccess {
	if x, ok := x.GetResponse().(*ClosePayChResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *ClosePayChResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*ClosePayChResp_Error); ok {
		return x.Error
	}
	return nil
}

type isClosePayChResp_Response interface {
	isClosePayChResp_Response()
}

type ClosePayChResp_MsgSuccess_ struct {
	MsgSuccess *ClosePayChResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type ClosePayChResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ClosePayChResp_MsgSuccess_) isClosePayChResp_Response() {}

func (*ClosePayChResp_Error) isClosePayChResp_Response() {}

type OpenSessionResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *OpenSessionResp_MsgSuccess) Reset() {
	*x = OpenSessionResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSessionResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionResp_MsgSuccess) ProtoMessage() {}

func (x *OpenSessionResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSessionResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*OpenSessionResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7, 0}
}

func (x *OpenSessionResp_MsgSuccess) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type AddContactResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AddContactResp_MsgSuccess) Reset() {
	*x = AddContactResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddContactResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContactResp_MsgSuccess) ProtoMessage() {}

func (x *AddContactResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContactResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*AddContactResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13, 0}
}

func (x *AddContactResp_MsgSuccess) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetContactResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *Peer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *GetContactResp_MsgSuccess) Reset() {
	*x = GetContactResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactResp_MsgSuccess) ProtoMessage() {}

func (x *GetContactResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*GetContactResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GetContactResp_MsgSuccess) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type OpenPayChResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenedPayChInfo *PayChInfo `protobuf:"bytes,1,opt,name=openedPayChInfo,proto3" json:"openedPayChInfo,omitempty"`
}

func (x *OpenPayChResp_MsgSuccess) Reset() {
	*x = OpenPayChResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPayChResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPayChResp_MsgSuccess) ProtoMessage() {}

func (x *OpenPayChResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPayChResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*OpenPayChResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17, 0}
}

func (x *OpenPayChResp_MsgSuccess) GetOpenedPayChInfo() *PayChInfo {
	if x != nil {
		return x.OpenedPayChInfo
	}
	return nil
}

type GetPayChsResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenPayChsInfo []*PayChInfo `protobuf:"bytes,1,rep,name=openPayChsInfo,proto3" json:"openPayChsInfo,omitempty"`
}

func (x *GetPayChsResp_MsgSuccess) Reset() {
	*x = GetPayChsResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChsResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChsResp_MsgSuccess) ProtoMessage() {}

func (x *GetPayChsResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChsResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*GetPayChsResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19, 0}
}

func (x *GetPayChsResp_MsgSuccess) GetOpenPayChsInfo() []*PayChInfo {
	if x != nil {
		return x.OpenPayChsInfo
	}
	return nil
}

type SubPayChProposalsResp_Notify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalID       string   `protobuf:"bytes,2,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
	OpeningBalInfo   *BalInfo `protobuf:"bytes,4,opt,name=openingBalInfo,proto3" json:"openingBalInfo,omitempty"`
	ChallengeDurSecs uint64   `protobuf:"varint,5,opt,name=challengeDurSecs,proto3" json:"challengeDurSecs,omitempty"`
	Expiry           int64    `protobuf:"varint,6,opt,name=expiry,proto3" json:"expiry,omitempty"`
}

func (x *SubPayChProposalsResp_Notify) Reset() {
	*x = SubPayChProposalsResp_Notify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChProposalsResp_Notify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChProposalsResp_Notify) ProtoMessage() {}

func (x *SubPayChProposalsResp_Notify) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChProposalsResp_Notify.ProtoReflect.Descriptor instead.
func (*SubPayChProposalsResp_Notify) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21, 0}
}

func (x *SubPayChProposalsResp_Notify) GetProposalID() string {
	if x != nil {
		return x.ProposalID
	}
	return ""
}

func (x *SubPayChProposalsResp_Notify) GetOpeningBalInfo() *BalInfo {
	if x != nil {
		return x.OpeningBalInfo
	}
	return nil
}

func (x *SubPayChProposalsResp_Notify) GetChallengeDurSecs() uint64 {
	if x != nil {
		return x.ChallengeDurSecs
	}
	return 0
}

func (x *SubPayChProposalsResp_Notify) GetExpiry() int64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

type UnsubPayChProposalsResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UnsubPayChProposalsResp_MsgSuccess) Reset() {
	*x = UnsubPayChProposalsResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChProposalsResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChProposalsResp_MsgSuccess) ProtoMessage() {}

func (x *UnsubPayChProposalsResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChProposalsResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*UnsubPayChProposalsResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{23, 0}
}

func (x *UnsubPayChProposalsResp_MsgSuccess) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RespondPayChProposalResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenedPayChInfo *PayChInfo `protobuf:"bytes,2,opt,name=openedPayChInfo,proto3" json:"openedPayChInfo,omitempty"`
}

func (x *RespondPayChProposalResp_MsgSuccess) Reset() {
	*x = RespondPayChProposalResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChProposalResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChProposalResp_MsgSuccess) ProtoMessage() {}

func (x *RespondPayChProposalResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChProposalResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*RespondPayChProposalResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{25, 0}
}

func (x *RespondPayChProposalResp_MsgSuccess) GetOpenedPayChInfo() *PayChInfo {
	if x != nil {
		return x.OpenedPayChInfo
	}
	return nil
}

type CloseSessionResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenPayChsInfo []*PayChInfo `protobuf:"bytes,1,rep,name=openPayChsInfo,proto3" json:"openPayChsInfo,omitempty"`
}

func (x *CloseSessionResp_MsgSuccess) Reset() {
	*x = CloseSessionResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSessionResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionResp_MsgSuccess) ProtoMessage() {}

func (x *CloseSessionResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*CloseSessionResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{27, 0}
}

func (x *CloseSessionResp_MsgSuccess) GetOpenPayChsInfo() []*PayChInfo {
	if x != nil {
		return x.OpenPayChsInfo
	}
	return nil
}

type SendPayChUpdateResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedPayChInfo *PayChInfo `protobuf:"bytes,1,opt,name=updatedPayChInfo,proto3" json:"updatedPayChInfo,omitempty"`
}

func (x *SendPayChUpdateResp_MsgSuccess) Reset() {
	*x = SendPayChUpdateResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPayChUpdateResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPayChUpdateResp_MsgSuccess) ProtoMessage() {}

func (x *SendPayChUpdateResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPayChUpdateResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*SendPayChUpdateResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{29, 0}
}

func (x *SendPayChUpdateResp_MsgSuccess) GetUpdatedPayChInfo() *PayChInfo {
	if x != nil {
		return x.UpdatedPayChInfo
	}
	return nil
}

type SubPayChUpdatesResp_Notify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateID          string                                  `protobuf:"bytes,1,opt,name=updateID,proto3" json:"updateID,omitempty"`
	ProposedPayChInfo *PayChInfo                              `protobuf:"bytes,2,opt,name=proposedPayChInfo,proto3" json:"proposedPayChInfo,omitempty"`
	Type              SubPayChUpdatesResp_Notify_ChUpdateType `protobuf:"varint,3,opt,name=Type,proto3,enum=pb.SubPayChUpdatesResp_Notify_ChUpdateType" json:"Type,omitempty"`
	Expiry            int64                                   `protobuf:"varint,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	Error             string                                  `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SubPayChUpdatesResp_Notify) Reset() {
	*x = SubPayChUpdatesResp_Notify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChUpdatesResp_Notify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChUpdatesResp_Notify) ProtoMessage() {}

func (x *SubPayChUpdatesResp_Notify) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChUpdatesResp_Notify.ProtoReflect.Descriptor instead.
func (*SubPayChUpdatesResp_Notify) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{31, 0}
}

func (x *SubPayChUpdatesResp_Notify) GetUpdateID() string {
	if x != nil {
		return x.UpdateID
	}
	return ""
}

func (x *SubPayChUpdatesResp_Notify) GetProposedPayChInfo() *PayChInfo {
	if x != nil {
		return x.ProposedPayChInfo
	}
	return nil
}

func (x *SubPayChUpdatesResp_Notify) GetType() SubPayChUpdatesResp_Notify_ChUpdateType {
	if x != nil {
		return x.Type
	}
	return SubPayChUpdatesResp_Notify_open
}

func (x *SubPayChUpdatesResp_Notify) GetExpiry() int64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

func (x *SubPayChUpdatesResp_Notify) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UnsubPayChUpdatesResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UnsubPayChUpdatesResp_MsgSuccess) Reset() {
	*x = UnsubPayChUpdatesResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChUpdatesResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChUpdatesResp_MsgSuccess) ProtoMessage() {}

func (x *UnsubPayChUpdatesResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChUpdatesResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*UnsubPayChUpdatesResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{33, 0}
}

func (x *UnsubPayChUpdatesResp_MsgSuccess) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RespondPayChUpdateResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedPayChInfo *PayChInfo `protobuf:"bytes,1,opt,name=updatedPayChInfo,proto3" json:"updatedPayChInfo,omitempty"`
}

func (x *RespondPayChUpdateResp_MsgSuccess) Reset() {
	*x = RespondPayChUpdateResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChUpdateResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChUpdateResp_MsgSuccess) ProtoMessage() {}

func (x *RespondPayChUpdateResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChUpdateResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*RespondPayChUpdateResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{35, 0}
}

func (x *RespondPayChUpdateResp_MsgSuccess) GetUpdatedPayChInfo() *PayChInfo {
	if x != nil {
		return x.UpdatedPayChInfo
	}
	return nil
}

type GetPayChInfoResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayChInfo *PayChInfo `protobuf:"bytes,1,opt,name=payChInfo,proto3" json:"payChInfo,omitempty"`
}

func (x *GetPayChInfoResp_MsgSuccess) Reset() {
	*x = GetPayChInfoResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChInfoResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChInfoResp_MsgSuccess) ProtoMessage() {}

func (x *GetPayChInfoResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChInfoResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*GetPayChInfoResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{37, 0}
}

func (x *GetPayChInfoResp_MsgSuccess) GetPayChInfo() *PayChInfo {
	if x != nil {
		return x.PayChInfo
	}
	return nil
}

type ClosePayChResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClosedPayChInfo *PayChInfo `protobuf:"bytes,1,opt,name=closedPayChInfo,proto3" json:"closedPayChInfo,omitempty"`
}

func (x *ClosePayChResp_MsgSuccess) Reset() {
	*x = ClosePayChResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosePayChResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePayChResp_MsgSuccess) ProtoMessage() {}

func (x *ClosePayChResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePayChResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*ClosePayChResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{39, 0}
}

func (x *ClosePayChResp_MsgSuccess) GetClosedPayChInfo() *PayChInfo {
	if x != nil {
		return x.ClosedPayChInfo
	}
	return nil
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22,
	0x84, 0x01, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x62, 0x61, 0x6c, 0x22, 0x60, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x68, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x08, 0x4d, 0x73, 0x67, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x0e, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x22, 0xc9, 0x01, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x2e, 0x0a, 0x12, 0x61, 0x64, 0x6a, 0x75, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x64, 0x6a,
	0x75, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x6e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0a, 0x6d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48,
	0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x1a, 0x2a, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x42,
	0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x09, 0x0a, 0x07, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x22, 0x1e, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x09, 0x0a, 0x07, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65,
	0x71, 0x22, 0x1e, 0x0a, 0x08, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x70, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x70, 0x69,
	0x73, 0x22, 0x4b, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x22, 0xab,
	0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x26, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x22, 0xaf, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x2a, 0x0a, 0x0a, 0x4d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x65, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x33, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x42, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x44, 0x75, 0x72, 0x53, 0x65, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x44, 0x75, 0x72, 0x53,
	0x65, 0x63, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x45, 0x0a, 0x0a, 0x4d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x0f, 0x6f, 0x70, 0x65,
	0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xc6, 0x01, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e,
	0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x1a, 0x43, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x35, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xa9, 0x02, 0x0a, 0x15,
	0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa1, 0x01, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x49, 0x44, 0x12, 0x33, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x42, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x44, 0x75, 0x72, 0x53, 0x65, 0x63, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x44, 0x75, 0x72, 0x53,
	0x65, 0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x16, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22,
	0xbd, 0x01, 0x0a, 0x17, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0a, 0x6d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x26, 0x0a, 0x0a, 0x4d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x6f, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x22, 0xde, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a,
	0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73,
	0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x45,
	0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x0f,
	0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x45, 0x0a, 0x0f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x10, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a,
	0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x04, 0x65, 0x72, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x65, 0x72, 0x72, 0x6f, 0x1a, 0x43, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6f, 0x70, 0x65,
	0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x68, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x61, 0x79, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd6, 0x01,
	0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52,
	0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0x47, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x39, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x70, 0x61, 0x79,
	0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x68, 0x49, 0x44, 0x22, 0x85,
	0x03, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x81, 0x02, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x3b, 0x0a,
	0x11, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75,
	0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2f, 0x0a, 0x0c, 0x43, 0x68, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x6f, 0x70, 0x65,
	0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x10, 0x02, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x0a, 0x14, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x68, 0x49, 0x44,
	0x22, 0xb9, 0x01, 0x0a, 0x15, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0a, 0x6d, 0x73,
	0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x26, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a, 0x15,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x68, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x16,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x47, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x39, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x68, 0x49, 0x44, 0x22,
	0xc2, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x39, 0x0a,
	0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x70,
	0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70,
	0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x68, 0x49, 0x44, 0x22, 0xca, 0x01, 0x0a, 0x0e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x6d, 0x73,
	0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52,
	0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0x45, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x37, 0x0a, 0x0f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xea, 0x08, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x41, 0x50, 0x49, 0x12, 0x32, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x23, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x04, 0x48, 0x65, 0x6c, 0x70, 0x12,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x09, 0x4f, 0x70,
	0x65, 0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x32,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x50, 0x0a, 0x13, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x53, 0x75,
	0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x70, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x4a, 0x0a, 0x11, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_api_proto_goTypes = []interface{}{
	(SubPayChUpdatesResp_Notify_ChUpdateType)(0), // 0: pb.SubPayChUpdatesResp.Notify.ChUpdateType
	(*Peer)(nil),                                // 1: pb.Peer
	(*BalInfo)(nil),                             // 2: pb.BalInfo
	(*PayChInfo)(nil),                           // 3: pb.PayChInfo
	(*MsgError)(nil),                            // 4: pb.MsgError
	(*GetConfigReq)(nil),                        // 5: pb.GetConfigReq
	(*GetConfigResp)(nil),                       // 6: pb.GetConfigResp
	(*OpenSessionReq)(nil),                      // 7: pb.OpenSessionReq
	(*OpenSessionResp)(nil),                     // 8: pb.OpenSessionResp
	(*TimeReq)(nil),                             // 9: pb.TimeReq
	(*TimeResp)(nil),                            // 10: pb.TimeResp
	(*HelpReq)(nil),                             // 11: pb.HelpReq
	(*HelpResp)(nil),                            // 12: pb.HelpResp
	(*AddContactReq)(nil),                       // 13: pb.AddContactReq
	(*AddContactResp)(nil),                      // 14: pb.AddContactResp
	(*GetContactReq)(nil),                       // 15: pb.GetContactReq
	(*GetContactResp)(nil),                      // 16: pb.GetContactResp
	(*OpenPayChReq)(nil),                        // 17: pb.OpenPayChReq
	(*OpenPayChResp)(nil),                       // 18: pb.OpenPayChResp
	(*GetPayChsReq)(nil),                        // 19: pb.GetPayChsReq
	(*GetPayChsResp)(nil),                       // 20: pb.GetPayChsResp
	(*SubPayChProposalsReq)(nil),                // 21: pb.SubPayChProposalsReq
	(*SubPayChProposalsResp)(nil),               // 22: pb.SubPayChProposalsResp
	(*UnsubPayChProposalsReq)(nil),              // 23: pb.UnsubPayChProposalsReq
	(*UnsubPayChProposalsResp)(nil),             // 24: pb.UnsubPayChProposalsResp
	(*RespondPayChProposalReq)(nil),             // 25: pb.RespondPayChProposalReq
	(*RespondPayChProposalResp)(nil),            // 26: pb.RespondPayChProposalResp
	(*CloseSessionReq)(nil),                     // 27: pb.CloseSessionReq
	(*CloseSessionResp)(nil),                    // 28: pb.CloseSessionResp
	(*SendPayChUpdateReq)(nil),                  // 29: pb.SendPayChUpdateReq
	(*SendPayChUpdateResp)(nil),                 // 30: pb.SendPayChUpdateResp
	(*SubpayChUpdatesReq)(nil),                  // 31: pb.SubpayChUpdatesReq
	(*SubPayChUpdatesResp)(nil),                 // 32: pb.SubPayChUpdatesResp
	(*UnsubPayChUpdatesReq)(nil),                // 33: pb.UnsubPayChUpdatesReq
	(*UnsubPayChUpdatesResp)(nil),               // 34: pb.UnsubPayChUpdatesResp
	(*RespondPayChUpdateReq)(nil),               // 35: pb.RespondPayChUpdateReq
	(*RespondPayChUpdateResp)(nil),              // 36: pb.RespondPayChUpdateResp
	(*GetPayChInfoReq)(nil),                     // 37: pb.GetPayChInfoReq
	(*GetPayChInfoResp)(nil),                    // 38: pb.GetPayChInfoResp
	(*ClosePayChReq)(nil),                       // 39: pb.ClosePayChReq
	(*ClosePayChResp)(nil),                      // 40: pb.ClosePayChResp
	(*OpenSessionResp_MsgSuccess)(nil),          // 41: pb.OpenSessionResp.MsgSuccess
	(*AddContactResp_MsgSuccess)(nil),           // 42: pb.AddContactResp.MsgSuccess
	(*GetContactResp_MsgSuccess)(nil),           // 43: pb.GetContactResp.MsgSuccess
	(*OpenPayChResp_MsgSuccess)(nil),            // 44: pb.OpenPayChResp.MsgSuccess
	(*GetPayChsResp_MsgSuccess)(nil),            // 45: pb.GetPayChsResp.MsgSuccess
	(*SubPayChProposalsResp_Notify)(nil),        // 46: pb.SubPayChProposalsResp.Notify
	(*UnsubPayChProposalsResp_MsgSuccess)(nil),  // 47: pb.UnsubPayChProposalsResp.MsgSuccess
	(*RespondPayChProposalResp_MsgSuccess)(nil), // 48: pb.RespondPayChProposalResp.MsgSuccess
	(*CloseSessionResp_MsgSuccess)(nil),         // 49: pb.CloseSessionResp.MsgSuccess
	(*SendPayChUpdateResp_MsgSuccess)(nil),      // 50: pb.SendPayChUpdateResp.MsgSuccess
	(*SubPayChUpdatesResp_Notify)(nil),          // 51: pb.SubPayChUpdatesResp.Notify
	(*UnsubPayChUpdatesResp_MsgSuccess)(nil),    // 52: pb.UnsubPayChUpdatesResp.MsgSuccess
	(*RespondPayChUpdateResp_MsgSuccess)(nil),   // 53: pb.RespondPayChUpdateResp.MsgSuccess
	(*GetPayChInfoResp_MsgSuccess)(nil),         // 54: pb.GetPayChInfoResp.MsgSuccess
	(*ClosePayChResp_MsgSuccess)(nil),           // 55: pb.ClosePayChResp.MsgSuccess
}
var file_api_proto_depIdxs = []int32{
	2,  // 0: pb.PayChInfo.balInfo:type_name -> pb.BalInfo
	41, // 1: pb.OpenSessionResp.msgSuccess:type_name -> pb.OpenSessionResp.MsgSuccess
	4,  // 2: pb.OpenSessionResp.error:type_name -> pb.MsgError
	1,  // 3: pb.AddContactReq.peer:type_name -> pb.Peer
	42, // 4: pb.AddContactResp.msgSuccess:type_name -> pb.AddContactResp.MsgSuccess
	4,  // 5: pb.AddContactResp.error:type_name -> pb.MsgError
	43, // 6: pb.GetContactResp.msgSuccess:type_name -> pb.GetContactResp.MsgSuccess
	4,  // 7: pb.GetContactResp.error:type_name -> pb.MsgError
	2,  // 8: pb.OpenPayChReq.openingBalInfo:type_name -> pb.BalInfo
	44, // 9: pb.OpenPayChResp.msgSuccess:type_name -> pb.OpenPayChResp.MsgSuccess
	4,  // 10: pb.OpenPayChResp.error:type_name -> pb.MsgError
	45, // 11: pb.GetPayChsResp.msgSuccess:type_name -> pb.GetPayChsResp.MsgSuccess
	4,  // 12: pb.GetPayChsResp.error:type_name -> pb.MsgError
	46, // 13: pb.SubPayChProposalsResp.notify:type_name -> pb.SubPayChProposalsResp.Notify
	4,  // 14: pb.SubPayChProposalsResp.error:type_name -> pb.MsgError
	47, // 15: pb.UnsubPayChProposalsResp.msgSuccess:type_name -> pb.UnsubPayChProposalsResp.MsgSuccess
	4,  // 16: pb.UnsubPayChProposalsResp.error:type_name -> pb.MsgError
	48, // 17: pb.RespondPayChProposalResp.msgSuccess:type_name -> pb.RespondPayChProposalResp.MsgSuccess
	4,  // 18: pb.RespondPayChProposalResp.error:type_name -> pb.MsgError
	49, // 19: pb.CloseSessionResp.msgSuccess:type_name -> pb.CloseSessionResp.MsgSuccess
	50, // 20: pb.SendPayChUpdateResp.msgSuccess:type_name -> pb.SendPayChUpdateResp.MsgSuccess
	4,  // 21: pb.SendPayChUpdateResp.error:type_name -> pb.MsgError
	51, // 22: pb.SubPayChUpdatesResp.notify:type_name -> pb.SubPayChUpdatesResp.Notify
	4,  // 23: pb.SubPayChUpdatesResp.error:type_name -> pb.MsgError
	52, // 24: pb.UnsubPayChUpdatesResp.msgSuccess:type_name -> pb.UnsubPayChUpdatesResp.MsgSuccess
	4,  // 25: pb.UnsubPayChUpdatesResp.error:type_name -> pb.MsgError
	53, // 26: pb.RespondPayChUpdateResp.msgSuccess:type_name -> pb.RespondPayChUpdateResp.MsgSuccess
	4,  // 27: pb.RespondPayChUpdateResp.error:type_name -> pb.MsgError
	54, // 28: pb.GetPayChInfoResp.msgSuccess:type_name -> pb.GetPayChInfoResp.MsgSuccess
	4,  // 29: pb.GetPayChInfoResp.error:type_name -> pb.MsgError
	55, // 30: pb.ClosePayChResp.msgSuccess:type_name -> pb.ClosePayChResp.MsgSuccess
	4,  // 31: pb.ClosePayChResp.error:type_name -> pb.MsgError
	1,  // 32: pb.GetContactResp.MsgSuccess.peer:type_name -> pb.Peer
	3,  // 33: pb.OpenPayChResp.MsgSuccess.openedPayChInfo:type_name -> pb.PayChInfo
	3,  // 34: pb.GetPayChsResp.MsgSuccess.openPayChsInfo:type_name -> pb.PayChInfo
	2,  // 35: pb.SubPayChProposalsResp.Notify.openingBalInfo:type_name -> pb.BalInfo
	3,  // 36: pb.RespondPayChProposalResp.MsgSuccess.openedPayChInfo:type_name -> pb.PayChInfo
	3,  // 37: pb.CloseSessionResp.MsgSuccess.openPayChsInfo:type_name -> pb.PayChInfo
	3,  // 38: pb.SendPayChUpdateResp.MsgSuccess.updatedPayChInfo:type_name -> pb.PayChInfo
	3,  // 39: pb.SubPayChUpdatesResp.Notify.proposedPayChInfo:type_name -> pb.PayChInfo
	0,  // 40: pb.SubPayChUpdatesResp.Notify.Type:type_name -> pb.SubPayChUpdatesResp.Notify.ChUpdateType
	3,  // 41: pb.RespondPayChUpdateResp.MsgSuccess.updatedPayChInfo:type_name -> pb.PayChInfo
	3,  // 42: pb.GetPayChInfoResp.MsgSuccess.payChInfo:type_name -> pb.PayChInfo
	3,  // 43: pb.ClosePayChResp.MsgSuccess.closedPayChInfo:type_name -> pb.PayChInfo
	5,  // 44: pb.Payment_API.GetConfig:input_type -> pb.GetConfigReq
	7,  // 45: pb.Payment_API.OpenSession:input_type -> pb.OpenSessionReq
	9,  // 46: pb.Payment_API.Time:input_type -> pb.TimeReq
	11, // 47: pb.Payment_API.Help:input_type -> pb.HelpReq
	13, // 48: pb.Payment_API.AddContact:input_type -> pb.AddContactReq
	15, // 49: pb.Payment_API.GetContact:input_type -> pb.GetContactReq
	17, // 50: pb.Payment_API.OpenPayCh:input_type -> pb.OpenPayChReq
	19, // 51: pb.Payment_API.GetPayChs:input_type -> pb.GetPayChsReq
	21, // 52: pb.Payment_API.SubPayChProposals:input_type -> pb.SubPayChProposalsReq
	23, // 53: pb.Payment_API.UnsubPayChProposals:input_type -> pb.UnsubPayChProposalsReq
	25, // 54: pb.Payment_API.RespondPayChProposal:input_type -> pb.RespondPayChProposalReq
	27, // 55: pb.Payment_API.CloseSession:input_type -> pb.CloseSessionReq
	29, // 56: pb.Payment_API.SendPayChUpdate:input_type -> pb.SendPayChUpdateReq
	31, // 57: pb.Payment_API.SubPayChUpdates:input_type -> pb.SubpayChUpdatesReq
	33, // 58: pb.Payment_API.UnsubPayChUpdates:input_type -> pb.UnsubPayChUpdatesReq
	35, // 59: pb.Payment_API.RespondPayChUpdate:input_type -> pb.RespondPayChUpdateReq
	37, // 60: pb.Payment_API.GetPayChInfo:input_type -> pb.GetPayChInfoReq
	39, // 61: pb.Payment_API.ClosePayCh:input_type -> pb.ClosePayChReq
	6,  // 62: pb.Payment_API.GetConfig:output_type -> pb.GetConfigResp
	8,  // 63: pb.Payment_API.OpenSession:output_type -> pb.OpenSessionResp
	10, // 64: pb.Payment_API.Time:output_type -> pb.TimeResp
	12, // 65: pb.Payment_API.Help:output_type -> pb.HelpResp
	14, // 66: pb.Payment_API.AddContact:output_type -> pb.AddContactResp
	16, // 67: pb.Payment_API.GetContact:output_type -> pb.GetContactResp
	18, // 68: pb.Payment_API.OpenPayCh:output_type -> pb.OpenPayChResp
	20, // 69: pb.Payment_API.GetPayChs:output_type -> pb.GetPayChsResp
	22, // 70: pb.Payment_API.SubPayChProposals:output_type -> pb.SubPayChProposalsResp
	24, // 71: pb.Payment_API.UnsubPayChProposals:output_type -> pb.UnsubPayChProposalsResp
	26, // 72: pb.Payment_API.RespondPayChProposal:output_type -> pb.RespondPayChProposalResp
	28, // 73: pb.Payment_API.CloseSession:output_type -> pb.CloseSessionResp
	30, // 74: pb.Payment_API.SendPayChUpdate:output_type -> pb.SendPayChUpdateResp
	32, // 75: pb.Payment_API.SubPayChUpdates:output_type -> pb.SubPayChUpdatesResp
	34, // 76: pb.Payment_API.UnsubPayChUpdates:output_type -> pb.UnsubPayChUpdatesResp
	36, // 77: pb.Payment_API.RespondPayChUpdate:output_type -> pb.RespondPayChUpdateResp
	38, // 78: pb.Payment_API.GetPayChInfo:output_type -> pb.GetPayChInfoResp
	40, // 79: pb.Payment_API.ClosePayCh:output_type -> pb.ClosePayChResp
	62, // [62:80] is the sub-list for method output_type
	44, // [44:62] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSessionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddContactReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddContactResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPayChReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPayChResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChProposalsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChProposalsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChProposalsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChProposalsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChProposalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChProposalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseSessionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPayChUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPayChUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubpayChUpdatesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChUpdatesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChUpdatesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChUpdatesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosePayChReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosePayChResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSessionResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddContactResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPayChResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChsResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChProposalsResp_Notify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChProposalsResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChProposalResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseSessionResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPayChUpdateResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChUpdatesResp_Notify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChUpdatesResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChUpdateResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChInfoResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosePayChResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*OpenSessionResp_MsgSuccess_)(nil),
		(*OpenSessionResp_Error)(nil),
	}
	file_api_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*AddContactResp_MsgSuccess_)(nil),
		(*AddContactResp_Error)(nil),
	}
	file_api_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*GetContactResp_MsgSuccess_)(nil),
		(*GetContactResp_Error)(nil),
	}
	file_api_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*OpenPayChResp_MsgSuccess_)(nil),
		(*OpenPayChResp_Error)(nil),
	}
	file_api_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*GetPayChsResp_MsgSuccess_)(nil),
		(*GetPayChsResp_Error)(nil),
	}
	file_api_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*SubPayChProposalsResp_Notify_)(nil),
		(*SubPayChProposalsResp_Error)(nil),
	}
	file_api_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*UnsubPayChProposalsResp_MsgSuccess_)(nil),
		(*UnsubPayChProposalsResp_Error)(nil),
	}
	file_api_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*RespondPayChProposalResp_MsgSuccess_)(nil),
		(*RespondPayChProposalResp_Error)(nil),
	}
	file_api_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*CloseSessionResp_MsgSuccess_)(nil),
		(*CloseSessionResp_Erro)(nil),
	}
	file_api_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*SendPayChUpdateResp_MsgSuccess_)(nil),
		(*SendPayChUpdateResp_Error)(nil),
	}
	file_api_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*SubPayChUpdatesResp_Notify_)(nil),
		(*SubPayChUpdatesResp_Error)(nil),
	}
	file_api_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*UnsubPayChUpdatesResp_MsgSuccess_)(nil),
		(*UnsubPayChUpdatesResp_Error)(nil),
	}
	file_api_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*RespondPayChUpdateResp_MsgSuccess_)(nil),
		(*RespondPayChUpdateResp_Error)(nil),
	}
	file_api_proto_msgTypes[37].OneofWrappers = []interface{}{
		(*GetPayChInfoResp_MsgSuccess_)(nil),
		(*GetPayChInfoResp_Error)(nil),
	}
	file_api_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*ClosePayChResp_MsgSuccess_)(nil),
		(*ClosePayChResp_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// Payment_APIClient is the client API for Payment_API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Payment_APIClient interface {
	GetConfig(ctx context.Context, in *GetConfigReq, opts ...grpc.CallOption) (*GetConfigResp, error)
	OpenSession(ctx context.Context, in *OpenSessionReq, opts ...grpc.CallOption) (*OpenSessionResp, error)
	Time(ctx context.Context, in *TimeReq, opts ...grpc.CallOption) (*TimeResp, error)
	Help(ctx context.Context, in *HelpReq, opts ...grpc.CallOption) (*HelpResp, error)
	AddContact(ctx context.Context, in *AddContactReq, opts ...grpc.CallOption) (*AddContactResp, error)
	GetContact(ctx context.Context, in *GetContactReq, opts ...grpc.CallOption) (*GetContactResp, error)
	OpenPayCh(ctx context.Context, in *OpenPayChReq, opts ...grpc.CallOption) (*OpenPayChResp, error)
	GetPayChs(ctx context.Context, in *GetPayChsReq, opts ...grpc.CallOption) (*GetPayChsResp, error)
	SubPayChProposals(ctx context.Context, in *SubPayChProposalsReq, opts ...grpc.CallOption) (Payment_API_SubPayChProposalsClient, error)
	UnsubPayChProposals(ctx context.Context, in *UnsubPayChProposalsReq, opts ...grpc.CallOption) (*UnsubPayChProposalsResp, error)
	RespondPayChProposal(ctx context.Context, in *RespondPayChProposalReq, opts ...grpc.CallOption) (*RespondPayChProposalResp, error)
	CloseSession(ctx context.Context, in *CloseSessionReq, opts ...grpc.CallOption) (*CloseSessionResp, error)
	SendPayChUpdate(ctx context.Context, in *SendPayChUpdateReq, opts ...grpc.CallOption) (*SendPayChUpdateResp, error)
	SubPayChUpdates(ctx context.Context, in *SubpayChUpdatesReq, opts ...grpc.CallOption) (Payment_API_SubPayChUpdatesClient, error)
	UnsubPayChUpdates(ctx context.Context, in *UnsubPayChUpdatesReq, opts ...grpc.CallOption) (*UnsubPayChUpdatesResp, error)
	RespondPayChUpdate(ctx context.Context, in *RespondPayChUpdateReq, opts ...grpc.CallOption) (*RespondPayChUpdateResp, error)
	GetPayChInfo(ctx context.Context, in *GetPayChInfoReq, opts ...grpc.CallOption) (*GetPayChInfoResp, error)
	ClosePayCh(ctx context.Context, in *ClosePayChReq, opts ...grpc.CallOption) (*ClosePayChResp, error)
}

type payment_APIClient struct {
	cc grpc.ClientConnInterface
}

func NewPayment_APIClient(cc grpc.ClientConnInterface) Payment_APIClient {
	return &payment_APIClient{cc}
}

func (c *payment_APIClient) GetConfig(ctx context.Context, in *GetConfigReq, opts ...grpc.CallOption) (*GetConfigResp, error) {
	out := new(GetConfigResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) OpenSession(ctx context.Context, in *OpenSessionReq, opts ...grpc.CallOption) (*OpenSessionResp, error) {
	out := new(OpenSessionResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/OpenSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) Time(ctx context.Context, in *TimeReq, opts ...grpc.CallOption) (*TimeResp, error) {
	out := new(TimeResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/Time", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) Help(ctx context.Context, in *HelpReq, opts ...grpc.CallOption) (*HelpResp, error) {
	out := new(HelpResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/Help", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) AddContact(ctx context.Context, in *AddContactReq, opts ...grpc.CallOption) (*AddContactResp, error) {
	out := new(AddContactResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/AddContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) GetContact(ctx context.Context, in *GetContactReq, opts ...grpc.CallOption) (*GetContactResp, error) {
	out := new(GetContactResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/GetContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) OpenPayCh(ctx context.Context, in *OpenPayChReq, opts ...grpc.CallOption) (*OpenPayChResp, error) {
	out := new(OpenPayChResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/OpenPayCh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) GetPayChs(ctx context.Context, in *GetPayChsReq, opts ...grpc.CallOption) (*GetPayChsResp, error) {
	out := new(GetPayChsResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/GetPayChs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) SubPayChProposals(ctx context.Context, in *SubPayChProposalsReq, opts ...grpc.CallOption) (Payment_API_SubPayChProposalsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Payment_API_serviceDesc.Streams[0], "/pb.Payment_API/SubPayChProposals", opts...)
	if err != nil {
		return nil, err
	}
	x := &payment_APISubPayChProposalsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Payment_API_SubPayChProposalsClient interface {
	Recv() (*SubPayChProposalsResp, error)
	grpc.ClientStream
}

type payment_APISubPayChProposalsClient struct {
	grpc.ClientStream
}

func (x *payment_APISubPayChProposalsClient) Recv() (*SubPayChProposalsResp, error) {
	m := new(SubPayChProposalsResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *payment_APIClient) UnsubPayChProposals(ctx context.Context, in *UnsubPayChProposalsReq, opts ...grpc.CallOption) (*UnsubPayChProposalsResp, error) {
	out := new(UnsubPayChProposalsResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/UnsubPayChProposals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) RespondPayChProposal(ctx context.Context, in *RespondPayChProposalReq, opts ...grpc.CallOption) (*RespondPayChProposalResp, error) {
	out := new(RespondPayChProposalResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/RespondPayChProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) CloseSession(ctx context.Context, in *CloseSessionReq, opts ...grpc.CallOption) (*CloseSessionResp, error) {
	out := new(CloseSessionResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/CloseSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) SendPayChUpdate(ctx context.Context, in *SendPayChUpdateReq, opts ...grpc.CallOption) (*SendPayChUpdateResp, error) {
	out := new(SendPayChUpdateResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/SendPayChUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) SubPayChUpdates(ctx context.Context, in *SubpayChUpdatesReq, opts ...grpc.CallOption) (Payment_API_SubPayChUpdatesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Payment_API_serviceDesc.Streams[1], "/pb.Payment_API/SubPayChUpdates", opts...)
	if err != nil {
		return nil, err
	}
	x := &payment_APISubPayChUpdatesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Payment_API_SubPayChUpdatesClient interface {
	Recv() (*SubPayChUpdatesResp, error)
	grpc.ClientStream
}

type payment_APISubPayChUpdatesClient struct {
	grpc.ClientStream
}

func (x *payment_APISubPayChUpdatesClient) Recv() (*SubPayChUpdatesResp, error) {
	m := new(SubPayChUpdatesResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *payment_APIClient) UnsubPayChUpdates(ctx context.Context, in *UnsubPayChUpdatesReq, opts ...grpc.CallOption) (*UnsubPayChUpdatesResp, error) {
	out := new(UnsubPayChUpdatesResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/UnsubPayChUpdates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) RespondPayChUpdate(ctx context.Context, in *RespondPayChUpdateReq, opts ...grpc.CallOption) (*RespondPayChUpdateResp, error) {
	out := new(RespondPayChUpdateResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/RespondPayChUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) GetPayChInfo(ctx context.Context, in *GetPayChInfoReq, opts ...grpc.CallOption) (*GetPayChInfoResp, error) {
	out := new(GetPayChInfoResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/GetPayChInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) ClosePayCh(ctx context.Context, in *ClosePayChReq, opts ...grpc.CallOption) (*ClosePayChResp, error) {
	out := new(ClosePayChResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/ClosePayCh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Payment_APIServer is the server API for Payment_API service.
type Payment_APIServer interface {
	GetConfig(context.Context, *GetConfigReq) (*GetConfigResp, error)
	OpenSession(context.Context, *OpenSessionReq) (*OpenSessionResp, error)
	Time(context.Context, *TimeReq) (*TimeResp, error)
	Help(context.Context, *HelpReq) (*HelpResp, error)
	AddContact(context.Context, *AddContactReq) (*AddContactResp, error)
	GetContact(context.Context, *GetContactReq) (*GetContactResp, error)
	OpenPayCh(context.Context, *OpenPayChReq) (*OpenPayChResp, error)
	GetPayChs(context.Context, *GetPayChsReq) (*GetPayChsResp, error)
	SubPayChProposals(*SubPayChProposalsReq, Payment_API_SubPayChProposalsServer) error
	UnsubPayChProposals(context.Context, *UnsubPayChProposalsReq) (*UnsubPayChProposalsResp, error)
	RespondPayChProposal(context.Context, *RespondPayChProposalReq) (*RespondPayChProposalResp, error)
	CloseSession(context.Context, *CloseSessionReq) (*CloseSessionResp, error)
	SendPayChUpdate(context.Context, *SendPayChUpdateReq) (*SendPayChUpdateResp, error)
	SubPayChUpdates(*SubpayChUpdatesReq, Payment_API_SubPayChUpdatesServer) error
	UnsubPayChUpdates(context.Context, *UnsubPayChUpdatesReq) (*UnsubPayChUpdatesResp, error)
	RespondPayChUpdate(context.Context, *RespondPayChUpdateReq) (*RespondPayChUpdateResp, error)
	GetPayChInfo(context.Context, *GetPayChInfoReq) (*GetPayChInfoResp, error)
	ClosePayCh(context.Context, *ClosePayChReq) (*ClosePayChResp, error)
}

// UnimplementedPayment_APIServer can be embedded to have forward compatible implementations.
type UnimplementedPayment_APIServer struct {
}

func (*UnimplementedPayment_APIServer) GetConfig(context.Context, *GetConfigReq) (*GetConfigResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedPayment_APIServer) OpenSession(context.Context, *OpenSessionReq) (*OpenSessionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenSession not implemented")
}
func (*UnimplementedPayment_APIServer) Time(context.Context, *TimeReq) (*TimeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Time not implemented")
}
func (*UnimplementedPayment_APIServer) Help(context.Context, *HelpReq) (*HelpResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Help not implemented")
}
func (*UnimplementedPayment_APIServer) AddContact(context.Context, *AddContactReq) (*AddContactResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddContact not implemented")
}
func (*UnimplementedPayment_APIServer) GetContact(context.Context, *GetContactReq) (*GetContactResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContact not implemented")
}
func (*UnimplementedPayment_APIServer) OpenPayCh(context.Context, *OpenPayChReq) (*OpenPayChResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenPayCh not implemented")
}
func (*UnimplementedPayment_APIServer) GetPayChs(context.Context, *GetPayChsReq) (*GetPayChsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPayChs not implemented")
}
func (*UnimplementedPayment_APIServer) SubPayChProposals(*SubPayChProposalsReq, Payment_API_SubPayChProposalsServer) error {
	return status.Errorf(codes.Unimplemented, "method SubPayChProposals not implemented")
}
func (*UnimplementedPayment_APIServer) UnsubPayChProposals(context.Context, *UnsubPayChProposalsReq) (*UnsubPayChProposalsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnsubPayChProposals not implemented")
}
func (*UnimplementedPayment_APIServer) RespondPayChProposal(context.Context, *RespondPayChProposalReq) (*RespondPayChProposalResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RespondPayChProposal not implemented")
}
func (*UnimplementedPayment_APIServer) CloseSession(context.Context, *CloseSessionReq) (*CloseSessionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseSession not implemented")
}
func (*UnimplementedPayment_APIServer) SendPayChUpdate(context.Context, *SendPayChUpdateReq) (*SendPayChUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendPayChUpdate not implemented")
}
func (*UnimplementedPayment_APIServer) SubPayChUpdates(*SubpayChUpdatesReq, Payment_API_SubPayChUpdatesServer) error {
	return status.Errorf(codes.Unimplemented, "method SubPayChUpdates not implemented")
}
func (*UnimplementedPayment_APIServer) UnsubPayChUpdates(context.Context, *UnsubPayChUpdatesReq) (*UnsubPayChUpdatesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnsubPayChUpdates not implemented")
}
func (*UnimplementedPayment_APIServer) RespondPayChUpdate(context.Context, *RespondPayChUpdateReq) (*RespondPayChUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RespondPayChUpdate not implemented")
}
func (*UnimplementedPayment_APIServer) GetPayChInfo(context.Context, *GetPayChInfoReq) (*GetPayChInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPayChInfo not implemented")
}
func (*UnimplementedPayment_APIServer) ClosePayCh(context.Context, *ClosePayChReq) (*ClosePayChResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClosePayCh not implemented")
}

func RegisterPayment_APIServer(s *grpc.Server, srv Payment_APIServer) {
	s.RegisterService(&_Payment_API_serviceDesc, srv)
}

func _Payment_API_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).GetConfig(ctx, req.(*GetConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_OpenSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenSessionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).OpenSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/OpenSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).OpenSession(ctx, req.(*OpenSessionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_Time_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).Time(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/Time",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).Time(ctx, req.(*TimeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_Help_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelpReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).Help(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/Help",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).Help(ctx, req.(*HelpReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_AddContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddContactReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).AddContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/AddContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).AddContact(ctx, req.(*AddContactReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_GetContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContactReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).GetContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/GetContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).GetContact(ctx, req.(*GetContactReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_OpenPayCh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenPayChReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).OpenPayCh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/OpenPayCh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).OpenPayCh(ctx, req.(*OpenPayChReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_GetPayChs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPayChsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).GetPayChs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/GetPayChs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).GetPayChs(ctx, req.(*GetPayChsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_SubPayChProposals_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubPayChProposalsReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(Payment_APIServer).SubPayChProposals(m, &payment_APISubPayChProposalsServer{stream})
}

type Payment_API_SubPayChProposalsServer interface {
	Send(*SubPayChProposalsResp) error
	grpc.ServerStream
}

type payment_APISubPayChProposalsServer struct {
	grpc.ServerStream
}

func (x *payment_APISubPayChProposalsServer) Send(m *SubPayChProposalsResp) error {
	return x.ServerStream.SendMsg(m)
}

func _Payment_API_UnsubPayChProposals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubPayChProposalsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).UnsubPayChProposals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/UnsubPayChProposals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).UnsubPayChProposals(ctx, req.(*UnsubPayChProposalsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_RespondPayChProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RespondPayChProposalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).RespondPayChProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/RespondPayChProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).RespondPayChProposal(ctx, req.(*RespondPayChProposalReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_CloseSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseSessionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).CloseSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/CloseSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).CloseSession(ctx, req.(*CloseSessionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_SendPayChUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendPayChUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).SendPayChUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/SendPayChUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).SendPayChUpdate(ctx, req.(*SendPayChUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_SubPayChUpdates_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubpayChUpdatesReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(Payment_APIServer).SubPayChUpdates(m, &payment_APISubPayChUpdatesServer{stream})
}

type Payment_API_SubPayChUpdatesServer interface {
	Send(*SubPayChUpdatesResp) error
	grpc.ServerStream
}

type payment_APISubPayChUpdatesServer struct {
	grpc.ServerStream
}

func (x *payment_APISubPayChUpdatesServer) Send(m *SubPayChUpdatesResp) error {
	return x.ServerStream.SendMsg(m)
}

func _Payment_API_UnsubPayChUpdates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubPayChUpdatesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).UnsubPayChUpdates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/UnsubPayChUpdates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).UnsubPayChUpdates(ctx, req.(*UnsubPayChUpdatesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_RespondPayChUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RespondPayChUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).RespondPayChUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/RespondPayChUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).RespondPayChUpdate(ctx, req.(*RespondPayChUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_GetPayChInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPayChInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).GetPayChInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/GetPayChInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).GetPayChInfo(ctx, req.(*GetPayChInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_ClosePayCh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClosePayChReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).ClosePayCh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/ClosePayCh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).ClosePayCh(ctx, req.(*ClosePayChReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Payment_API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Payment_API",
	HandlerType: (*Payment_APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _Payment_API_GetConfig_Handler,
		},
		{
			MethodName: "OpenSession",
			Handler:    _Payment_API_OpenSession_Handler,
		},
		{
			MethodName: "Time",
			Handler:    _Payment_API_Time_Handler,
		},
		{
			MethodName: "Help",
			Handler:    _Payment_API_Help_Handler,
		},
		{
			MethodName: "AddContact",
			Handler:    _Payment_API_AddContact_Handler,
		},
		{
			MethodName: "GetContact",
			Handler:    _Payment_API_GetContact_Handler,
		},
		{
			MethodName: "OpenPayCh",
			Handler:    _Payment_API_OpenPayCh_Handler,
		},
		{
			MethodName: "GetPayChs",
			Handler:    _Payment_API_GetPayChs_Handler,
		},
		{
			MethodName: "UnsubPayChProposals",
			Handler:    _Payment_API_UnsubPayChProposals_Handler,
		},
		{
			MethodName: "RespondPayChProposal",
			Handler:    _Payment_API_RespondPayChProposal_Handler,
		},
		{
			MethodName: "CloseSession",
			Handler:    _Payment_API_CloseSession_Handler,
		},
		{
			MethodName: "SendPayChUpdate",
			Handler:    _Payment_API_SendPayChUpdate_Handler,
		},
		{
			MethodName: "UnsubPayChUpdates",
			Handler:    _Payment_API_UnsubPayChUpdates_Handler,
		},
		{
			MethodName: "RespondPayChUpdate",
			Handler:    _Payment_API_RespondPayChUpdate_Handler,
		},
		{
			MethodName: "GetPayChInfo",
			Handler:    _Payment_API_GetPayChInfo_Handler,
		},
		{
			MethodName: "ClosePayCh",
			Handler:    _Payment_API_ClosePayCh_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubPayChProposals",
			Handler:       _Payment_API_SubPayChProposals_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubPayChUpdates",
			Handler:       _Payment_API_SubPayChUpdates_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

// Copyright (c) 2020 - for information on the respective copyright owner
// see the NOTICE file and/or the repository at
// https://github.com/hyperledger-labs/perun-node
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: api.proto

// Package pb contains proto3 definitions for user API and the corresponding
// generated code for grpc server and client.

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ErrorCategory int32

const (
	ErrorCategory_ParticipantError ErrorCategory = 0
	ErrorCategory_ClientError      ErrorCategory = 1
	ErrorCategory_ProtocolError    ErrorCategory = 2
	ErrorCategory_InternalError    ErrorCategory = 3
)

// Enum value maps for ErrorCategory.
var (
	ErrorCategory_name = map[int32]string{
		0: "ParticipantError",
		1: "ClientError",
		2: "ProtocolError",
		3: "InternalError",
	}
	ErrorCategory_value = map[string]int32{
		"ParticipantError": 0,
		"ClientError":      1,
		"ProtocolError":    2,
		"InternalError":    3,
	}
)

func (x ErrorCategory) Enum() *ErrorCategory {
	p := new(ErrorCategory)
	*p = x
	return p
}

func (x ErrorCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (ErrorCategory) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x ErrorCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCategory.Descriptor instead.
func (ErrorCategory) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type ErrorCode int32

const (
	// Though "0" is an invalid error code, we still define it, because
	//proto3 requires that every enum definition should have 0 mapped to
	//atleast one constant.
	ErrorCode_DefaultInvalidCode             ErrorCode = 0
	ErrorCode_ErrV2PeerResponseTimedout      ErrorCode = 101
	ErrorCode_ErrV2RejectedByPeer            ErrorCode = 102
	ErrorCode_ErrV2PeerNotFunded             ErrorCode = 103
	ErrorCode_ErrV2UserResponseTimedOut      ErrorCode = 104
	ErrorCode_ErrV2ResourceNotFound          ErrorCode = 201
	ErrorCode_ErrV2ResourceExists            ErrorCode = 202
	ErrorCode_ErrV2InvalidArgument           ErrorCode = 203
	ErrorCode_ErrV2FailedPreCondition        ErrorCode = 204
	ErrorCode_ErrV2InvalidConfig             ErrorCode = 205
	ErrorCode_ErrV2ChainNodeNotReachable     ErrorCode = 206
	ErrorCode_ErrV2InvalidContracts          ErrorCode = 207
	ErrorCode_ErrV2TxTimedOut                ErrorCode = 301
	ErrorCode_ErrV2InsufficientBalForTx      ErrorCode = 302
	ErrorCode_ErrV2ChainNodeDisconnected     ErrorCode = 303
	ErrorCode_ErrV2InsufficientBalForDeposit ErrorCode = 304
	ErrorCode_ErrV2UnknownInternal           ErrorCode = 401
	ErrorCode_ErrV2OffChainComm              ErrorCode = 402
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:   "DefaultInvalidCode",
		101: "ErrV2PeerResponseTimedout",
		102: "ErrV2RejectedByPeer",
		103: "ErrV2PeerNotFunded",
		104: "ErrV2UserResponseTimedOut",
		201: "ErrV2ResourceNotFound",
		202: "ErrV2ResourceExists",
		203: "ErrV2InvalidArgument",
		204: "ErrV2FailedPreCondition",
		205: "ErrV2InvalidConfig",
		206: "ErrV2ChainNodeNotReachable",
		207: "ErrV2InvalidContracts",
		301: "ErrV2TxTimedOut",
		302: "ErrV2InsufficientBalForTx",
		303: "ErrV2ChainNodeDisconnected",
		304: "ErrV2InsufficientBalForDeposit",
		401: "ErrV2UnknownInternal",
		402: "ErrV2OffChainComm",
	}
	ErrorCode_value = map[string]int32{
		"DefaultInvalidCode":             0,
		"ErrV2PeerResponseTimedout":      101,
		"ErrV2RejectedByPeer":            102,
		"ErrV2PeerNotFunded":             103,
		"ErrV2UserResponseTimedOut":      104,
		"ErrV2ResourceNotFound":          201,
		"ErrV2ResourceExists":            202,
		"ErrV2InvalidArgument":           203,
		"ErrV2FailedPreCondition":        204,
		"ErrV2InvalidConfig":             205,
		"ErrV2ChainNodeNotReachable":     206,
		"ErrV2InvalidContracts":          207,
		"ErrV2TxTimedOut":                301,
		"ErrV2InsufficientBalForTx":      302,
		"ErrV2ChainNodeDisconnected":     303,
		"ErrV2InsufficientBalForDeposit": 304,
		"ErrV2UnknownInternal":           401,
		"ErrV2OffChainComm":              402,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[1].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[1]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

type SubPayChUpdatesResp_Notify_ChUpdateType int32

const (
	SubPayChUpdatesResp_Notify_open   SubPayChUpdatesResp_Notify_ChUpdateType = 0
	SubPayChUpdatesResp_Notify_final  SubPayChUpdatesResp_Notify_ChUpdateType = 1
	SubPayChUpdatesResp_Notify_closed SubPayChUpdatesResp_Notify_ChUpdateType = 2
)

// Enum value maps for SubPayChUpdatesResp_Notify_ChUpdateType.
var (
	SubPayChUpdatesResp_Notify_ChUpdateType_name = map[int32]string{
		0: "open",
		1: "final",
		2: "closed",
	}
	SubPayChUpdatesResp_Notify_ChUpdateType_value = map[string]int32{
		"open":   0,
		"final":  1,
		"closed": 2,
	}
)

func (x SubPayChUpdatesResp_Notify_ChUpdateType) Enum() *SubPayChUpdatesResp_Notify_ChUpdateType {
	p := new(SubPayChUpdatesResp_Notify_ChUpdateType)
	*p = x
	return p
}

func (x SubPayChUpdatesResp_Notify_ChUpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubPayChUpdatesResp_Notify_ChUpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[2].Descriptor()
}

func (SubPayChUpdatesResp_Notify_ChUpdateType) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[2]
}

func (x SubPayChUpdatesResp_Notify_ChUpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubPayChUpdatesResp_Notify_ChUpdateType.Descriptor instead.
func (SubPayChUpdatesResp_Notify_ChUpdateType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{35, 0, 0}
}

// Peer ID represents the data required to identify and communicate
// with a participant in the the off-chain network.
type PeerID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias           string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	OffChainAddress string `protobuf:"bytes,2,opt,name=offChainAddress,proto3" json:"offChainAddress,omitempty"`
	CommAddress     string `protobuf:"bytes,3,opt,name=commAddress,proto3" json:"commAddress,omitempty"`
	CommType        string `protobuf:"bytes,4,opt,name=commType,proto3" json:"commType,omitempty"`
}

func (x *PeerID) Reset() {
	*x = PeerID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerID) ProtoMessage() {}

func (x *PeerID) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerID.ProtoReflect.Descriptor instead.
func (*PeerID) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *PeerID) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *PeerID) GetOffChainAddress() string {
	if x != nil {
		return x.OffChainAddress
	}
	return ""
}

func (x *PeerID) GetCommAddress() string {
	if x != nil {
		return x.CommAddress
	}
	return ""
}

func (x *PeerID) GetCommType() string {
	if x != nil {
		return x.CommType
	}
	return ""
}

// BalInfo represents the balance information of the channel: Currency and the channel balance.
// Balance is represented as two corresponding lists:
// Parts contains the list of aliases of the channel participants and
// Balance list contains the amount held by each channel participant in the give currency.
//
// A valid BalInfo should meet the following conditions, it should be validated when using them.
//	1. Lengths of Parts list and Balance list are equal.
//	2. All entries in Parts list are unique.
//	3. Parts list has an entry "self", that represents the user of the session.
//	4. No amount in Balance must be negative.
type BalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string   `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Parts    []string `protobuf:"bytes,2,rep,name=parts,proto3" json:"parts,omitempty"`
	Bal      []string `protobuf:"bytes,3,rep,name=bal,proto3" json:"bal,omitempty"`
}

func (x *BalInfo) Reset() {
	*x = BalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalInfo) ProtoMessage() {}

func (x *BalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalInfo.ProtoReflect.Descriptor instead.
func (*BalInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *BalInfo) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *BalInfo) GetParts() []string {
	if x != nil {
		return x.Parts
	}
	return nil
}

func (x *BalInfo) GetBal() []string {
	if x != nil {
		return x.Bal
	}
	return nil
}

type PayChInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChID    string   `protobuf:"bytes,1,opt,name=chID,proto3" json:"chID,omitempty"`
	BalInfo *BalInfo `protobuf:"bytes,2,opt,name=balInfo,proto3" json:"balInfo,omitempty"`
	Version string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *PayChInfo) Reset() {
	*x = PayChInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChInfo) ProtoMessage() {}

func (x *PayChInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChInfo.ProtoReflect.Descriptor instead.
func (*PayChInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *PayChInfo) GetChID() string {
	if x != nil {
		return x.ChID
	}
	return ""
}

func (x *PayChInfo) GetBalInfo() *BalInfo {
	if x != nil {
		return x.BalInfo
	}
	return nil
}

func (x *PayChInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type MsgError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *MsgError) Reset() {
	*x = MsgError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgError) ProtoMessage() {}

func (x *MsgError) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgError.ProtoReflect.Descriptor instead.
func (*MsgError) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *MsgError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type MsgErrorV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category ErrorCategory `protobuf:"varint,1,opt,name=category,proto3,enum=pb.ErrorCategory" json:"category,omitempty"`
	Code     ErrorCode     `protobuf:"varint,2,opt,name=code,proto3,enum=pb.ErrorCode" json:"code,omitempty"`
	Message  string        `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are assignable to AddInfo:
	//	*MsgErrorV2_ErrV2InfoResourceNotFound
	//	*MsgErrorV2_ErrV2InfoResourceExists
	//	*MsgErrorV2_ErrV2InfoInvalidArgument
	AddInfo isMsgErrorV2_AddInfo `protobuf_oneof:"addInfo"`
}

func (x *MsgErrorV2) Reset() {
	*x = MsgErrorV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgErrorV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgErrorV2) ProtoMessage() {}

func (x *MsgErrorV2) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgErrorV2.ProtoReflect.Descriptor instead.
func (*MsgErrorV2) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *MsgErrorV2) GetCategory() ErrorCategory {
	if x != nil {
		return x.Category
	}
	return ErrorCategory_ParticipantError
}

func (x *MsgErrorV2) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_DefaultInvalidCode
}

func (x *MsgErrorV2) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (m *MsgErrorV2) GetAddInfo() isMsgErrorV2_AddInfo {
	if m != nil {
		return m.AddInfo
	}
	return nil
}

func (x *MsgErrorV2) GetErrV2InfoResourceNotFound() *ErrV2InfoResourceNotFound {
	if x, ok := x.GetAddInfo().(*MsgErrorV2_ErrV2InfoResourceNotFound); ok {
		return x.ErrV2InfoResourceNotFound
	}
	return nil
}

func (x *MsgErrorV2) GetErrV2InfoResourceExists() *ErrV2InfoResourceExists {
	if x, ok := x.GetAddInfo().(*MsgErrorV2_ErrV2InfoResourceExists); ok {
		return x.ErrV2InfoResourceExists
	}
	return nil
}

func (x *MsgErrorV2) GetErrV2InfoInvalidArgument() *ErrV2InfoInvalidArgument {
	if x, ok := x.GetAddInfo().(*MsgErrorV2_ErrV2InfoInvalidArgument); ok {
		return x.ErrV2InfoInvalidArgument
	}
	return nil
}

type isMsgErrorV2_AddInfo interface {
	isMsgErrorV2_AddInfo()
}

type MsgErrorV2_ErrV2InfoResourceNotFound struct {
	ErrV2InfoResourceNotFound *ErrV2InfoResourceNotFound `protobuf:"bytes,4,opt,name=ErrV2InfoResourceNotFound,proto3,oneof"`
}

type MsgErrorV2_ErrV2InfoResourceExists struct {
	ErrV2InfoResourceExists *ErrV2InfoResourceExists `protobuf:"bytes,5,opt,name=ErrV2InfoResourceExists,proto3,oneof"`
}

type MsgErrorV2_ErrV2InfoInvalidArgument struct {
	ErrV2InfoInvalidArgument *ErrV2InfoInvalidArgument `protobuf:"bytes,6,opt,name=ErrV2InfoInvalidArgument,proto3,oneof"`
}

func (*MsgErrorV2_ErrV2InfoResourceNotFound) isMsgErrorV2_AddInfo() {}

func (*MsgErrorV2_ErrV2InfoResourceExists) isMsgErrorV2_AddInfo() {}

func (*MsgErrorV2_ErrV2InfoInvalidArgument) isMsgErrorV2_AddInfo() {}

type ErrV2InfoResourceNotFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ErrV2InfoResourceNotFound) Reset() {
	*x = ErrV2InfoResourceNotFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrV2InfoResourceNotFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrV2InfoResourceNotFound) ProtoMessage() {}

func (x *ErrV2InfoResourceNotFound) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrV2InfoResourceNotFound.ProtoReflect.Descriptor instead.
func (*ErrV2InfoResourceNotFound) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *ErrV2InfoResourceNotFound) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ErrV2InfoResourceNotFound) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ErrV2InfoResourceExists struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ErrV2InfoResourceExists) Reset() {
	*x = ErrV2InfoResourceExists{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrV2InfoResourceExists) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrV2InfoResourceExists) ProtoMessage() {}

func (x *ErrV2InfoResourceExists) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrV2InfoResourceExists.ProtoReflect.Descriptor instead.
func (*ErrV2InfoResourceExists) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *ErrV2InfoResourceExists) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ErrV2InfoResourceExists) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ErrV2InfoInvalidArgument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value       string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Requirement string `protobuf:"bytes,3,opt,name=requirement,proto3" json:"requirement,omitempty"`
}

func (x *ErrV2InfoInvalidArgument) Reset() {
	*x = ErrV2InfoInvalidArgument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrV2InfoInvalidArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrV2InfoInvalidArgument) ProtoMessage() {}

func (x *ErrV2InfoInvalidArgument) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrV2InfoInvalidArgument.ProtoReflect.Descriptor instead.
func (*ErrV2InfoInvalidArgument) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *ErrV2InfoInvalidArgument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ErrV2InfoInvalidArgument) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ErrV2InfoInvalidArgument) GetRequirement() string {
	if x != nil {
		return x.Requirement
	}
	return ""
}

type GetConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConfigReq) Reset() {
	*x = GetConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigReq) ProtoMessage() {}

func (x *GetConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigReq.ProtoReflect.Descriptor instead.
func (*GetConfigReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

type GetConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainAddress       string   `protobuf:"bytes,1,opt,name=chainAddress,proto3" json:"chainAddress,omitempty"`
	AdjudicatorAddress string   `protobuf:"bytes,2,opt,name=adjudicatorAddress,proto3" json:"adjudicatorAddress,omitempty"`
	AssetAddress       string   `protobuf:"bytes,3,opt,name=assetAddress,proto3" json:"assetAddress,omitempty"`
	CommTypes          []string `protobuf:"bytes,4,rep,name=commTypes,proto3" json:"commTypes,omitempty"`
	IdProviderTypes    []string `protobuf:"bytes,5,rep,name=idProviderTypes,proto3" json:"idProviderTypes,omitempty"`
}

func (x *GetConfigResp) Reset() {
	*x = GetConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResp) ProtoMessage() {}

func (x *GetConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResp.ProtoReflect.Descriptor instead.
func (*GetConfigResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *GetConfigResp) GetChainAddress() string {
	if x != nil {
		return x.ChainAddress
	}
	return ""
}

func (x *GetConfigResp) GetAdjudicatorAddress() string {
	if x != nil {
		return x.AdjudicatorAddress
	}
	return ""
}

func (x *GetConfigResp) GetAssetAddress() string {
	if x != nil {
		return x.AssetAddress
	}
	return ""
}

func (x *GetConfigResp) GetCommTypes() []string {
	if x != nil {
		return x.CommTypes
	}
	return nil
}

func (x *GetConfigResp) GetIdProviderTypes() []string {
	if x != nil {
		return x.IdProviderTypes
	}
	return nil
}

type OpenSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigFile string `protobuf:"bytes,1,opt,name=configFile,proto3" json:"configFile,omitempty"`
}

func (x *OpenSessionReq) Reset() {
	*x = OpenSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionReq) ProtoMessage() {}

func (x *OpenSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSessionReq.ProtoReflect.Descriptor instead.
func (*OpenSessionReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *OpenSessionReq) GetConfigFile() string {
	if x != nil {
		return x.ConfigFile
	}
	return ""
}

type OpenSessionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*OpenSessionResp_MsgSuccess_
	//	*OpenSessionResp_Error
	Response isOpenSessionResp_Response `protobuf_oneof:"response"`
}

func (x *OpenSessionResp) Reset() {
	*x = OpenSessionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSessionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionResp) ProtoMessage() {}

func (x *OpenSessionResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSessionResp.ProtoReflect.Descriptor instead.
func (*OpenSessionResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (m *OpenSessionResp) GetResponse() isOpenSessionResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *OpenSessionResp) GetMsgSuccess() *OpenSessionResp_MsgSuccess {
	if x, ok := x.GetResponse().(*OpenSessionResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *OpenSessionResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*OpenSessionResp_Error); ok {
		return x.Error
	}
	return nil
}

type isOpenSessionResp_Response interface {
	isOpenSessionResp_Response()
}

type OpenSessionResp_MsgSuccess_ struct {
	MsgSuccess *OpenSessionResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type OpenSessionResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*OpenSessionResp_MsgSuccess_) isOpenSessionResp_Response() {}

func (*OpenSessionResp_Error) isOpenSessionResp_Response() {}

type TimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TimeReq) Reset() {
	*x = TimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeReq) ProtoMessage() {}

func (x *TimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeReq.ProtoReflect.Descriptor instead.
func (*TimeReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

type TimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TimeResp) Reset() {
	*x = TimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeResp) ProtoMessage() {}

func (x *TimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeResp.ProtoReflect.Descriptor instead.
func (*TimeResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *TimeResp) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type HelpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HelpReq) Reset() {
	*x = HelpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpReq) ProtoMessage() {}

func (x *HelpReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpReq.ProtoReflect.Descriptor instead.
func (*HelpReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

type HelpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apis []string `protobuf:"bytes,1,rep,name=apis,proto3" json:"apis,omitempty"`
}

func (x *HelpResp) Reset() {
	*x = HelpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpResp) ProtoMessage() {}

func (x *HelpResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpResp.ProtoReflect.Descriptor instead.
func (*HelpResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (x *HelpResp) GetApis() []string {
	if x != nil {
		return x.Apis
	}
	return nil
}

type AddPeerIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string  `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	PeerID    *PeerID `protobuf:"bytes,2,opt,name=peerID,proto3" json:"peerID,omitempty"`
}

func (x *AddPeerIDReq) Reset() {
	*x = AddPeerIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPeerIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPeerIDReq) ProtoMessage() {}

func (x *AddPeerIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPeerIDReq.ProtoReflect.Descriptor instead.
func (*AddPeerIDReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

func (x *AddPeerIDReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *AddPeerIDReq) GetPeerID() *PeerID {
	if x != nil {
		return x.PeerID
	}
	return nil
}

type AddPeerIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*AddPeerIDResp_MsgSuccess_
	//	*AddPeerIDResp_Error
	Response isAddPeerIDResp_Response `protobuf_oneof:"response"`
}

func (x *AddPeerIDResp) Reset() {
	*x = AddPeerIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPeerIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPeerIDResp) ProtoMessage() {}

func (x *AddPeerIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPeerIDResp.ProtoReflect.Descriptor instead.
func (*AddPeerIDResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

func (m *AddPeerIDResp) GetResponse() isAddPeerIDResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AddPeerIDResp) GetMsgSuccess() *AddPeerIDResp_MsgSuccess {
	if x, ok := x.GetResponse().(*AddPeerIDResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *AddPeerIDResp) GetError() *MsgErrorV2 {
	if x, ok := x.GetResponse().(*AddPeerIDResp_Error); ok {
		return x.Error
	}
	return nil
}

type isAddPeerIDResp_Response interface {
	isAddPeerIDResp_Response()
}

type AddPeerIDResp_MsgSuccess_ struct {
	MsgSuccess *AddPeerIDResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type AddPeerIDResp_Error struct {
	Error *MsgErrorV2 `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*AddPeerIDResp_MsgSuccess_) isAddPeerIDResp_Response() {}

func (*AddPeerIDResp_Error) isAddPeerIDResp_Response() {}

type GetPeerIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Alias     string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *GetPeerIDReq) Reset() {
	*x = GetPeerIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeerIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerIDReq) ProtoMessage() {}

func (x *GetPeerIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerIDReq.ProtoReflect.Descriptor instead.
func (*GetPeerIDReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

func (x *GetPeerIDReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *GetPeerIDReq) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type GetPeerIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetPeerIDResp_MsgSuccess_
	//	*GetPeerIDResp_Error
	Response isGetPeerIDResp_Response `protobuf_oneof:"response"`
}

func (x *GetPeerIDResp) Reset() {
	*x = GetPeerIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeerIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerIDResp) ProtoMessage() {}

func (x *GetPeerIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerIDResp.ProtoReflect.Descriptor instead.
func (*GetPeerIDResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (m *GetPeerIDResp) GetResponse() isGetPeerIDResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetPeerIDResp) GetMsgSuccess() *GetPeerIDResp_MsgSuccess {
	if x, ok := x.GetResponse().(*GetPeerIDResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *GetPeerIDResp) GetError() *MsgErrorV2 {
	if x, ok := x.GetResponse().(*GetPeerIDResp_Error); ok {
		return x.Error
	}
	return nil
}

type isGetPeerIDResp_Response interface {
	isGetPeerIDResp_Response()
}

type GetPeerIDResp_MsgSuccess_ struct {
	MsgSuccess *GetPeerIDResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type GetPeerIDResp_Error struct {
	Error *MsgErrorV2 `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*GetPeerIDResp_MsgSuccess_) isGetPeerIDResp_Response() {}

func (*GetPeerIDResp_Error) isGetPeerIDResp_Response() {}

type OpenPayChReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID        string   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	OpeningBalInfo   *BalInfo `protobuf:"bytes,2,opt,name=openingBalInfo,proto3" json:"openingBalInfo,omitempty"`
	ChallengeDurSecs uint64   `protobuf:"varint,3,opt,name=challengeDurSecs,proto3" json:"challengeDurSecs,omitempty"`
}

func (x *OpenPayChReq) Reset() {
	*x = OpenPayChReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPayChReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPayChReq) ProtoMessage() {}

func (x *OpenPayChReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPayChReq.ProtoReflect.Descriptor instead.
func (*OpenPayChReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *OpenPayChReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *OpenPayChReq) GetOpeningBalInfo() *BalInfo {
	if x != nil {
		return x.OpeningBalInfo
	}
	return nil
}

func (x *OpenPayChReq) GetChallengeDurSecs() uint64 {
	if x != nil {
		return x.ChallengeDurSecs
	}
	return 0
}

type OpenPayChResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*OpenPayChResp_MsgSuccess_
	//	*OpenPayChResp_Error
	Response isOpenPayChResp_Response `protobuf_oneof:"response"`
}

func (x *OpenPayChResp) Reset() {
	*x = OpenPayChResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPayChResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPayChResp) ProtoMessage() {}

func (x *OpenPayChResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPayChResp.ProtoReflect.Descriptor instead.
func (*OpenPayChResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21}
}

func (m *OpenPayChResp) GetResponse() isOpenPayChResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *OpenPayChResp) GetMsgSuccess() *OpenPayChResp_MsgSuccess {
	if x, ok := x.GetResponse().(*OpenPayChResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *OpenPayChResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*OpenPayChResp_Error); ok {
		return x.Error
	}
	return nil
}

type isOpenPayChResp_Response interface {
	isOpenPayChResp_Response()
}

type OpenPayChResp_MsgSuccess_ struct {
	MsgSuccess *OpenPayChResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type OpenPayChResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*OpenPayChResp_MsgSuccess_) isOpenPayChResp_Response() {}

func (*OpenPayChResp_Error) isOpenPayChResp_Response() {}

type GetPayChsInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *GetPayChsInfoReq) Reset() {
	*x = GetPayChsInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChsInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChsInfoReq) ProtoMessage() {}

func (x *GetPayChsInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChsInfoReq.ProtoReflect.Descriptor instead.
func (*GetPayChsInfoReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{22}
}

func (x *GetPayChsInfoReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type GetPayChsInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetPayChsInfoResp_MsgSuccess_
	//	*GetPayChsInfoResp_Error
	Response isGetPayChsInfoResp_Response `protobuf_oneof:"response"`
}

func (x *GetPayChsInfoResp) Reset() {
	*x = GetPayChsInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChsInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChsInfoResp) ProtoMessage() {}

func (x *GetPayChsInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChsInfoResp.ProtoReflect.Descriptor instead.
func (*GetPayChsInfoResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{23}
}

func (m *GetPayChsInfoResp) GetResponse() isGetPayChsInfoResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetPayChsInfoResp) GetMsgSuccess() *GetPayChsInfoResp_MsgSuccess {
	if x, ok := x.GetResponse().(*GetPayChsInfoResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *GetPayChsInfoResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*GetPayChsInfoResp_Error); ok {
		return x.Error
	}
	return nil
}

type isGetPayChsInfoResp_Response interface {
	isGetPayChsInfoResp_Response()
}

type GetPayChsInfoResp_MsgSuccess_ struct {
	MsgSuccess *GetPayChsInfoResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type GetPayChsInfoResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*GetPayChsInfoResp_MsgSuccess_) isGetPayChsInfoResp_Response() {}

func (*GetPayChsInfoResp_Error) isGetPayChsInfoResp_Response() {}

type SubPayChProposalsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *SubPayChProposalsReq) Reset() {
	*x = SubPayChProposalsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChProposalsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChProposalsReq) ProtoMessage() {}

func (x *SubPayChProposalsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChProposalsReq.ProtoReflect.Descriptor instead.
func (*SubPayChProposalsReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{24}
}

func (x *SubPayChProposalsReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type SubPayChProposalsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*SubPayChProposalsResp_Notify_
	//	*SubPayChProposalsResp_Error
	Response isSubPayChProposalsResp_Response `protobuf_oneof:"response"`
}

func (x *SubPayChProposalsResp) Reset() {
	*x = SubPayChProposalsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChProposalsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChProposalsResp) ProtoMessage() {}

func (x *SubPayChProposalsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChProposalsResp.ProtoReflect.Descriptor instead.
func (*SubPayChProposalsResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{25}
}

func (m *SubPayChProposalsResp) GetResponse() isSubPayChProposalsResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SubPayChProposalsResp) GetNotify() *SubPayChProposalsResp_Notify {
	if x, ok := x.GetResponse().(*SubPayChProposalsResp_Notify_); ok {
		return x.Notify
	}
	return nil
}

func (x *SubPayChProposalsResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*SubPayChProposalsResp_Error); ok {
		return x.Error
	}
	return nil
}

type isSubPayChProposalsResp_Response interface {
	isSubPayChProposalsResp_Response()
}

type SubPayChProposalsResp_Notify_ struct {
	Notify *SubPayChProposalsResp_Notify `protobuf:"bytes,1,opt,name=notify,proto3,oneof"`
}

type SubPayChProposalsResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SubPayChProposalsResp_Notify_) isSubPayChProposalsResp_Response() {}

func (*SubPayChProposalsResp_Error) isSubPayChProposalsResp_Response() {}

type UnsubPayChProposalsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *UnsubPayChProposalsReq) Reset() {
	*x = UnsubPayChProposalsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChProposalsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChProposalsReq) ProtoMessage() {}

func (x *UnsubPayChProposalsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChProposalsReq.ProtoReflect.Descriptor instead.
func (*UnsubPayChProposalsReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{26}
}

func (x *UnsubPayChProposalsReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type UnsubPayChProposalsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*UnsubPayChProposalsResp_MsgSuccess_
	//	*UnsubPayChProposalsResp_Error
	Response isUnsubPayChProposalsResp_Response `protobuf_oneof:"response"`
}

func (x *UnsubPayChProposalsResp) Reset() {
	*x = UnsubPayChProposalsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChProposalsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChProposalsResp) ProtoMessage() {}

func (x *UnsubPayChProposalsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChProposalsResp.ProtoReflect.Descriptor instead.
func (*UnsubPayChProposalsResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{27}
}

func (m *UnsubPayChProposalsResp) GetResponse() isUnsubPayChProposalsResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UnsubPayChProposalsResp) GetMsgSuccess() *UnsubPayChProposalsResp_MsgSuccess {
	if x, ok := x.GetResponse().(*UnsubPayChProposalsResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *UnsubPayChProposalsResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*UnsubPayChProposalsResp_Error); ok {
		return x.Error
	}
	return nil
}

type isUnsubPayChProposalsResp_Response interface {
	isUnsubPayChProposalsResp_Response()
}

type UnsubPayChProposalsResp_MsgSuccess_ struct {
	MsgSuccess *UnsubPayChProposalsResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type UnsubPayChProposalsResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*UnsubPayChProposalsResp_MsgSuccess_) isUnsubPayChProposalsResp_Response() {}

func (*UnsubPayChProposalsResp_Error) isUnsubPayChProposalsResp_Response() {}

type RespondPayChProposalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID  string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ProposalID string `protobuf:"bytes,2,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
	Accept     bool   `protobuf:"varint,3,opt,name=accept,proto3" json:"accept,omitempty"`
}

func (x *RespondPayChProposalReq) Reset() {
	*x = RespondPayChProposalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChProposalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChProposalReq) ProtoMessage() {}

func (x *RespondPayChProposalReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChProposalReq.ProtoReflect.Descriptor instead.
func (*RespondPayChProposalReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{28}
}

func (x *RespondPayChProposalReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *RespondPayChProposalReq) GetProposalID() string {
	if x != nil {
		return x.ProposalID
	}
	return ""
}

func (x *RespondPayChProposalReq) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

type RespondPayChProposalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*RespondPayChProposalResp_MsgSuccess_
	//	*RespondPayChProposalResp_Error
	Response isRespondPayChProposalResp_Response `protobuf_oneof:"response"`
}

func (x *RespondPayChProposalResp) Reset() {
	*x = RespondPayChProposalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChProposalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChProposalResp) ProtoMessage() {}

func (x *RespondPayChProposalResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChProposalResp.ProtoReflect.Descriptor instead.
func (*RespondPayChProposalResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{29}
}

func (m *RespondPayChProposalResp) GetResponse() isRespondPayChProposalResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RespondPayChProposalResp) GetMsgSuccess() *RespondPayChProposalResp_MsgSuccess {
	if x, ok := x.GetResponse().(*RespondPayChProposalResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *RespondPayChProposalResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*RespondPayChProposalResp_Error); ok {
		return x.Error
	}
	return nil
}

type isRespondPayChProposalResp_Response interface {
	isRespondPayChProposalResp_Response()
}

type RespondPayChProposalResp_MsgSuccess_ struct {
	MsgSuccess *RespondPayChProposalResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type RespondPayChProposalResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*RespondPayChProposalResp_MsgSuccess_) isRespondPayChProposalResp_Response() {}

func (*RespondPayChProposalResp_Error) isRespondPayChProposalResp_Response() {}

type CloseSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Force     bool   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *CloseSessionReq) Reset() {
	*x = CloseSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionReq) ProtoMessage() {}

func (x *CloseSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionReq.ProtoReflect.Descriptor instead.
func (*CloseSessionReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{30}
}

func (x *CloseSessionReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *CloseSessionReq) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type CloseSessionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*CloseSessionResp_MsgSuccess_
	//	*CloseSessionResp_Error
	Response isCloseSessionResp_Response `protobuf_oneof:"response"`
}

func (x *CloseSessionResp) Reset() {
	*x = CloseSessionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSessionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionResp) ProtoMessage() {}

func (x *CloseSessionResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionResp.ProtoReflect.Descriptor instead.
func (*CloseSessionResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{31}
}

func (m *CloseSessionResp) GetResponse() isCloseSessionResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CloseSessionResp) GetMsgSuccess() *CloseSessionResp_MsgSuccess {
	if x, ok := x.GetResponse().(*CloseSessionResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *CloseSessionResp) GetError() *CloseSessionResp_MsgError {
	if x, ok := x.GetResponse().(*CloseSessionResp_Error); ok {
		return x.Error
	}
	return nil
}

type isCloseSessionResp_Response interface {
	isCloseSessionResp_Response()
}

type CloseSessionResp_MsgSuccess_ struct {
	MsgSuccess *CloseSessionResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type CloseSessionResp_Error struct {
	Error *CloseSessionResp_MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*CloseSessionResp_MsgSuccess_) isCloseSessionResp_Response() {}

func (*CloseSessionResp_Error) isCloseSessionResp_Response() {}

type SendPayChUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChID      string `protobuf:"bytes,2,opt,name=chID,proto3" json:"chID,omitempty"`
	Payee     string `protobuf:"bytes,3,opt,name=payee,proto3" json:"payee,omitempty"`
	Amount    string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *SendPayChUpdateReq) Reset() {
	*x = SendPayChUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPayChUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPayChUpdateReq) ProtoMessage() {}

func (x *SendPayChUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPayChUpdateReq.ProtoReflect.Descriptor instead.
func (*SendPayChUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{32}
}

func (x *SendPayChUpdateReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *SendPayChUpdateReq) GetChID() string {
	if x != nil {
		return x.ChID
	}
	return ""
}

func (x *SendPayChUpdateReq) GetPayee() string {
	if x != nil {
		return x.Payee
	}
	return ""
}

func (x *SendPayChUpdateReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type SendPayChUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*SendPayChUpdateResp_MsgSuccess_
	//	*SendPayChUpdateResp_Error
	Response isSendPayChUpdateResp_Response `protobuf_oneof:"response"`
}

func (x *SendPayChUpdateResp) Reset() {
	*x = SendPayChUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPayChUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPayChUpdateResp) ProtoMessage() {}

func (x *SendPayChUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPayChUpdateResp.ProtoReflect.Descriptor instead.
func (*SendPayChUpdateResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{33}
}

func (m *SendPayChUpdateResp) GetResponse() isSendPayChUpdateResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SendPayChUpdateResp) GetMsgSuccess() *SendPayChUpdateResp_MsgSuccess {
	if x, ok := x.GetResponse().(*SendPayChUpdateResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *SendPayChUpdateResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*SendPayChUpdateResp_Error); ok {
		return x.Error
	}
	return nil
}

type isSendPayChUpdateResp_Response interface {
	isSendPayChUpdateResp_Response()
}

type SendPayChUpdateResp_MsgSuccess_ struct {
	MsgSuccess *SendPayChUpdateResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type SendPayChUpdateResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SendPayChUpdateResp_MsgSuccess_) isSendPayChUpdateResp_Response() {}

func (*SendPayChUpdateResp_Error) isSendPayChUpdateResp_Response() {}

type SubpayChUpdatesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChID      string `protobuf:"bytes,2,opt,name=chID,proto3" json:"chID,omitempty"`
}

func (x *SubpayChUpdatesReq) Reset() {
	*x = SubpayChUpdatesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubpayChUpdatesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubpayChUpdatesReq) ProtoMessage() {}

func (x *SubpayChUpdatesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubpayChUpdatesReq.ProtoReflect.Descriptor instead.
func (*SubpayChUpdatesReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{34}
}

func (x *SubpayChUpdatesReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *SubpayChUpdatesReq) GetChID() string {
	if x != nil {
		return x.ChID
	}
	return ""
}

type SubPayChUpdatesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*SubPayChUpdatesResp_Notify_
	//	*SubPayChUpdatesResp_Error
	Response isSubPayChUpdatesResp_Response `protobuf_oneof:"response"`
}

func (x *SubPayChUpdatesResp) Reset() {
	*x = SubPayChUpdatesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChUpdatesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChUpdatesResp) ProtoMessage() {}

func (x *SubPayChUpdatesResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChUpdatesResp.ProtoReflect.Descriptor instead.
func (*SubPayChUpdatesResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{35}
}

func (m *SubPayChUpdatesResp) GetResponse() isSubPayChUpdatesResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SubPayChUpdatesResp) GetNotify() *SubPayChUpdatesResp_Notify {
	if x, ok := x.GetResponse().(*SubPayChUpdatesResp_Notify_); ok {
		return x.Notify
	}
	return nil
}

func (x *SubPayChUpdatesResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*SubPayChUpdatesResp_Error); ok {
		return x.Error
	}
	return nil
}

type isSubPayChUpdatesResp_Response interface {
	isSubPayChUpdatesResp_Response()
}

type SubPayChUpdatesResp_Notify_ struct {
	Notify *SubPayChUpdatesResp_Notify `protobuf:"bytes,1,opt,name=notify,proto3,oneof"`
}

type SubPayChUpdatesResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SubPayChUpdatesResp_Notify_) isSubPayChUpdatesResp_Response() {}

func (*SubPayChUpdatesResp_Error) isSubPayChUpdatesResp_Response() {}

type UnsubPayChUpdatesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChID      string `protobuf:"bytes,2,opt,name=chID,proto3" json:"chID,omitempty"`
}

func (x *UnsubPayChUpdatesReq) Reset() {
	*x = UnsubPayChUpdatesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChUpdatesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChUpdatesReq) ProtoMessage() {}

func (x *UnsubPayChUpdatesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChUpdatesReq.ProtoReflect.Descriptor instead.
func (*UnsubPayChUpdatesReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{36}
}

func (x *UnsubPayChUpdatesReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *UnsubPayChUpdatesReq) GetChID() string {
	if x != nil {
		return x.ChID
	}
	return ""
}

type UnsubPayChUpdatesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*UnsubPayChUpdatesResp_MsgSuccess_
	//	*UnsubPayChUpdatesResp_Error
	Response isUnsubPayChUpdatesResp_Response `protobuf_oneof:"response"`
}

func (x *UnsubPayChUpdatesResp) Reset() {
	*x = UnsubPayChUpdatesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChUpdatesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChUpdatesResp) ProtoMessage() {}

func (x *UnsubPayChUpdatesResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChUpdatesResp.ProtoReflect.Descriptor instead.
func (*UnsubPayChUpdatesResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{37}
}

func (m *UnsubPayChUpdatesResp) GetResponse() isUnsubPayChUpdatesResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UnsubPayChUpdatesResp) GetMsgSuccess() *UnsubPayChUpdatesResp_MsgSuccess {
	if x, ok := x.GetResponse().(*UnsubPayChUpdatesResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *UnsubPayChUpdatesResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*UnsubPayChUpdatesResp_Error); ok {
		return x.Error
	}
	return nil
}

type isUnsubPayChUpdatesResp_Response interface {
	isUnsubPayChUpdatesResp_Response()
}

type UnsubPayChUpdatesResp_MsgSuccess_ struct {
	MsgSuccess *UnsubPayChUpdatesResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type UnsubPayChUpdatesResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*UnsubPayChUpdatesResp_MsgSuccess_) isUnsubPayChUpdatesResp_Response() {}

func (*UnsubPayChUpdatesResp_Error) isUnsubPayChUpdatesResp_Response() {}

type RespondPayChUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChID      string `protobuf:"bytes,2,opt,name=chID,proto3" json:"chID,omitempty"`
	UpdateID  string `protobuf:"bytes,3,opt,name=updateID,proto3" json:"updateID,omitempty"`
	Accept    bool   `protobuf:"varint,4,opt,name=accept,proto3" json:"accept,omitempty"`
}

func (x *RespondPayChUpdateReq) Reset() {
	*x = RespondPayChUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChUpdateReq) ProtoMessage() {}

func (x *RespondPayChUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChUpdateReq.ProtoReflect.Descriptor instead.
func (*RespondPayChUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{38}
}

func (x *RespondPayChUpdateReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *RespondPayChUpdateReq) GetChID() string {
	if x != nil {
		return x.ChID
	}
	return ""
}

func (x *RespondPayChUpdateReq) GetUpdateID() string {
	if x != nil {
		return x.UpdateID
	}
	return ""
}

func (x *RespondPayChUpdateReq) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

type RespondPayChUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*RespondPayChUpdateResp_MsgSuccess_
	//	*RespondPayChUpdateResp_Error
	Response isRespondPayChUpdateResp_Response `protobuf_oneof:"response"`
}

func (x *RespondPayChUpdateResp) Reset() {
	*x = RespondPayChUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChUpdateResp) ProtoMessage() {}

func (x *RespondPayChUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChUpdateResp.ProtoReflect.Descriptor instead.
func (*RespondPayChUpdateResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{39}
}

func (m *RespondPayChUpdateResp) GetResponse() isRespondPayChUpdateResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RespondPayChUpdateResp) GetMsgSuccess() *RespondPayChUpdateResp_MsgSuccess {
	if x, ok := x.GetResponse().(*RespondPayChUpdateResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *RespondPayChUpdateResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*RespondPayChUpdateResp_Error); ok {
		return x.Error
	}
	return nil
}

type isRespondPayChUpdateResp_Response interface {
	isRespondPayChUpdateResp_Response()
}

type RespondPayChUpdateResp_MsgSuccess_ struct {
	MsgSuccess *RespondPayChUpdateResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type RespondPayChUpdateResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*RespondPayChUpdateResp_MsgSuccess_) isRespondPayChUpdateResp_Response() {}

func (*RespondPayChUpdateResp_Error) isRespondPayChUpdateResp_Response() {}

type GetPayChInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChID      string `protobuf:"bytes,2,opt,name=chID,proto3" json:"chID,omitempty"`
}

func (x *GetPayChInfoReq) Reset() {
	*x = GetPayChInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChInfoReq) ProtoMessage() {}

func (x *GetPayChInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChInfoReq.ProtoReflect.Descriptor instead.
func (*GetPayChInfoReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{40}
}

func (x *GetPayChInfoReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *GetPayChInfoReq) GetChID() string {
	if x != nil {
		return x.ChID
	}
	return ""
}

type GetPayChInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*GetPayChInfoResp_MsgSuccess_
	//	*GetPayChInfoResp_Error
	Response isGetPayChInfoResp_Response `protobuf_oneof:"response"`
}

func (x *GetPayChInfoResp) Reset() {
	*x = GetPayChInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChInfoResp) ProtoMessage() {}

func (x *GetPayChInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChInfoResp.ProtoReflect.Descriptor instead.
func (*GetPayChInfoResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{41}
}

func (m *GetPayChInfoResp) GetResponse() isGetPayChInfoResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetPayChInfoResp) GetMsgSuccess() *GetPayChInfoResp_MsgSuccess {
	if x, ok := x.GetResponse().(*GetPayChInfoResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *GetPayChInfoResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*GetPayChInfoResp_Error); ok {
		return x.Error
	}
	return nil
}

type isGetPayChInfoResp_Response interface {
	isGetPayChInfoResp_Response()
}

type GetPayChInfoResp_MsgSuccess_ struct {
	MsgSuccess *GetPayChInfoResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type GetPayChInfoResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*GetPayChInfoResp_MsgSuccess_) isGetPayChInfoResp_Response() {}

func (*GetPayChInfoResp_Error) isGetPayChInfoResp_Response() {}

type ClosePayChReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ChID      string `protobuf:"bytes,2,opt,name=chID,proto3" json:"chID,omitempty"`
}

func (x *ClosePayChReq) Reset() {
	*x = ClosePayChReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosePayChReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePayChReq) ProtoMessage() {}

func (x *ClosePayChReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePayChReq.ProtoReflect.Descriptor instead.
func (*ClosePayChReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{42}
}

func (x *ClosePayChReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *ClosePayChReq) GetChID() string {
	if x != nil {
		return x.ChID
	}
	return ""
}

type ClosePayChResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*ClosePayChResp_MsgSuccess_
	//	*ClosePayChResp_Error
	Response isClosePayChResp_Response `protobuf_oneof:"response"`
}

func (x *ClosePayChResp) Reset() {
	*x = ClosePayChResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosePayChResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePayChResp) ProtoMessage() {}

func (x *ClosePayChResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePayChResp.ProtoReflect.Descriptor instead.
func (*ClosePayChResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{43}
}

func (m *ClosePayChResp) GetResponse() isClosePayChResp_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ClosePayChResp) GetMsgSuccess() *ClosePayChResp_MsgSuccess {
	if x, ok := x.GetResponse().(*ClosePayChResp_MsgSuccess_); ok {
		return x.MsgSuccess
	}
	return nil
}

func (x *ClosePayChResp) GetError() *MsgError {
	if x, ok := x.GetResponse().(*ClosePayChResp_Error); ok {
		return x.Error
	}
	return nil
}

type isClosePayChResp_Response interface {
	isClosePayChResp_Response()
}

type ClosePayChResp_MsgSuccess_ struct {
	MsgSuccess *ClosePayChResp_MsgSuccess `protobuf:"bytes,1,opt,name=msgSuccess,proto3,oneof"`
}

type ClosePayChResp_Error struct {
	Error *MsgError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ClosePayChResp_MsgSuccess_) isClosePayChResp_Response() {}

func (*ClosePayChResp_Error) isClosePayChResp_Response() {}

type OpenSessionResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID   string       `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	RestoredChs []*PayChInfo `protobuf:"bytes,2,rep,name=restoredChs,proto3" json:"restoredChs,omitempty"`
}

func (x *OpenSessionResp_MsgSuccess) Reset() {
	*x = OpenSessionResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSessionResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionResp_MsgSuccess) ProtoMessage() {}

func (x *OpenSessionResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSessionResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*OpenSessionResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11, 0}
}

func (x *OpenSessionResp_MsgSuccess) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *OpenSessionResp_MsgSuccess) GetRestoredChs() []*PayChInfo {
	if x != nil {
		return x.RestoredChs
	}
	return nil
}

type AddPeerIDResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AddPeerIDResp_MsgSuccess) Reset() {
	*x = AddPeerIDResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPeerIDResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPeerIDResp_MsgSuccess) ProtoMessage() {}

func (x *AddPeerIDResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPeerIDResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*AddPeerIDResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17, 0}
}

func (x *AddPeerIDResp_MsgSuccess) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetPeerIDResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID *PeerID `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
}

func (x *GetPeerIDResp_MsgSuccess) Reset() {
	*x = GetPeerIDResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeerIDResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerIDResp_MsgSuccess) ProtoMessage() {}

func (x *GetPeerIDResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerIDResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*GetPeerIDResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19, 0}
}

func (x *GetPeerIDResp_MsgSuccess) GetPeerID() *PeerID {
	if x != nil {
		return x.PeerID
	}
	return nil
}

type OpenPayChResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenedPayChInfo *PayChInfo `protobuf:"bytes,1,opt,name=openedPayChInfo,proto3" json:"openedPayChInfo,omitempty"`
}

func (x *OpenPayChResp_MsgSuccess) Reset() {
	*x = OpenPayChResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPayChResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPayChResp_MsgSuccess) ProtoMessage() {}

func (x *OpenPayChResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPayChResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*OpenPayChResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21, 0}
}

func (x *OpenPayChResp_MsgSuccess) GetOpenedPayChInfo() *PayChInfo {
	if x != nil {
		return x.OpenedPayChInfo
	}
	return nil
}

type GetPayChsInfoResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenPayChsInfo []*PayChInfo `protobuf:"bytes,1,rep,name=openPayChsInfo,proto3" json:"openPayChsInfo,omitempty"`
}

func (x *GetPayChsInfoResp_MsgSuccess) Reset() {
	*x = GetPayChsInfoResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChsInfoResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChsInfoResp_MsgSuccess) ProtoMessage() {}

func (x *GetPayChsInfoResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChsInfoResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*GetPayChsInfoResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{23, 0}
}

func (x *GetPayChsInfoResp_MsgSuccess) GetOpenPayChsInfo() []*PayChInfo {
	if x != nil {
		return x.OpenPayChsInfo
	}
	return nil
}

type SubPayChProposalsResp_Notify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalID       string   `protobuf:"bytes,2,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
	OpeningBalInfo   *BalInfo `protobuf:"bytes,4,opt,name=openingBalInfo,proto3" json:"openingBalInfo,omitempty"`
	ChallengeDurSecs uint64   `protobuf:"varint,5,opt,name=challengeDurSecs,proto3" json:"challengeDurSecs,omitempty"`
	Expiry           int64    `protobuf:"varint,6,opt,name=expiry,proto3" json:"expiry,omitempty"`
}

func (x *SubPayChProposalsResp_Notify) Reset() {
	*x = SubPayChProposalsResp_Notify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChProposalsResp_Notify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChProposalsResp_Notify) ProtoMessage() {}

func (x *SubPayChProposalsResp_Notify) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChProposalsResp_Notify.ProtoReflect.Descriptor instead.
func (*SubPayChProposalsResp_Notify) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{25, 0}
}

func (x *SubPayChProposalsResp_Notify) GetProposalID() string {
	if x != nil {
		return x.ProposalID
	}
	return ""
}

func (x *SubPayChProposalsResp_Notify) GetOpeningBalInfo() *BalInfo {
	if x != nil {
		return x.OpeningBalInfo
	}
	return nil
}

func (x *SubPayChProposalsResp_Notify) GetChallengeDurSecs() uint64 {
	if x != nil {
		return x.ChallengeDurSecs
	}
	return 0
}

func (x *SubPayChProposalsResp_Notify) GetExpiry() int64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

type UnsubPayChProposalsResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UnsubPayChProposalsResp_MsgSuccess) Reset() {
	*x = UnsubPayChProposalsResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChProposalsResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChProposalsResp_MsgSuccess) ProtoMessage() {}

func (x *UnsubPayChProposalsResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChProposalsResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*UnsubPayChProposalsResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{27, 0}
}

func (x *UnsubPayChProposalsResp_MsgSuccess) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RespondPayChProposalResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenedPayChInfo *PayChInfo `protobuf:"bytes,2,opt,name=openedPayChInfo,proto3" json:"openedPayChInfo,omitempty"`
}

func (x *RespondPayChProposalResp_MsgSuccess) Reset() {
	*x = RespondPayChProposalResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChProposalResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChProposalResp_MsgSuccess) ProtoMessage() {}

func (x *RespondPayChProposalResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChProposalResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*RespondPayChProposalResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{29, 0}
}

func (x *RespondPayChProposalResp_MsgSuccess) GetOpenedPayChInfo() *PayChInfo {
	if x != nil {
		return x.OpenedPayChInfo
	}
	return nil
}

type CloseSessionResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenPayChsInfo []*PayChInfo `protobuf:"bytes,1,rep,name=openPayChsInfo,proto3" json:"openPayChsInfo,omitempty"`
}

func (x *CloseSessionResp_MsgSuccess) Reset() {
	*x = CloseSessionResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSessionResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionResp_MsgSuccess) ProtoMessage() {}

func (x *CloseSessionResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*CloseSessionResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{31, 0}
}

func (x *CloseSessionResp_MsgSuccess) GetOpenPayChsInfo() []*PayChInfo {
	if x != nil {
		return x.OpenPayChsInfo
	}
	return nil
}

type CloseSessionResp_MsgError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenPayChsInfo []*PayChInfo `protobuf:"bytes,1,rep,name=openPayChsInfo,proto3" json:"openPayChsInfo,omitempty"`
	Error          string       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CloseSessionResp_MsgError) Reset() {
	*x = CloseSessionResp_MsgError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSessionResp_MsgError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionResp_MsgError) ProtoMessage() {}

func (x *CloseSessionResp_MsgError) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionResp_MsgError.ProtoReflect.Descriptor instead.
func (*CloseSessionResp_MsgError) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{31, 1}
}

func (x *CloseSessionResp_MsgError) GetOpenPayChsInfo() []*PayChInfo {
	if x != nil {
		return x.OpenPayChsInfo
	}
	return nil
}

func (x *CloseSessionResp_MsgError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SendPayChUpdateResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedPayChInfo *PayChInfo `protobuf:"bytes,1,opt,name=updatedPayChInfo,proto3" json:"updatedPayChInfo,omitempty"`
}

func (x *SendPayChUpdateResp_MsgSuccess) Reset() {
	*x = SendPayChUpdateResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPayChUpdateResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPayChUpdateResp_MsgSuccess) ProtoMessage() {}

func (x *SendPayChUpdateResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPayChUpdateResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*SendPayChUpdateResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{33, 0}
}

func (x *SendPayChUpdateResp_MsgSuccess) GetUpdatedPayChInfo() *PayChInfo {
	if x != nil {
		return x.UpdatedPayChInfo
	}
	return nil
}

type SubPayChUpdatesResp_Notify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateID          string                                  `protobuf:"bytes,1,opt,name=updateID,proto3" json:"updateID,omitempty"`
	ProposedPayChInfo *PayChInfo                              `protobuf:"bytes,2,opt,name=proposedPayChInfo,proto3" json:"proposedPayChInfo,omitempty"`
	Type              SubPayChUpdatesResp_Notify_ChUpdateType `protobuf:"varint,3,opt,name=Type,proto3,enum=pb.SubPayChUpdatesResp_Notify_ChUpdateType" json:"Type,omitempty"`
	Expiry            int64                                   `protobuf:"varint,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	Error             string                                  `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SubPayChUpdatesResp_Notify) Reset() {
	*x = SubPayChUpdatesResp_Notify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPayChUpdatesResp_Notify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPayChUpdatesResp_Notify) ProtoMessage() {}

func (x *SubPayChUpdatesResp_Notify) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPayChUpdatesResp_Notify.ProtoReflect.Descriptor instead.
func (*SubPayChUpdatesResp_Notify) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{35, 0}
}

func (x *SubPayChUpdatesResp_Notify) GetUpdateID() string {
	if x != nil {
		return x.UpdateID
	}
	return ""
}

func (x *SubPayChUpdatesResp_Notify) GetProposedPayChInfo() *PayChInfo {
	if x != nil {
		return x.ProposedPayChInfo
	}
	return nil
}

func (x *SubPayChUpdatesResp_Notify) GetType() SubPayChUpdatesResp_Notify_ChUpdateType {
	if x != nil {
		return x.Type
	}
	return SubPayChUpdatesResp_Notify_open
}

func (x *SubPayChUpdatesResp_Notify) GetExpiry() int64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

func (x *SubPayChUpdatesResp_Notify) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UnsubPayChUpdatesResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UnsubPayChUpdatesResp_MsgSuccess) Reset() {
	*x = UnsubPayChUpdatesResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubPayChUpdatesResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubPayChUpdatesResp_MsgSuccess) ProtoMessage() {}

func (x *UnsubPayChUpdatesResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubPayChUpdatesResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*UnsubPayChUpdatesResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{37, 0}
}

func (x *UnsubPayChUpdatesResp_MsgSuccess) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RespondPayChUpdateResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedPayChInfo *PayChInfo `protobuf:"bytes,1,opt,name=updatedPayChInfo,proto3" json:"updatedPayChInfo,omitempty"`
}

func (x *RespondPayChUpdateResp_MsgSuccess) Reset() {
	*x = RespondPayChUpdateResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondPayChUpdateResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondPayChUpdateResp_MsgSuccess) ProtoMessage() {}

func (x *RespondPayChUpdateResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondPayChUpdateResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*RespondPayChUpdateResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{39, 0}
}

func (x *RespondPayChUpdateResp_MsgSuccess) GetUpdatedPayChInfo() *PayChInfo {
	if x != nil {
		return x.UpdatedPayChInfo
	}
	return nil
}

type GetPayChInfoResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayChInfo *PayChInfo `protobuf:"bytes,1,opt,name=payChInfo,proto3" json:"payChInfo,omitempty"`
}

func (x *GetPayChInfoResp_MsgSuccess) Reset() {
	*x = GetPayChInfoResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChInfoResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChInfoResp_MsgSuccess) ProtoMessage() {}

func (x *GetPayChInfoResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChInfoResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*GetPayChInfoResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{41, 0}
}

func (x *GetPayChInfoResp_MsgSuccess) GetPayChInfo() *PayChInfo {
	if x != nil {
		return x.PayChInfo
	}
	return nil
}

type ClosePayChResp_MsgSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClosedPayChInfo *PayChInfo `protobuf:"bytes,1,opt,name=closedPayChInfo,proto3" json:"closedPayChInfo,omitempty"`
}

func (x *ClosePayChResp_MsgSuccess) Reset() {
	*x = ClosePayChResp_MsgSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosePayChResp_MsgSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePayChResp_MsgSuccess) ProtoMessage() {}

func (x *ClosePayChResp_MsgSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePayChResp_MsgSuccess.ProtoReflect.Descriptor instead.
func (*ClosePayChResp_MsgSuccess) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{43, 0}
}

func (x *ClosePayChResp_MsgSuccess) GetClosedPayChInfo() *PayChInfo {
	if x != nil {
		return x.ClosedPayChInfo
	}
	return nil
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22,
	0x86, 0x01, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x66, 0x66, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x6d, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x62, 0x61, 0x6c, 0x22, 0x60, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x68, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x42,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x08, 0x4d, 0x73, 0x67,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x97, 0x03, 0x0a, 0x0a,
	0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x56, 0x32, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5d, 0x0a, 0x19, 0x45, 0x72, 0x72, 0x56, 0x32, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x45,
	0x72, 0x72, 0x56, 0x32, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x19, 0x45, 0x72, 0x72, 0x56,
	0x32, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x57, 0x0a, 0x17, 0x45, 0x72, 0x72, 0x56, 0x32, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x56,
	0x32, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x48, 0x00, 0x52, 0x17, 0x45, 0x72, 0x72, 0x56, 0x32, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x5a,
	0x0a, 0x18, 0x45, 0x72, 0x72, 0x56, 0x32, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x56, 0x32, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x18, 0x45, 0x72, 0x72, 0x56, 0x32, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3f, 0x0a, 0x19, 0x45, 0x72, 0x72, 0x56, 0x32, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3d, 0x0a, 0x17, 0x45, 0x72, 0x72, 0x56, 0x32, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x18, 0x45, 0x72, 0x72, 0x56, 0x32, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x0e, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x22, 0xcf, 0x01,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x64, 0x6a, 0x75, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x61, 0x64, 0x6a, 0x75, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x69, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22,
	0x30, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x22, 0xe2, 0x01, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x5b, 0x0a,
	0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x0b, 0x72, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x64, 0x43, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x72,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x43, 0x68, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x09, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x22, 0x1e, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0x09, 0x0a, 0x07, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x71, 0x22, 0x1e, 0x0a, 0x08,
	0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x70, 0x69, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x70, 0x69, 0x73, 0x22, 0x50, 0x0a, 0x0c,
	0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x06, 0x70, 0x65,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22, 0xab,
	0x01, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3e, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65,
	0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x56, 0x32, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x26, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x22, 0xb5, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x56,
	0x32, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x30, 0x0a, 0x0a, 0x4d, 0x73,
	0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x49, 0x44, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0c, 0x4f, 0x70, 0x65,
	0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x42, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x10,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x44, 0x75, 0x72, 0x53, 0x65, 0x63, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x44, 0x75, 0x72, 0x53, 0x65, 0x63, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x0d, 0x4f, 0x70, 0x65,
	0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0a, 0x6d, 0x73,
	0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a,
	0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0x45, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x37,
	0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xce, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0a, 0x6d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x43, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x6e,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xa9, 0x02, 0x0a,
	0x15, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa1, 0x01, 0x0a, 0x06, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x44, 0x75, 0x72, 0x53, 0x65, 0x63, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x44, 0x75, 0x72,
	0x53, 0x65, 0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x16, 0x55, 0x6e, 0x73, 0x75,
	0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x22, 0xbd, 0x01, 0x0a, 0x17, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0a,
	0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73,
	0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x26, 0x0a, 0x0a,
	0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x6f, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x22, 0xde, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49,
	0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d,
	0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73,
	0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a,
	0x45, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a,
	0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x45, 0x0a, 0x0f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0xb6, 0x02, 0x0a, 0x10, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41,
	0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x43, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6f,
	0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x57, 0x0a,
	0x08, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x0e, 0x6f, 0x70, 0x65,
	0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x74, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x68, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x79, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd6, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x44, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73,
	0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x47, 0x0a, 0x0a,
	0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x39, 0x0a, 0x10, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x46, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x70, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x68, 0x49, 0x44, 0x22, 0x85, 0x03, 0x0a, 0x13, 0x53, 0x75,
	0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x38, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0x81, 0x02, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x2f, 0x0a, 0x0c, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x10, 0x02, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x48, 0x0a, 0x14, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x68, 0x49, 0x44, 0x22, 0xb9, 0x01, 0x0a, 0x15,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48,
	0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x1a, 0x26, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x68,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x47, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a,
	0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0x47, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x39,
	0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x68, 0x49, 0x44, 0x22, 0xc2, 0x01, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x41, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x39, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x43, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x61, 0x79, 0x43, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x41, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x68,
	0x49, 0x44, 0x22, 0xca, 0x01, 0x0a, 0x0e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x73,
	0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x45, 0x0a, 0x0a,
	0x4d, 0x73, 0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x0f, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a,
	0x5c, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x03, 0x2a, 0x86, 0x04,
	0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x64,
	0x65, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x72, 0x72, 0x56, 0x32, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x64, 0x6f, 0x75, 0x74,
	0x10, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x72, 0x72, 0x56, 0x32, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x50, 0x65, 0x65, 0x72, 0x10, 0x66, 0x12, 0x16, 0x0a, 0x12, 0x45,
	0x72, 0x72, 0x56, 0x32, 0x50, 0x65, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x65,
	0x64, 0x10, 0x67, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x72, 0x72, 0x56, 0x32, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x64, 0x4f, 0x75, 0x74,
	0x10, 0x68, 0x12, 0x1a, 0x0a, 0x15, 0x45, 0x72, 0x72, 0x56, 0x32, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xc9, 0x01, 0x12, 0x18,
	0x0a, 0x13, 0x45, 0x72, 0x72, 0x56, 0x32, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0xca, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x56,
	0x32, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x10, 0xcb, 0x01, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x72, 0x72, 0x56, 0x32, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xcc,
	0x01, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x72, 0x72, 0x56, 0x32, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0xcd, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x45, 0x72,
	0x72, 0x56, 0x32, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x74, 0x52,
	0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x10, 0xce, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x45,
	0x72, 0x72, 0x56, 0x32, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x10, 0xcf, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x56, 0x32,
	0x54, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x10, 0xad, 0x02, 0x12, 0x1e, 0x0a,
	0x19, 0x45, 0x72, 0x72, 0x56, 0x32, 0x49, 0x6e, 0x73, 0x75, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65,
	0x6e, 0x74, 0x42, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x54, 0x78, 0x10, 0xae, 0x02, 0x12, 0x1f, 0x0a,
	0x1a, 0x45, 0x72, 0x72, 0x56, 0x32, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0xaf, 0x02, 0x12, 0x23,
	0x0a, 0x1e, 0x45, 0x72, 0x72, 0x56, 0x32, 0x49, 0x6e, 0x73, 0x75, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x10, 0xb0, 0x02, 0x12, 0x19, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x56, 0x32, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x10, 0x91, 0x03, 0x12, 0x16,
	0x0a, 0x11, 0x45, 0x72, 0x72, 0x56, 0x32, 0x4f, 0x66, 0x66, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x10, 0x92, 0x03, 0x32, 0xf0, 0x08, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x41, 0x50, 0x49, 0x12, 0x32, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0b, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x04, 0x48, 0x65, 0x6c,
	0x70, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x32,
	0x0a, 0x09, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x32, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11, 0x53, 0x75,
	0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x12,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12, 0x50, 0x0a, 0x13, 0x55, 0x6e, 0x73, 0x75,
	0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x12,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x14, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x3b, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0f,
	0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x70, 0x61,
	0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4a, 0x0a, 0x11, 0x55, 0x6e,
	0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x43, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 60)
var file_api_proto_goTypes = []interface{}{
	(ErrorCategory)(0), // 0: pb.ErrorCategory
	(ErrorCode)(0),     // 1: pb.ErrorCode
	(SubPayChUpdatesResp_Notify_ChUpdateType)(0), // 2: pb.SubPayChUpdatesResp.Notify.ChUpdateType
	(*PeerID)(nil),                              // 3: pb.PeerID
	(*BalInfo)(nil),                             // 4: pb.BalInfo
	(*PayChInfo)(nil),                           // 5: pb.PayChInfo
	(*MsgError)(nil),                            // 6: pb.MsgError
	(*MsgErrorV2)(nil),                          // 7: pb.MsgErrorV2
	(*ErrV2InfoResourceNotFound)(nil),           // 8: pb.ErrV2InfoResourceNotFound
	(*ErrV2InfoResourceExists)(nil),             // 9: pb.ErrV2InfoResourceExists
	(*ErrV2InfoInvalidArgument)(nil),            // 10: pb.ErrV2InfoInvalidArgument
	(*GetConfigReq)(nil),                        // 11: pb.GetConfigReq
	(*GetConfigResp)(nil),                       // 12: pb.GetConfigResp
	(*OpenSessionReq)(nil),                      // 13: pb.OpenSessionReq
	(*OpenSessionResp)(nil),                     // 14: pb.OpenSessionResp
	(*TimeReq)(nil),                             // 15: pb.TimeReq
	(*TimeResp)(nil),                            // 16: pb.TimeResp
	(*HelpReq)(nil),                             // 17: pb.HelpReq
	(*HelpResp)(nil),                            // 18: pb.HelpResp
	(*AddPeerIDReq)(nil),                        // 19: pb.AddPeerIDReq
	(*AddPeerIDResp)(nil),                       // 20: pb.AddPeerIDResp
	(*GetPeerIDReq)(nil),                        // 21: pb.GetPeerIDReq
	(*GetPeerIDResp)(nil),                       // 22: pb.GetPeerIDResp
	(*OpenPayChReq)(nil),                        // 23: pb.OpenPayChReq
	(*OpenPayChResp)(nil),                       // 24: pb.OpenPayChResp
	(*GetPayChsInfoReq)(nil),                    // 25: pb.GetPayChsInfoReq
	(*GetPayChsInfoResp)(nil),                   // 26: pb.GetPayChsInfoResp
	(*SubPayChProposalsReq)(nil),                // 27: pb.SubPayChProposalsReq
	(*SubPayChProposalsResp)(nil),               // 28: pb.SubPayChProposalsResp
	(*UnsubPayChProposalsReq)(nil),              // 29: pb.UnsubPayChProposalsReq
	(*UnsubPayChProposalsResp)(nil),             // 30: pb.UnsubPayChProposalsResp
	(*RespondPayChProposalReq)(nil),             // 31: pb.RespondPayChProposalReq
	(*RespondPayChProposalResp)(nil),            // 32: pb.RespondPayChProposalResp
	(*CloseSessionReq)(nil),                     // 33: pb.CloseSessionReq
	(*CloseSessionResp)(nil),                    // 34: pb.CloseSessionResp
	(*SendPayChUpdateReq)(nil),                  // 35: pb.SendPayChUpdateReq
	(*SendPayChUpdateResp)(nil),                 // 36: pb.SendPayChUpdateResp
	(*SubpayChUpdatesReq)(nil),                  // 37: pb.SubpayChUpdatesReq
	(*SubPayChUpdatesResp)(nil),                 // 38: pb.SubPayChUpdatesResp
	(*UnsubPayChUpdatesReq)(nil),                // 39: pb.UnsubPayChUpdatesReq
	(*UnsubPayChUpdatesResp)(nil),               // 40: pb.UnsubPayChUpdatesResp
	(*RespondPayChUpdateReq)(nil),               // 41: pb.RespondPayChUpdateReq
	(*RespondPayChUpdateResp)(nil),              // 42: pb.RespondPayChUpdateResp
	(*GetPayChInfoReq)(nil),                     // 43: pb.GetPayChInfoReq
	(*GetPayChInfoResp)(nil),                    // 44: pb.GetPayChInfoResp
	(*ClosePayChReq)(nil),                       // 45: pb.ClosePayChReq
	(*ClosePayChResp)(nil),                      // 46: pb.ClosePayChResp
	(*OpenSessionResp_MsgSuccess)(nil),          // 47: pb.OpenSessionResp.MsgSuccess
	(*AddPeerIDResp_MsgSuccess)(nil),            // 48: pb.AddPeerIDResp.MsgSuccess
	(*GetPeerIDResp_MsgSuccess)(nil),            // 49: pb.GetPeerIDResp.MsgSuccess
	(*OpenPayChResp_MsgSuccess)(nil),            // 50: pb.OpenPayChResp.MsgSuccess
	(*GetPayChsInfoResp_MsgSuccess)(nil),        // 51: pb.GetPayChsInfoResp.MsgSuccess
	(*SubPayChProposalsResp_Notify)(nil),        // 52: pb.SubPayChProposalsResp.Notify
	(*UnsubPayChProposalsResp_MsgSuccess)(nil),  // 53: pb.UnsubPayChProposalsResp.MsgSuccess
	(*RespondPayChProposalResp_MsgSuccess)(nil), // 54: pb.RespondPayChProposalResp.MsgSuccess
	(*CloseSessionResp_MsgSuccess)(nil),         // 55: pb.CloseSessionResp.MsgSuccess
	(*CloseSessionResp_MsgError)(nil),           // 56: pb.CloseSessionResp.MsgError
	(*SendPayChUpdateResp_MsgSuccess)(nil),      // 57: pb.SendPayChUpdateResp.MsgSuccess
	(*SubPayChUpdatesResp_Notify)(nil),          // 58: pb.SubPayChUpdatesResp.Notify
	(*UnsubPayChUpdatesResp_MsgSuccess)(nil),    // 59: pb.UnsubPayChUpdatesResp.MsgSuccess
	(*RespondPayChUpdateResp_MsgSuccess)(nil),   // 60: pb.RespondPayChUpdateResp.MsgSuccess
	(*GetPayChInfoResp_MsgSuccess)(nil),         // 61: pb.GetPayChInfoResp.MsgSuccess
	(*ClosePayChResp_MsgSuccess)(nil),           // 62: pb.ClosePayChResp.MsgSuccess
}
var file_api_proto_depIdxs = []int32{
	4,  // 0: pb.PayChInfo.balInfo:type_name -> pb.BalInfo
	0,  // 1: pb.MsgErrorV2.category:type_name -> pb.ErrorCategory
	1,  // 2: pb.MsgErrorV2.code:type_name -> pb.ErrorCode
	8,  // 3: pb.MsgErrorV2.ErrV2InfoResourceNotFound:type_name -> pb.ErrV2InfoResourceNotFound
	9,  // 4: pb.MsgErrorV2.ErrV2InfoResourceExists:type_name -> pb.ErrV2InfoResourceExists
	10, // 5: pb.MsgErrorV2.ErrV2InfoInvalidArgument:type_name -> pb.ErrV2InfoInvalidArgument
	47, // 6: pb.OpenSessionResp.msgSuccess:type_name -> pb.OpenSessionResp.MsgSuccess
	6,  // 7: pb.OpenSessionResp.error:type_name -> pb.MsgError
	3,  // 8: pb.AddPeerIDReq.peerID:type_name -> pb.PeerID
	48, // 9: pb.AddPeerIDResp.msgSuccess:type_name -> pb.AddPeerIDResp.MsgSuccess
	7,  // 10: pb.AddPeerIDResp.error:type_name -> pb.MsgErrorV2
	49, // 11: pb.GetPeerIDResp.msgSuccess:type_name -> pb.GetPeerIDResp.MsgSuccess
	7,  // 12: pb.GetPeerIDResp.error:type_name -> pb.MsgErrorV2
	4,  // 13: pb.OpenPayChReq.openingBalInfo:type_name -> pb.BalInfo
	50, // 14: pb.OpenPayChResp.msgSuccess:type_name -> pb.OpenPayChResp.MsgSuccess
	6,  // 15: pb.OpenPayChResp.error:type_name -> pb.MsgError
	51, // 16: pb.GetPayChsInfoResp.msgSuccess:type_name -> pb.GetPayChsInfoResp.MsgSuccess
	6,  // 17: pb.GetPayChsInfoResp.error:type_name -> pb.MsgError
	52, // 18: pb.SubPayChProposalsResp.notify:type_name -> pb.SubPayChProposalsResp.Notify
	6,  // 19: pb.SubPayChProposalsResp.error:type_name -> pb.MsgError
	53, // 20: pb.UnsubPayChProposalsResp.msgSuccess:type_name -> pb.UnsubPayChProposalsResp.MsgSuccess
	6,  // 21: pb.UnsubPayChProposalsResp.error:type_name -> pb.MsgError
	54, // 22: pb.RespondPayChProposalResp.msgSuccess:type_name -> pb.RespondPayChProposalResp.MsgSuccess
	6,  // 23: pb.RespondPayChProposalResp.error:type_name -> pb.MsgError
	55, // 24: pb.CloseSessionResp.msgSuccess:type_name -> pb.CloseSessionResp.MsgSuccess
	56, // 25: pb.CloseSessionResp.error:type_name -> pb.CloseSessionResp.MsgError
	57, // 26: pb.SendPayChUpdateResp.msgSuccess:type_name -> pb.SendPayChUpdateResp.MsgSuccess
	6,  // 27: pb.SendPayChUpdateResp.error:type_name -> pb.MsgError
	58, // 28: pb.SubPayChUpdatesResp.notify:type_name -> pb.SubPayChUpdatesResp.Notify
	6,  // 29: pb.SubPayChUpdatesResp.error:type_name -> pb.MsgError
	59, // 30: pb.UnsubPayChUpdatesResp.msgSuccess:type_name -> pb.UnsubPayChUpdatesResp.MsgSuccess
	6,  // 31: pb.UnsubPayChUpdatesResp.error:type_name -> pb.MsgError
	60, // 32: pb.RespondPayChUpdateResp.msgSuccess:type_name -> pb.RespondPayChUpdateResp.MsgSuccess
	6,  // 33: pb.RespondPayChUpdateResp.error:type_name -> pb.MsgError
	61, // 34: pb.GetPayChInfoResp.msgSuccess:type_name -> pb.GetPayChInfoResp.MsgSuccess
	6,  // 35: pb.GetPayChInfoResp.error:type_name -> pb.MsgError
	62, // 36: pb.ClosePayChResp.msgSuccess:type_name -> pb.ClosePayChResp.MsgSuccess
	6,  // 37: pb.ClosePayChResp.error:type_name -> pb.MsgError
	5,  // 38: pb.OpenSessionResp.MsgSuccess.restoredChs:type_name -> pb.PayChInfo
	3,  // 39: pb.GetPeerIDResp.MsgSuccess.peerID:type_name -> pb.PeerID
	5,  // 40: pb.OpenPayChResp.MsgSuccess.openedPayChInfo:type_name -> pb.PayChInfo
	5,  // 41: pb.GetPayChsInfoResp.MsgSuccess.openPayChsInfo:type_name -> pb.PayChInfo
	4,  // 42: pb.SubPayChProposalsResp.Notify.openingBalInfo:type_name -> pb.BalInfo
	5,  // 43: pb.RespondPayChProposalResp.MsgSuccess.openedPayChInfo:type_name -> pb.PayChInfo
	5,  // 44: pb.CloseSessionResp.MsgSuccess.openPayChsInfo:type_name -> pb.PayChInfo
	5,  // 45: pb.CloseSessionResp.MsgError.openPayChsInfo:type_name -> pb.PayChInfo
	5,  // 46: pb.SendPayChUpdateResp.MsgSuccess.updatedPayChInfo:type_name -> pb.PayChInfo
	5,  // 47: pb.SubPayChUpdatesResp.Notify.proposedPayChInfo:type_name -> pb.PayChInfo
	2,  // 48: pb.SubPayChUpdatesResp.Notify.Type:type_name -> pb.SubPayChUpdatesResp.Notify.ChUpdateType
	5,  // 49: pb.RespondPayChUpdateResp.MsgSuccess.updatedPayChInfo:type_name -> pb.PayChInfo
	5,  // 50: pb.GetPayChInfoResp.MsgSuccess.payChInfo:type_name -> pb.PayChInfo
	5,  // 51: pb.ClosePayChResp.MsgSuccess.closedPayChInfo:type_name -> pb.PayChInfo
	11, // 52: pb.Payment_API.GetConfig:input_type -> pb.GetConfigReq
	13, // 53: pb.Payment_API.OpenSession:input_type -> pb.OpenSessionReq
	15, // 54: pb.Payment_API.Time:input_type -> pb.TimeReq
	17, // 55: pb.Payment_API.Help:input_type -> pb.HelpReq
	19, // 56: pb.Payment_API.AddPeerID:input_type -> pb.AddPeerIDReq
	21, // 57: pb.Payment_API.GetPeerID:input_type -> pb.GetPeerIDReq
	23, // 58: pb.Payment_API.OpenPayCh:input_type -> pb.OpenPayChReq
	25, // 59: pb.Payment_API.GetPayChsInfo:input_type -> pb.GetPayChsInfoReq
	27, // 60: pb.Payment_API.SubPayChProposals:input_type -> pb.SubPayChProposalsReq
	29, // 61: pb.Payment_API.UnsubPayChProposals:input_type -> pb.UnsubPayChProposalsReq
	31, // 62: pb.Payment_API.RespondPayChProposal:input_type -> pb.RespondPayChProposalReq
	33, // 63: pb.Payment_API.CloseSession:input_type -> pb.CloseSessionReq
	35, // 64: pb.Payment_API.SendPayChUpdate:input_type -> pb.SendPayChUpdateReq
	37, // 65: pb.Payment_API.SubPayChUpdates:input_type -> pb.SubpayChUpdatesReq
	39, // 66: pb.Payment_API.UnsubPayChUpdates:input_type -> pb.UnsubPayChUpdatesReq
	41, // 67: pb.Payment_API.RespondPayChUpdate:input_type -> pb.RespondPayChUpdateReq
	43, // 68: pb.Payment_API.GetPayChInfo:input_type -> pb.GetPayChInfoReq
	45, // 69: pb.Payment_API.ClosePayCh:input_type -> pb.ClosePayChReq
	12, // 70: pb.Payment_API.GetConfig:output_type -> pb.GetConfigResp
	14, // 71: pb.Payment_API.OpenSession:output_type -> pb.OpenSessionResp
	16, // 72: pb.Payment_API.Time:output_type -> pb.TimeResp
	18, // 73: pb.Payment_API.Help:output_type -> pb.HelpResp
	20, // 74: pb.Payment_API.AddPeerID:output_type -> pb.AddPeerIDResp
	22, // 75: pb.Payment_API.GetPeerID:output_type -> pb.GetPeerIDResp
	24, // 76: pb.Payment_API.OpenPayCh:output_type -> pb.OpenPayChResp
	26, // 77: pb.Payment_API.GetPayChsInfo:output_type -> pb.GetPayChsInfoResp
	28, // 78: pb.Payment_API.SubPayChProposals:output_type -> pb.SubPayChProposalsResp
	30, // 79: pb.Payment_API.UnsubPayChProposals:output_type -> pb.UnsubPayChProposalsResp
	32, // 80: pb.Payment_API.RespondPayChProposal:output_type -> pb.RespondPayChProposalResp
	34, // 81: pb.Payment_API.CloseSession:output_type -> pb.CloseSessionResp
	36, // 82: pb.Payment_API.SendPayChUpdate:output_type -> pb.SendPayChUpdateResp
	38, // 83: pb.Payment_API.SubPayChUpdates:output_type -> pb.SubPayChUpdatesResp
	40, // 84: pb.Payment_API.UnsubPayChUpdates:output_type -> pb.UnsubPayChUpdatesResp
	42, // 85: pb.Payment_API.RespondPayChUpdate:output_type -> pb.RespondPayChUpdateResp
	44, // 86: pb.Payment_API.GetPayChInfo:output_type -> pb.GetPayChInfoResp
	46, // 87: pb.Payment_API.ClosePayCh:output_type -> pb.ClosePayChResp
	70, // [70:88] is the sub-list for method output_type
	52, // [52:70] is the sub-list for method input_type
	52, // [52:52] is the sub-list for extension type_name
	52, // [52:52] is the sub-list for extension extendee
	0,  // [0:52] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgErrorV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrV2InfoResourceNotFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrV2InfoResourceExists); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrV2InfoInvalidArgument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSessionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPeerIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPeerIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeerIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeerIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPayChReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPayChResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChsInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChsInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChProposalsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChProposalsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChProposalsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChProposalsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChProposalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChProposalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseSessionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPayChUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPayChUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubpayChUpdatesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChUpdatesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChUpdatesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChUpdatesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosePayChReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosePayChResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSessionResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPeerIDResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeerIDResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPayChResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChsInfoResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChProposalsResp_Notify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChProposalsResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChProposalResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseSessionResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseSessionResp_MsgError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPayChUpdateResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPayChUpdatesResp_Notify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubPayChUpdatesResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondPayChUpdateResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayChInfoResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosePayChResp_MsgSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*MsgErrorV2_ErrV2InfoResourceNotFound)(nil),
		(*MsgErrorV2_ErrV2InfoResourceExists)(nil),
		(*MsgErrorV2_ErrV2InfoInvalidArgument)(nil),
	}
	file_api_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*OpenSessionResp_MsgSuccess_)(nil),
		(*OpenSessionResp_Error)(nil),
	}
	file_api_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*AddPeerIDResp_MsgSuccess_)(nil),
		(*AddPeerIDResp_Error)(nil),
	}
	file_api_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*GetPeerIDResp_MsgSuccess_)(nil),
		(*GetPeerIDResp_Error)(nil),
	}
	file_api_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*OpenPayChResp_MsgSuccess_)(nil),
		(*OpenPayChResp_Error)(nil),
	}
	file_api_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*GetPayChsInfoResp_MsgSuccess_)(nil),
		(*GetPayChsInfoResp_Error)(nil),
	}
	file_api_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*SubPayChProposalsResp_Notify_)(nil),
		(*SubPayChProposalsResp_Error)(nil),
	}
	file_api_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*UnsubPayChProposalsResp_MsgSuccess_)(nil),
		(*UnsubPayChProposalsResp_Error)(nil),
	}
	file_api_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*RespondPayChProposalResp_MsgSuccess_)(nil),
		(*RespondPayChProposalResp_Error)(nil),
	}
	file_api_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*CloseSessionResp_MsgSuccess_)(nil),
		(*CloseSessionResp_Error)(nil),
	}
	file_api_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*SendPayChUpdateResp_MsgSuccess_)(nil),
		(*SendPayChUpdateResp_Error)(nil),
	}
	file_api_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*SubPayChUpdatesResp_Notify_)(nil),
		(*SubPayChUpdatesResp_Error)(nil),
	}
	file_api_proto_msgTypes[37].OneofWrappers = []interface{}{
		(*UnsubPayChUpdatesResp_MsgSuccess_)(nil),
		(*UnsubPayChUpdatesResp_Error)(nil),
	}
	file_api_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*RespondPayChUpdateResp_MsgSuccess_)(nil),
		(*RespondPayChUpdateResp_Error)(nil),
	}
	file_api_proto_msgTypes[41].OneofWrappers = []interface{}{
		(*GetPayChInfoResp_MsgSuccess_)(nil),
		(*GetPayChInfoResp_Error)(nil),
	}
	file_api_proto_msgTypes[43].OneofWrappers = []interface{}{
		(*ClosePayChResp_MsgSuccess_)(nil),
		(*ClosePayChResp_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   60,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// Payment_APIClient is the client API for Payment_API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Payment_APIClient interface {
	GetConfig(ctx context.Context, in *GetConfigReq, opts ...grpc.CallOption) (*GetConfigResp, error)
	OpenSession(ctx context.Context, in *OpenSessionReq, opts ...grpc.CallOption) (*OpenSessionResp, error)
	Time(ctx context.Context, in *TimeReq, opts ...grpc.CallOption) (*TimeResp, error)
	Help(ctx context.Context, in *HelpReq, opts ...grpc.CallOption) (*HelpResp, error)
	AddPeerID(ctx context.Context, in *AddPeerIDReq, opts ...grpc.CallOption) (*AddPeerIDResp, error)
	GetPeerID(ctx context.Context, in *GetPeerIDReq, opts ...grpc.CallOption) (*GetPeerIDResp, error)
	OpenPayCh(ctx context.Context, in *OpenPayChReq, opts ...grpc.CallOption) (*OpenPayChResp, error)
	GetPayChsInfo(ctx context.Context, in *GetPayChsInfoReq, opts ...grpc.CallOption) (*GetPayChsInfoResp, error)
	SubPayChProposals(ctx context.Context, in *SubPayChProposalsReq, opts ...grpc.CallOption) (Payment_API_SubPayChProposalsClient, error)
	UnsubPayChProposals(ctx context.Context, in *UnsubPayChProposalsReq, opts ...grpc.CallOption) (*UnsubPayChProposalsResp, error)
	RespondPayChProposal(ctx context.Context, in *RespondPayChProposalReq, opts ...grpc.CallOption) (*RespondPayChProposalResp, error)
	CloseSession(ctx context.Context, in *CloseSessionReq, opts ...grpc.CallOption) (*CloseSessionResp, error)
	SendPayChUpdate(ctx context.Context, in *SendPayChUpdateReq, opts ...grpc.CallOption) (*SendPayChUpdateResp, error)
	SubPayChUpdates(ctx context.Context, in *SubpayChUpdatesReq, opts ...grpc.CallOption) (Payment_API_SubPayChUpdatesClient, error)
	UnsubPayChUpdates(ctx context.Context, in *UnsubPayChUpdatesReq, opts ...grpc.CallOption) (*UnsubPayChUpdatesResp, error)
	RespondPayChUpdate(ctx context.Context, in *RespondPayChUpdateReq, opts ...grpc.CallOption) (*RespondPayChUpdateResp, error)
	GetPayChInfo(ctx context.Context, in *GetPayChInfoReq, opts ...grpc.CallOption) (*GetPayChInfoResp, error)
	ClosePayCh(ctx context.Context, in *ClosePayChReq, opts ...grpc.CallOption) (*ClosePayChResp, error)
}

type payment_APIClient struct {
	cc grpc.ClientConnInterface
}

func NewPayment_APIClient(cc grpc.ClientConnInterface) Payment_APIClient {
	return &payment_APIClient{cc}
}

func (c *payment_APIClient) GetConfig(ctx context.Context, in *GetConfigReq, opts ...grpc.CallOption) (*GetConfigResp, error) {
	out := new(GetConfigResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) OpenSession(ctx context.Context, in *OpenSessionReq, opts ...grpc.CallOption) (*OpenSessionResp, error) {
	out := new(OpenSessionResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/OpenSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) Time(ctx context.Context, in *TimeReq, opts ...grpc.CallOption) (*TimeResp, error) {
	out := new(TimeResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/Time", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) Help(ctx context.Context, in *HelpReq, opts ...grpc.CallOption) (*HelpResp, error) {
	out := new(HelpResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/Help", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) AddPeerID(ctx context.Context, in *AddPeerIDReq, opts ...grpc.CallOption) (*AddPeerIDResp, error) {
	out := new(AddPeerIDResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/AddPeerID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) GetPeerID(ctx context.Context, in *GetPeerIDReq, opts ...grpc.CallOption) (*GetPeerIDResp, error) {
	out := new(GetPeerIDResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/GetPeerID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) OpenPayCh(ctx context.Context, in *OpenPayChReq, opts ...grpc.CallOption) (*OpenPayChResp, error) {
	out := new(OpenPayChResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/OpenPayCh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) GetPayChsInfo(ctx context.Context, in *GetPayChsInfoReq, opts ...grpc.CallOption) (*GetPayChsInfoResp, error) {
	out := new(GetPayChsInfoResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/GetPayChsInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) SubPayChProposals(ctx context.Context, in *SubPayChProposalsReq, opts ...grpc.CallOption) (Payment_API_SubPayChProposalsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Payment_API_serviceDesc.Streams[0], "/pb.Payment_API/SubPayChProposals", opts...)
	if err != nil {
		return nil, err
	}
	x := &payment_APISubPayChProposalsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Payment_API_SubPayChProposalsClient interface {
	Recv() (*SubPayChProposalsResp, error)
	grpc.ClientStream
}

type payment_APISubPayChProposalsClient struct {
	grpc.ClientStream
}

func (x *payment_APISubPayChProposalsClient) Recv() (*SubPayChProposalsResp, error) {
	m := new(SubPayChProposalsResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *payment_APIClient) UnsubPayChProposals(ctx context.Context, in *UnsubPayChProposalsReq, opts ...grpc.CallOption) (*UnsubPayChProposalsResp, error) {
	out := new(UnsubPayChProposalsResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/UnsubPayChProposals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) RespondPayChProposal(ctx context.Context, in *RespondPayChProposalReq, opts ...grpc.CallOption) (*RespondPayChProposalResp, error) {
	out := new(RespondPayChProposalResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/RespondPayChProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) CloseSession(ctx context.Context, in *CloseSessionReq, opts ...grpc.CallOption) (*CloseSessionResp, error) {
	out := new(CloseSessionResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/CloseSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) SendPayChUpdate(ctx context.Context, in *SendPayChUpdateReq, opts ...grpc.CallOption) (*SendPayChUpdateResp, error) {
	out := new(SendPayChUpdateResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/SendPayChUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) SubPayChUpdates(ctx context.Context, in *SubpayChUpdatesReq, opts ...grpc.CallOption) (Payment_API_SubPayChUpdatesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Payment_API_serviceDesc.Streams[1], "/pb.Payment_API/SubPayChUpdates", opts...)
	if err != nil {
		return nil, err
	}
	x := &payment_APISubPayChUpdatesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Payment_API_SubPayChUpdatesClient interface {
	Recv() (*SubPayChUpdatesResp, error)
	grpc.ClientStream
}

type payment_APISubPayChUpdatesClient struct {
	grpc.ClientStream
}

func (x *payment_APISubPayChUpdatesClient) Recv() (*SubPayChUpdatesResp, error) {
	m := new(SubPayChUpdatesResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *payment_APIClient) UnsubPayChUpdates(ctx context.Context, in *UnsubPayChUpdatesReq, opts ...grpc.CallOption) (*UnsubPayChUpdatesResp, error) {
	out := new(UnsubPayChUpdatesResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/UnsubPayChUpdates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) RespondPayChUpdate(ctx context.Context, in *RespondPayChUpdateReq, opts ...grpc.CallOption) (*RespondPayChUpdateResp, error) {
	out := new(RespondPayChUpdateResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/RespondPayChUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) GetPayChInfo(ctx context.Context, in *GetPayChInfoReq, opts ...grpc.CallOption) (*GetPayChInfoResp, error) {
	out := new(GetPayChInfoResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/GetPayChInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payment_APIClient) ClosePayCh(ctx context.Context, in *ClosePayChReq, opts ...grpc.CallOption) (*ClosePayChResp, error) {
	out := new(ClosePayChResp)
	err := c.cc.Invoke(ctx, "/pb.Payment_API/ClosePayCh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Payment_APIServer is the server API for Payment_API service.
type Payment_APIServer interface {
	GetConfig(context.Context, *GetConfigReq) (*GetConfigResp, error)
	OpenSession(context.Context, *OpenSessionReq) (*OpenSessionResp, error)
	Time(context.Context, *TimeReq) (*TimeResp, error)
	Help(context.Context, *HelpReq) (*HelpResp, error)
	AddPeerID(context.Context, *AddPeerIDReq) (*AddPeerIDResp, error)
	GetPeerID(context.Context, *GetPeerIDReq) (*GetPeerIDResp, error)
	OpenPayCh(context.Context, *OpenPayChReq) (*OpenPayChResp, error)
	GetPayChsInfo(context.Context, *GetPayChsInfoReq) (*GetPayChsInfoResp, error)
	SubPayChProposals(*SubPayChProposalsReq, Payment_API_SubPayChProposalsServer) error
	UnsubPayChProposals(context.Context, *UnsubPayChProposalsReq) (*UnsubPayChProposalsResp, error)
	RespondPayChProposal(context.Context, *RespondPayChProposalReq) (*RespondPayChProposalResp, error)
	CloseSession(context.Context, *CloseSessionReq) (*CloseSessionResp, error)
	SendPayChUpdate(context.Context, *SendPayChUpdateReq) (*SendPayChUpdateResp, error)
	SubPayChUpdates(*SubpayChUpdatesReq, Payment_API_SubPayChUpdatesServer) error
	UnsubPayChUpdates(context.Context, *UnsubPayChUpdatesReq) (*UnsubPayChUpdatesResp, error)
	RespondPayChUpdate(context.Context, *RespondPayChUpdateReq) (*RespondPayChUpdateResp, error)
	GetPayChInfo(context.Context, *GetPayChInfoReq) (*GetPayChInfoResp, error)
	ClosePayCh(context.Context, *ClosePayChReq) (*ClosePayChResp, error)
}

// UnimplementedPayment_APIServer can be embedded to have forward compatible implementations.
type UnimplementedPayment_APIServer struct {
}

func (*UnimplementedPayment_APIServer) GetConfig(context.Context, *GetConfigReq) (*GetConfigResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedPayment_APIServer) OpenSession(context.Context, *OpenSessionReq) (*OpenSessionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenSession not implemented")
}
func (*UnimplementedPayment_APIServer) Time(context.Context, *TimeReq) (*TimeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Time not implemented")
}
func (*UnimplementedPayment_APIServer) Help(context.Context, *HelpReq) (*HelpResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Help not implemented")
}
func (*UnimplementedPayment_APIServer) AddPeerID(context.Context, *AddPeerIDReq) (*AddPeerIDResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPeerID not implemented")
}
func (*UnimplementedPayment_APIServer) GetPeerID(context.Context, *GetPeerIDReq) (*GetPeerIDResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPeerID not implemented")
}
func (*UnimplementedPayment_APIServer) OpenPayCh(context.Context, *OpenPayChReq) (*OpenPayChResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenPayCh not implemented")
}
func (*UnimplementedPayment_APIServer) GetPayChsInfo(context.Context, *GetPayChsInfoReq) (*GetPayChsInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPayChsInfo not implemented")
}
func (*UnimplementedPayment_APIServer) SubPayChProposals(*SubPayChProposalsReq, Payment_API_SubPayChProposalsServer) error {
	return status.Errorf(codes.Unimplemented, "method SubPayChProposals not implemented")
}
func (*UnimplementedPayment_APIServer) UnsubPayChProposals(context.Context, *UnsubPayChProposalsReq) (*UnsubPayChProposalsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnsubPayChProposals not implemented")
}
func (*UnimplementedPayment_APIServer) RespondPayChProposal(context.Context, *RespondPayChProposalReq) (*RespondPayChProposalResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RespondPayChProposal not implemented")
}
func (*UnimplementedPayment_APIServer) CloseSession(context.Context, *CloseSessionReq) (*CloseSessionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseSession not implemented")
}
func (*UnimplementedPayment_APIServer) SendPayChUpdate(context.Context, *SendPayChUpdateReq) (*SendPayChUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendPayChUpdate not implemented")
}
func (*UnimplementedPayment_APIServer) SubPayChUpdates(*SubpayChUpdatesReq, Payment_API_SubPayChUpdatesServer) error {
	return status.Errorf(codes.Unimplemented, "method SubPayChUpdates not implemented")
}
func (*UnimplementedPayment_APIServer) UnsubPayChUpdates(context.Context, *UnsubPayChUpdatesReq) (*UnsubPayChUpdatesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnsubPayChUpdates not implemented")
}
func (*UnimplementedPayment_APIServer) RespondPayChUpdate(context.Context, *RespondPayChUpdateReq) (*RespondPayChUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RespondPayChUpdate not implemented")
}
func (*UnimplementedPayment_APIServer) GetPayChInfo(context.Context, *GetPayChInfoReq) (*GetPayChInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPayChInfo not implemented")
}
func (*UnimplementedPayment_APIServer) ClosePayCh(context.Context, *ClosePayChReq) (*ClosePayChResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClosePayCh not implemented")
}

func RegisterPayment_APIServer(s *grpc.Server, srv Payment_APIServer) {
	s.RegisterService(&_Payment_API_serviceDesc, srv)
}

func _Payment_API_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).GetConfig(ctx, req.(*GetConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_OpenSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenSessionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).OpenSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/OpenSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).OpenSession(ctx, req.(*OpenSessionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_Time_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).Time(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/Time",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).Time(ctx, req.(*TimeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_Help_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelpReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).Help(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/Help",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).Help(ctx, req.(*HelpReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_AddPeerID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPeerIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).AddPeerID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/AddPeerID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).AddPeerID(ctx, req.(*AddPeerIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_GetPeerID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPeerIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).GetPeerID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/GetPeerID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).GetPeerID(ctx, req.(*GetPeerIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_OpenPayCh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenPayChReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).OpenPayCh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/OpenPayCh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).OpenPayCh(ctx, req.(*OpenPayChReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_GetPayChsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPayChsInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).GetPayChsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/GetPayChsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).GetPayChsInfo(ctx, req.(*GetPayChsInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_SubPayChProposals_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubPayChProposalsReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(Payment_APIServer).SubPayChProposals(m, &payment_APISubPayChProposalsServer{stream})
}

type Payment_API_SubPayChProposalsServer interface {
	Send(*SubPayChProposalsResp) error
	grpc.ServerStream
}

type payment_APISubPayChProposalsServer struct {
	grpc.ServerStream
}

func (x *payment_APISubPayChProposalsServer) Send(m *SubPayChProposalsResp) error {
	return x.ServerStream.SendMsg(m)
}

func _Payment_API_UnsubPayChProposals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubPayChProposalsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).UnsubPayChProposals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/UnsubPayChProposals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).UnsubPayChProposals(ctx, req.(*UnsubPayChProposalsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_RespondPayChProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RespondPayChProposalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).RespondPayChProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/RespondPayChProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).RespondPayChProposal(ctx, req.(*RespondPayChProposalReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_CloseSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseSessionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).CloseSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/CloseSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).CloseSession(ctx, req.(*CloseSessionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_SendPayChUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendPayChUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).SendPayChUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/SendPayChUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).SendPayChUpdate(ctx, req.(*SendPayChUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_SubPayChUpdates_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubpayChUpdatesReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(Payment_APIServer).SubPayChUpdates(m, &payment_APISubPayChUpdatesServer{stream})
}

type Payment_API_SubPayChUpdatesServer interface {
	Send(*SubPayChUpdatesResp) error
	grpc.ServerStream
}

type payment_APISubPayChUpdatesServer struct {
	grpc.ServerStream
}

func (x *payment_APISubPayChUpdatesServer) Send(m *SubPayChUpdatesResp) error {
	return x.ServerStream.SendMsg(m)
}

func _Payment_API_UnsubPayChUpdates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubPayChUpdatesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).UnsubPayChUpdates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/UnsubPayChUpdates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).UnsubPayChUpdates(ctx, req.(*UnsubPayChUpdatesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_RespondPayChUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RespondPayChUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).RespondPayChUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/RespondPayChUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).RespondPayChUpdate(ctx, req.(*RespondPayChUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_GetPayChInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPayChInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).GetPayChInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/GetPayChInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).GetPayChInfo(ctx, req.(*GetPayChInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payment_API_ClosePayCh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClosePayChReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Payment_APIServer).ClosePayCh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Payment_API/ClosePayCh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Payment_APIServer).ClosePayCh(ctx, req.(*ClosePayChReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Payment_API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Payment_API",
	HandlerType: (*Payment_APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _Payment_API_GetConfig_Handler,
		},
		{
			MethodName: "OpenSession",
			Handler:    _Payment_API_OpenSession_Handler,
		},
		{
			MethodName: "Time",
			Handler:    _Payment_API_Time_Handler,
		},
		{
			MethodName: "Help",
			Handler:    _Payment_API_Help_Handler,
		},
		{
			MethodName: "AddPeerID",
			Handler:    _Payment_API_AddPeerID_Handler,
		},
		{
			MethodName: "GetPeerID",
			Handler:    _Payment_API_GetPeerID_Handler,
		},
		{
			MethodName: "OpenPayCh",
			Handler:    _Payment_API_OpenPayCh_Handler,
		},
		{
			MethodName: "GetPayChsInfo",
			Handler:    _Payment_API_GetPayChsInfo_Handler,
		},
		{
			MethodName: "UnsubPayChProposals",
			Handler:    _Payment_API_UnsubPayChProposals_Handler,
		},
		{
			MethodName: "RespondPayChProposal",
			Handler:    _Payment_API_RespondPayChProposal_Handler,
		},
		{
			MethodName: "CloseSession",
			Handler:    _Payment_API_CloseSession_Handler,
		},
		{
			MethodName: "SendPayChUpdate",
			Handler:    _Payment_API_SendPayChUpdate_Handler,
		},
		{
			MethodName: "UnsubPayChUpdates",
			Handler:    _Payment_API_UnsubPayChUpdates_Handler,
		},
		{
			MethodName: "RespondPayChUpdate",
			Handler:    _Payment_API_RespondPayChUpdate_Handler,
		},
		{
			MethodName: "GetPayChInfo",
			Handler:    _Payment_API_GetPayChInfo_Handler,
		},
		{
			MethodName: "ClosePayCh",
			Handler:    _Payment_API_ClosePayCh_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubPayChProposals",
			Handler:       _Payment_API_SubPayChProposals_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubPayChUpdates",
			Handler:       _Payment_API_SubPayChUpdates_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
